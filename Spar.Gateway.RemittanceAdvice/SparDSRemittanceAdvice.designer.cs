#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spar.Gateway.RemittanceAdvice
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SparDS")]
	public partial class SparDSRemittanceAdvice : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRemittanceAdviceTotalPayment(RemittanceAdviceTotalPayment instance);
    partial void UpdateRemittanceAdviceTotalPayment(RemittanceAdviceTotalPayment instance);
    partial void DeleteRemittanceAdviceTotalPayment(RemittanceAdviceTotalPayment instance);
    partial void InsertRemittanceAdviceOldTaxInvoice(RemittanceAdviceOldTaxInvoice instance);
    partial void UpdateRemittanceAdviceOldTaxInvoice(RemittanceAdviceOldTaxInvoice instance);
    partial void DeleteRemittanceAdviceOldTaxInvoice(RemittanceAdviceOldTaxInvoice instance);
    partial void InsertRemittanceAdviceOtherTax(RemittanceAdviceOtherTax instance);
    partial void UpdateRemittanceAdviceOtherTax(RemittanceAdviceOtherTax instance);
    partial void DeleteRemittanceAdviceOtherTax(RemittanceAdviceOtherTax instance);
    partial void InsertRemittanceAdviceOtherTotal(RemittanceAdviceOtherTotal instance);
    partial void UpdateRemittanceAdviceOtherTotal(RemittanceAdviceOtherTotal instance);
    partial void DeleteRemittanceAdviceOtherTotal(RemittanceAdviceOtherTotal instance);
    partial void InsertRemittanceAdviceTaxCreditNote(RemittanceAdviceTaxCreditNote instance);
    partial void UpdateRemittanceAdviceTaxCreditNote(RemittanceAdviceTaxCreditNote instance);
    partial void DeleteRemittanceAdviceTaxCreditNote(RemittanceAdviceTaxCreditNote instance);
    partial void InsertRemittanceAdviceTaxInvoice(RemittanceAdviceTaxInvoice instance);
    partial void UpdateRemittanceAdviceTaxInvoice(RemittanceAdviceTaxInvoice instance);
    partial void DeleteRemittanceAdviceTaxInvoice(RemittanceAdviceTaxInvoice instance);
    partial void InsertRemittanceAdvice(RemittanceAdvice instance);
    partial void UpdateRemittanceAdvice(RemittanceAdvice instance);
    partial void DeleteRemittanceAdvice(RemittanceAdvice instance);
    partial void InsertRemittanceAdviceDetail(RemittanceAdviceDetail instance);
    partial void UpdateRemittanceAdviceDetail(RemittanceAdviceDetail instance);
    partial void DeleteRemittanceAdviceDetail(RemittanceAdviceDetail instance);
    #endregion
		
		public SparDSRemittanceAdvice() : 
				base(global::Spar.Gateway.RemittanceAdvice.Properties.Settings.Default.SparDSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SparDSRemittanceAdvice(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SparDSRemittanceAdvice(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SparDSRemittanceAdvice(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SparDSRemittanceAdvice(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RemittanceAdviceTotalPayment> RemittanceAdviceTotalPayments
		{
			get
			{
				return this.GetTable<RemittanceAdviceTotalPayment>();
			}
		}
		
		public System.Data.Linq.Table<RemittanceAdviceOldTaxInvoice> RemittanceAdviceOldTaxInvoices
		{
			get
			{
				return this.GetTable<RemittanceAdviceOldTaxInvoice>();
			}
		}
		
		public System.Data.Linq.Table<RemittanceAdviceOtherTax> RemittanceAdviceOtherTaxes
		{
			get
			{
				return this.GetTable<RemittanceAdviceOtherTax>();
			}
		}
		
		public System.Data.Linq.Table<RemittanceAdviceOtherTotal> RemittanceAdviceOtherTotals
		{
			get
			{
				return this.GetTable<RemittanceAdviceOtherTotal>();
			}
		}
		
		public System.Data.Linq.Table<RemittanceAdviceTaxCreditNote> RemittanceAdviceTaxCreditNotes
		{
			get
			{
				return this.GetTable<RemittanceAdviceTaxCreditNote>();
			}
		}
		
		public System.Data.Linq.Table<RemittanceAdviceTaxInvoice> RemittanceAdviceTaxInvoices
		{
			get
			{
				return this.GetTable<RemittanceAdviceTaxInvoice>();
			}
		}
		
		public System.Data.Linq.Table<RemittanceAdvice> RemittanceAdvices
		{
			get
			{
				return this.GetTable<RemittanceAdvice>();
			}
		}
		
		public System.Data.Linq.Table<RemittanceAdviceDetail> RemittanceAdviceDetails
		{
			get
			{
				return this.GetTable<RemittanceAdviceDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdviceTotalPayment")]
	public partial class RemittanceAdviceTotalPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RemittanceAdviceId;
		
		private string _Description;
		
		private System.Nullable<decimal> _DiscountAmountExcl;
		
		private System.Nullable<decimal> _DiscountAmountIncl;
		
		private System.Nullable<decimal> _DocumentAmountExcl;
		
		private System.Nullable<decimal> _DocumentAmountIncl;
		
		private System.Nullable<decimal> _lVatAmountPayable;
		
		private System.Nullable<decimal> _NetAmountIncl;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private EntityRef<RemittanceAdvice> _RemittanceAdvice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRemittanceAdviceIdChanging(System.Guid value);
    partial void OnRemittanceAdviceIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDiscountAmountExclChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountExclChanged();
    partial void OnDiscountAmountInclChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountInclChanged();
    partial void OnDocumentAmountExclChanging(System.Nullable<decimal> value);
    partial void OnDocumentAmountExclChanged();
    partial void OnDocumentAmountInclChanging(System.Nullable<decimal> value);
    partial void OnDocumentAmountInclChanged();
    partial void OnVatAmountPayableChanging(System.Nullable<decimal> value);
    partial void OnVatAmountPayableChanged();
    partial void OnNetAmountInclChanging(System.Nullable<decimal> value);
    partial void OnNetAmountInclChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public RemittanceAdviceTotalPayment()
		{
			this._RemittanceAdvice = default(EntityRef<RemittanceAdvice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceAdviceId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RemittanceAdviceId
		{
			get
			{
				return this._RemittanceAdviceId;
			}
			set
			{
				if ((this._RemittanceAdviceId != value))
				{
					if (this._RemittanceAdvice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._RemittanceAdviceId = value;
					this.SendPropertyChanged("RemittanceAdviceId");
					this.OnRemittanceAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmountExcl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountAmountExcl
		{
			get
			{
				return this._DiscountAmountExcl;
			}
			set
			{
				if ((this._DiscountAmountExcl != value))
				{
					this.OnDiscountAmountExclChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmountExcl = value;
					this.SendPropertyChanged("DiscountAmountExcl");
					this.OnDiscountAmountExclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmountIncl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountAmountIncl
		{
			get
			{
				return this._DiscountAmountIncl;
			}
			set
			{
				if ((this._DiscountAmountIncl != value))
				{
					this.OnDiscountAmountInclChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmountIncl = value;
					this.SendPropertyChanged("DiscountAmountIncl");
					this.OnDiscountAmountInclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentAmountExcl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DocumentAmountExcl
		{
			get
			{
				return this._DocumentAmountExcl;
			}
			set
			{
				if ((this._DocumentAmountExcl != value))
				{
					this.OnDocumentAmountExclChanging(value);
					this.SendPropertyChanging();
					this._DocumentAmountExcl = value;
					this.SendPropertyChanged("DocumentAmountExcl");
					this.OnDocumentAmountExclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentAmountIncl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DocumentAmountIncl
		{
			get
			{
				return this._DocumentAmountIncl;
			}
			set
			{
				if ((this._DocumentAmountIncl != value))
				{
					this.OnDocumentAmountInclChanging(value);
					this.SendPropertyChanging();
					this._DocumentAmountIncl = value;
					this.SendPropertyChanged("DocumentAmountIncl");
					this.OnDocumentAmountInclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lVatAmountPayable", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> VatAmountPayable
		{
			get
			{
				return this._lVatAmountPayable;
			}
			set
			{
				if ((this._lVatAmountPayable != value))
				{
					this.OnVatAmountPayableChanging(value);
					this.SendPropertyChanging();
					this._lVatAmountPayable = value;
					this.SendPropertyChanged("VatAmountPayable");
					this.OnVatAmountPayableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmountIncl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> NetAmountIncl
		{
			get
			{
				return this._NetAmountIncl;
			}
			set
			{
				if ((this._NetAmountIncl != value))
				{
					this.OnNetAmountInclChanging(value);
					this.SendPropertyChanging();
					this._NetAmountIncl = value;
					this.SendPropertyChanged("NetAmountIncl");
					this.OnNetAmountInclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceTotalPayment", Storage="_RemittanceAdvice", ThisKey="RemittanceAdviceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RemittanceAdvice RemittanceAdvice
		{
			get
			{
				return this._RemittanceAdvice.Entity;
			}
			set
			{
				RemittanceAdvice previousValue = this._RemittanceAdvice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdvice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdvice.Entity = null;
						previousValue.RemittanceAdviceTotalPayments.Remove(this);
					}
					this._RemittanceAdvice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceTotalPayments.Add(this);
						this._RemittanceAdviceId = value.Id;
					}
					else
					{
						this._RemittanceAdviceId = default(System.Guid);
					}
					this.SendPropertyChanged("RemittanceAdvice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdviceOldTaxInvoice")]
	public partial class RemittanceAdviceOldTaxInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _InvoiceNumber;
		
		private string _CommissionDeductedDesciption;
		
		private System.Nullable<decimal> _CommissionDeducted;
		
		private string _VatOnCommissionDescription;
		
		private System.Nullable<decimal> _VatOnCommission;
		
		private string _InclCommissionDeductedRADescription;
		
		private System.Nullable<decimal> _InclCommissionDeductedRA;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private EntityRef<RemittanceAdviceTaxInvoice> _RemittanceAdviceTaxInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnCommissionDeductedDesciptionChanging(string value);
    partial void OnCommissionDeductedDesciptionChanged();
    partial void OnCommissionDeductedChanging(System.Nullable<decimal> value);
    partial void OnCommissionDeductedChanged();
    partial void OnVatOnCommissionDescriptionChanging(string value);
    partial void OnVatOnCommissionDescriptionChanged();
    partial void OnVatOnCommissionChanging(System.Nullable<decimal> value);
    partial void OnVatOnCommissionChanged();
    partial void OnInclCommissionDeductedRADescriptionChanging(string value);
    partial void OnInclCommissionDeductedRADescriptionChanged();
    partial void OnInclCommissionDeductedRAChanging(System.Nullable<decimal> value);
    partial void OnInclCommissionDeductedRAChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public RemittanceAdviceOldTaxInvoice()
		{
			this._RemittanceAdviceTaxInvoice = default(EntityRef<RemittanceAdviceTaxInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._RemittanceAdviceTaxInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionDeductedDesciption", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string CommissionDeductedDesciption
		{
			get
			{
				return this._CommissionDeductedDesciption;
			}
			set
			{
				if ((this._CommissionDeductedDesciption != value))
				{
					this.OnCommissionDeductedDesciptionChanging(value);
					this.SendPropertyChanging();
					this._CommissionDeductedDesciption = value;
					this.SendPropertyChanged("CommissionDeductedDesciption");
					this.OnCommissionDeductedDesciptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionDeducted", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> CommissionDeducted
		{
			get
			{
				return this._CommissionDeducted;
			}
			set
			{
				if ((this._CommissionDeducted != value))
				{
					this.OnCommissionDeductedChanging(value);
					this.SendPropertyChanging();
					this._CommissionDeducted = value;
					this.SendPropertyChanged("CommissionDeducted");
					this.OnCommissionDeductedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatOnCommissionDescription", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string VatOnCommissionDescription
		{
			get
			{
				return this._VatOnCommissionDescription;
			}
			set
			{
				if ((this._VatOnCommissionDescription != value))
				{
					this.OnVatOnCommissionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._VatOnCommissionDescription = value;
					this.SendPropertyChanged("VatOnCommissionDescription");
					this.OnVatOnCommissionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatOnCommission", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> VatOnCommission
		{
			get
			{
				return this._VatOnCommission;
			}
			set
			{
				if ((this._VatOnCommission != value))
				{
					this.OnVatOnCommissionChanging(value);
					this.SendPropertyChanging();
					this._VatOnCommission = value;
					this.SendPropertyChanged("VatOnCommission");
					this.OnVatOnCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InclCommissionDeductedRADescription", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string InclCommissionDeductedRADescription
		{
			get
			{
				return this._InclCommissionDeductedRADescription;
			}
			set
			{
				if ((this._InclCommissionDeductedRADescription != value))
				{
					this.OnInclCommissionDeductedRADescriptionChanging(value);
					this.SendPropertyChanging();
					this._InclCommissionDeductedRADescription = value;
					this.SendPropertyChanged("InclCommissionDeductedRADescription");
					this.OnInclCommissionDeductedRADescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InclCommissionDeductedRA", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InclCommissionDeductedRA
		{
			get
			{
				return this._InclCommissionDeductedRA;
			}
			set
			{
				if ((this._InclCommissionDeductedRA != value))
				{
					this.OnInclCommissionDeductedRAChanging(value);
					this.SendPropertyChanging();
					this._InclCommissionDeductedRA = value;
					this.SendPropertyChanged("InclCommissionDeductedRA");
					this.OnInclCommissionDeductedRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdviceTaxInvoice_RemittanceAdviceOldTaxInvoice", Storage="_RemittanceAdviceTaxInvoice", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RemittanceAdviceTaxInvoice RemittanceAdviceTaxInvoice
		{
			get
			{
				return this._RemittanceAdviceTaxInvoice.Entity;
			}
			set
			{
				RemittanceAdviceTaxInvoice previousValue = this._RemittanceAdviceTaxInvoice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdviceTaxInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdviceTaxInvoice.Entity = null;
						previousValue.RemittanceAdviceOldTaxInvoice = null;
					}
					this._RemittanceAdviceTaxInvoice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceOldTaxInvoice = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("RemittanceAdviceTaxInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdviceOtherTax")]
	public partial class RemittanceAdviceOtherTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _RemittanceAdviceTaxInvocieId;
		
		private System.Nullable<System.Guid> _RemittanceAdviceTaxCreditNote;
		
		private string _TotalDescription;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<RemittanceAdviceTaxCreditNote> _RemittanceAdviceTaxCreditNote1;
		
		private EntityRef<RemittanceAdviceTaxInvoice> _RemittanceAdviceTaxInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRemittanceAdviceTaxInvocieIdChanging(System.Nullable<System.Guid> value);
    partial void OnRemittanceAdviceTaxInvocieIdChanged();
    partial void OnRemittanceAdviceTaxCreditNoteIdChanging(System.Nullable<System.Guid> value);
    partial void OnRemittanceAdviceTaxCreditNoteIdChanged();
    partial void OnTotalDescriptionChanging(string value);
    partial void OnTotalDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public RemittanceAdviceOtherTax()
		{
			this._RemittanceAdviceTaxCreditNote1 = default(EntityRef<RemittanceAdviceTaxCreditNote>);
			this._RemittanceAdviceTaxInvoice = default(EntityRef<RemittanceAdviceTaxInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceAdviceTaxInvocieId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RemittanceAdviceTaxInvocieId
		{
			get
			{
				return this._RemittanceAdviceTaxInvocieId;
			}
			set
			{
				if ((this._RemittanceAdviceTaxInvocieId != value))
				{
					if (this._RemittanceAdviceTaxInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceAdviceTaxInvocieIdChanging(value);
					this.SendPropertyChanging();
					this._RemittanceAdviceTaxInvocieId = value;
					this.SendPropertyChanged("RemittanceAdviceTaxInvocieId");
					this.OnRemittanceAdviceTaxInvocieIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceAdviceTaxCreditNote", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> RemittanceAdviceTaxCreditNoteId
		{
			get
			{
				return this._RemittanceAdviceTaxCreditNote;
			}
			set
			{
				if ((this._RemittanceAdviceTaxCreditNote != value))
				{
					if (this._RemittanceAdviceTaxCreditNote1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceAdviceTaxCreditNoteIdChanging(value);
					this.SendPropertyChanging();
					this._RemittanceAdviceTaxCreditNote = value;
					this.SendPropertyChanged("RemittanceAdviceTaxCreditNoteId");
					this.OnRemittanceAdviceTaxCreditNoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDescription", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string TotalDescription
		{
			get
			{
				return this._TotalDescription;
			}
			set
			{
				if ((this._TotalDescription != value))
				{
					this.OnTotalDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TotalDescription = value;
					this.SendPropertyChanged("TotalDescription");
					this.OnTotalDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdviceTaxCreditNote_RemittanceAdviceOtherTax", Storage="_RemittanceAdviceTaxCreditNote1", ThisKey="RemittanceAdviceTaxCreditNoteId", OtherKey="Id", IsForeignKey=true)]
		public RemittanceAdviceTaxCreditNote RemittanceAdviceTaxCreditNote1
		{
			get
			{
				return this._RemittanceAdviceTaxCreditNote1.Entity;
			}
			set
			{
				RemittanceAdviceTaxCreditNote previousValue = this._RemittanceAdviceTaxCreditNote1.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdviceTaxCreditNote1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdviceTaxCreditNote1.Entity = null;
						previousValue.RemittanceAdviceOtherTaxes.Remove(this);
					}
					this._RemittanceAdviceTaxCreditNote1.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceOtherTaxes.Add(this);
						this._RemittanceAdviceTaxCreditNote = value.Id;
					}
					else
					{
						this._RemittanceAdviceTaxCreditNote = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RemittanceAdviceTaxCreditNote1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdviceTaxInvoice_RemittanceAdviceOtherTax", Storage="_RemittanceAdviceTaxInvoice", ThisKey="RemittanceAdviceTaxInvocieId", OtherKey="Id", IsForeignKey=true)]
		public RemittanceAdviceTaxInvoice RemittanceAdviceTaxInvoice
		{
			get
			{
				return this._RemittanceAdviceTaxInvoice.Entity;
			}
			set
			{
				RemittanceAdviceTaxInvoice previousValue = this._RemittanceAdviceTaxInvoice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdviceTaxInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdviceTaxInvoice.Entity = null;
						previousValue.RemittanceAdviceOtherTaxes.Remove(this);
					}
					this._RemittanceAdviceTaxInvoice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceOtherTaxes.Add(this);
						this._RemittanceAdviceTaxInvocieId = value.Id;
					}
					else
					{
						this._RemittanceAdviceTaxInvocieId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("RemittanceAdviceTaxInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdviceOtherTotal")]
	public partial class RemittanceAdviceOtherTotal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RemittanceAdviceId;
		
		private string _Description;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private EntityRef<RemittanceAdvice> _RemittanceAdvice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRemittanceAdviceIdChanging(System.Guid value);
    partial void OnRemittanceAdviceIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public RemittanceAdviceOtherTotal()
		{
			this._RemittanceAdvice = default(EntityRef<RemittanceAdvice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceAdviceId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RemittanceAdviceId
		{
			get
			{
				return this._RemittanceAdviceId;
			}
			set
			{
				if ((this._RemittanceAdviceId != value))
				{
					if (this._RemittanceAdvice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._RemittanceAdviceId = value;
					this.SendPropertyChanged("RemittanceAdviceId");
					this.OnRemittanceAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceOtherTotal", Storage="_RemittanceAdvice", ThisKey="RemittanceAdviceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RemittanceAdvice RemittanceAdvice
		{
			get
			{
				return this._RemittanceAdvice.Entity;
			}
			set
			{
				RemittanceAdvice previousValue = this._RemittanceAdvice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdvice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdvice.Entity = null;
						previousValue.RemittanceAdviceOtherTotals.Remove(this);
					}
					this._RemittanceAdvice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceOtherTotals.Add(this);
						this._RemittanceAdviceId = value.Id;
					}
					else
					{
						this._RemittanceAdviceId = default(System.Guid);
					}
					this.SendPropertyChanged("RemittanceAdvice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdviceTaxCreditNote")]
	public partial class RemittanceAdviceTaxCreditNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RemittanceAdviceId;
		
		private string _DocumentNumber;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<RemittanceAdviceOtherTax> _RemittanceAdviceOtherTaxes;
		
		private EntityRef<RemittanceAdvice> _RemittanceAdvice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRemittanceAdviceIdChanging(System.Guid value);
    partial void OnRemittanceAdviceIdChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public RemittanceAdviceTaxCreditNote()
		{
			this._RemittanceAdviceOtherTaxes = new EntitySet<RemittanceAdviceOtherTax>(new Action<RemittanceAdviceOtherTax>(this.attach_RemittanceAdviceOtherTaxes), new Action<RemittanceAdviceOtherTax>(this.detach_RemittanceAdviceOtherTaxes));
			this._RemittanceAdvice = default(EntityRef<RemittanceAdvice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceAdviceId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RemittanceAdviceId
		{
			get
			{
				return this._RemittanceAdviceId;
			}
			set
			{
				if ((this._RemittanceAdviceId != value))
				{
					if (this._RemittanceAdvice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._RemittanceAdviceId = value;
					this.SendPropertyChanged("RemittanceAdviceId");
					this.OnRemittanceAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdviceTaxCreditNote_RemittanceAdviceOtherTax", Storage="_RemittanceAdviceOtherTaxes", ThisKey="Id", OtherKey="RemittanceAdviceTaxCreditNoteId")]
		public EntitySet<RemittanceAdviceOtherTax> RemittanceAdviceOtherTaxes
		{
			get
			{
				return this._RemittanceAdviceOtherTaxes;
			}
			set
			{
				this._RemittanceAdviceOtherTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceTaxCreditNote", Storage="_RemittanceAdvice", ThisKey="RemittanceAdviceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RemittanceAdvice RemittanceAdvice
		{
			get
			{
				return this._RemittanceAdvice.Entity;
			}
			set
			{
				RemittanceAdvice previousValue = this._RemittanceAdvice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdvice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdvice.Entity = null;
						previousValue.RemittanceAdviceTaxCreditNotes.Remove(this);
					}
					this._RemittanceAdvice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceTaxCreditNotes.Add(this);
						this._RemittanceAdviceId = value.Id;
					}
					else
					{
						this._RemittanceAdviceId = default(System.Guid);
					}
					this.SendPropertyChanged("RemittanceAdvice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RemittanceAdviceOtherTaxes(RemittanceAdviceOtherTax entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdviceTaxCreditNote1 = this;
		}
		
		private void detach_RemittanceAdviceOtherTaxes(RemittanceAdviceOtherTax entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdviceTaxCreditNote1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdviceTaxInvoice")]
	public partial class RemittanceAdviceTaxInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RemittanceAdviceId;
		
		private string _DocumentNumber;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntityRef<RemittanceAdviceOldTaxInvoice> _RemittanceAdviceOldTaxInvoice;
		
		private EntitySet<RemittanceAdviceOtherTax> _RemittanceAdviceOtherTaxes;
		
		private EntityRef<RemittanceAdvice> _RemittanceAdvice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRemittanceAdviceIdChanging(System.Guid value);
    partial void OnRemittanceAdviceIdChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public RemittanceAdviceTaxInvoice()
		{
			this._RemittanceAdviceOldTaxInvoice = default(EntityRef<RemittanceAdviceOldTaxInvoice>);
			this._RemittanceAdviceOtherTaxes = new EntitySet<RemittanceAdviceOtherTax>(new Action<RemittanceAdviceOtherTax>(this.attach_RemittanceAdviceOtherTaxes), new Action<RemittanceAdviceOtherTax>(this.detach_RemittanceAdviceOtherTaxes));
			this._RemittanceAdvice = default(EntityRef<RemittanceAdvice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceAdviceId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RemittanceAdviceId
		{
			get
			{
				return this._RemittanceAdviceId;
			}
			set
			{
				if ((this._RemittanceAdviceId != value))
				{
					if (this._RemittanceAdvice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._RemittanceAdviceId = value;
					this.SendPropertyChanged("RemittanceAdviceId");
					this.OnRemittanceAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdviceTaxInvoice_RemittanceAdviceOldTaxInvoice", Storage="_RemittanceAdviceOldTaxInvoice", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public RemittanceAdviceOldTaxInvoice RemittanceAdviceOldTaxInvoice
		{
			get
			{
				return this._RemittanceAdviceOldTaxInvoice.Entity;
			}
			set
			{
				RemittanceAdviceOldTaxInvoice previousValue = this._RemittanceAdviceOldTaxInvoice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdviceOldTaxInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdviceOldTaxInvoice.Entity = null;
						previousValue.RemittanceAdviceTaxInvoice = null;
					}
					this._RemittanceAdviceOldTaxInvoice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceTaxInvoice = this;
					}
					this.SendPropertyChanged("RemittanceAdviceOldTaxInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdviceTaxInvoice_RemittanceAdviceOtherTax", Storage="_RemittanceAdviceOtherTaxes", ThisKey="Id", OtherKey="RemittanceAdviceTaxInvocieId")]
		public EntitySet<RemittanceAdviceOtherTax> RemittanceAdviceOtherTaxes
		{
			get
			{
				return this._RemittanceAdviceOtherTaxes;
			}
			set
			{
				this._RemittanceAdviceOtherTaxes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceTaxInvoice", Storage="_RemittanceAdvice", ThisKey="RemittanceAdviceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RemittanceAdvice RemittanceAdvice
		{
			get
			{
				return this._RemittanceAdvice.Entity;
			}
			set
			{
				RemittanceAdvice previousValue = this._RemittanceAdvice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdvice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdvice.Entity = null;
						previousValue.RemittanceAdviceTaxInvoices.Remove(this);
					}
					this._RemittanceAdvice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceTaxInvoices.Add(this);
						this._RemittanceAdviceId = value.Id;
					}
					else
					{
						this._RemittanceAdviceId = default(System.Guid);
					}
					this.SendPropertyChanged("RemittanceAdvice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RemittanceAdviceOtherTaxes(RemittanceAdviceOtherTax entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdviceTaxInvoice = this;
		}
		
		private void detach_RemittanceAdviceOtherTaxes(RemittanceAdviceOtherTax entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdviceTaxInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdvice")]
	public partial class RemittanceAdvice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _RAType;
		
		private string _DCEanCode;
		
		private string _DCName;
		
		private string _DCPostalAddress1;
		
		private string _DCPostalAddress2;
		
		private string _SupplierEanLocationCode;
		
		private string _SupplierEanDispatchPoint;
		
		private string _DCVatRegNo;
		
		private string _SupplierNumber;
		
		private string _SupplierName;
		
		private string _SupplierAddress1;
		
		private string _SupplierAddress2;
		
		private string _SupplierAddress3;
		
		private string _SupplierPostalCode;
		
		private string _SupplierVatRegNo;
		
		private string _PaymentNumber;
		
		private System.Nullable<System.DateTime> _ExtractedDate;
		
		private System.Nullable<System.DateTime> _RADate;
		
		private string _TermsCode;
		
		private System.Nullable<int> _TermsDays;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<System.DateTime> _CreatedAt;
		
		private System.Nullable<System.DateTime> _LastViewed;
		
		private bool _Old;
		
		private string _DCPostalCode;
		
		private EntitySet<RemittanceAdviceTotalPayment> _RemittanceAdviceTotalPayments;
		
		private EntitySet<RemittanceAdviceOtherTotal> _RemittanceAdviceOtherTotals;
		
		private EntitySet<RemittanceAdviceTaxCreditNote> _RemittanceAdviceTaxCreditNotes;
		
		private EntitySet<RemittanceAdviceTaxInvoice> _RemittanceAdviceTaxInvoices;
		
		private EntitySet<RemittanceAdviceDetail> _RemittanceAdviceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRATypeChanging(string value);
    partial void OnRATypeChanged();
    partial void OnDCEanCodeChanging(string value);
    partial void OnDCEanCodeChanged();
    partial void OnDCNameChanging(string value);
    partial void OnDCNameChanged();
    partial void OnDCPostalAddress1Changing(string value);
    partial void OnDCPostalAddress1Changed();
    partial void OnDCPostalAddress2Changing(string value);
    partial void OnDCPostalAddress2Changed();
    partial void OnSupplierEanLocationCodeChanging(string value);
    partial void OnSupplierEanLocationCodeChanged();
    partial void OnSupplierEanDispatchPointChanging(string value);
    partial void OnSupplierEanDispatchPointChanged();
    partial void OnDCVatRegNoChanging(string value);
    partial void OnDCVatRegNoChanged();
    partial void OnSupplierNumberChanging(string value);
    partial void OnSupplierNumberChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierAddress1Changing(string value);
    partial void OnSupplierAddress1Changed();
    partial void OnSupplierAddress2Changing(string value);
    partial void OnSupplierAddress2Changed();
    partial void OnSupplierAddress3Changing(string value);
    partial void OnSupplierAddress3Changed();
    partial void OnSupplierPostalCodeChanging(string value);
    partial void OnSupplierPostalCodeChanged();
    partial void OnSupplierVatRegNoChanging(string value);
    partial void OnSupplierVatRegNoChanged();
    partial void OnPaymentNumberChanging(string value);
    partial void OnPaymentNumberChanged();
    partial void OnExtractedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExtractedDateChanged();
    partial void OnRADateChanging(System.Nullable<System.DateTime> value);
    partial void OnRADateChanged();
    partial void OnTermsCodeChanging(string value);
    partial void OnTermsCodeChanged();
    partial void OnTermsDaysChanging(System.Nullable<int> value);
    partial void OnTermsDaysChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnCreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedAtChanged();
    partial void OnLastViewedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastViewedChanged();
    partial void OnOldChanging(bool value);
    partial void OnOldChanged();
    partial void OnDCPostalCodeChanging(string value);
    partial void OnDCPostalCodeChanged();
    #endregion
		
		public RemittanceAdvice()
		{
			this._RemittanceAdviceTotalPayments = new EntitySet<RemittanceAdviceTotalPayment>(new Action<RemittanceAdviceTotalPayment>(this.attach_RemittanceAdviceTotalPayments), new Action<RemittanceAdviceTotalPayment>(this.detach_RemittanceAdviceTotalPayments));
			this._RemittanceAdviceOtherTotals = new EntitySet<RemittanceAdviceOtherTotal>(new Action<RemittanceAdviceOtherTotal>(this.attach_RemittanceAdviceOtherTotals), new Action<RemittanceAdviceOtherTotal>(this.detach_RemittanceAdviceOtherTotals));
			this._RemittanceAdviceTaxCreditNotes = new EntitySet<RemittanceAdviceTaxCreditNote>(new Action<RemittanceAdviceTaxCreditNote>(this.attach_RemittanceAdviceTaxCreditNotes), new Action<RemittanceAdviceTaxCreditNote>(this.detach_RemittanceAdviceTaxCreditNotes));
			this._RemittanceAdviceTaxInvoices = new EntitySet<RemittanceAdviceTaxInvoice>(new Action<RemittanceAdviceTaxInvoice>(this.attach_RemittanceAdviceTaxInvoices), new Action<RemittanceAdviceTaxInvoice>(this.detach_RemittanceAdviceTaxInvoices));
			this._RemittanceAdviceDetails = new EntitySet<RemittanceAdviceDetail>(new Action<RemittanceAdviceDetail>(this.attach_RemittanceAdviceDetails), new Action<RemittanceAdviceDetail>(this.detach_RemittanceAdviceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RAType", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string RAType
		{
			get
			{
				return this._RAType;
			}
			set
			{
				if ((this._RAType != value))
				{
					this.OnRATypeChanging(value);
					this.SendPropertyChanging();
					this._RAType = value;
					this.SendPropertyChanged("RAType");
					this.OnRATypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCEanCode", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DCEanCode
		{
			get
			{
				return this._DCEanCode;
			}
			set
			{
				if ((this._DCEanCode != value))
				{
					this.OnDCEanCodeChanging(value);
					this.SendPropertyChanging();
					this._DCEanCode = value;
					this.SendPropertyChanged("DCEanCode");
					this.OnDCEanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCName", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DCName
		{
			get
			{
				return this._DCName;
			}
			set
			{
				if ((this._DCName != value))
				{
					this.OnDCNameChanging(value);
					this.SendPropertyChanging();
					this._DCName = value;
					this.SendPropertyChanged("DCName");
					this.OnDCNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCPostalAddress1", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DCPostalAddress1
		{
			get
			{
				return this._DCPostalAddress1;
			}
			set
			{
				if ((this._DCPostalAddress1 != value))
				{
					this.OnDCPostalAddress1Changing(value);
					this.SendPropertyChanging();
					this._DCPostalAddress1 = value;
					this.SendPropertyChanged("DCPostalAddress1");
					this.OnDCPostalAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCPostalAddress2", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DCPostalAddress2
		{
			get
			{
				return this._DCPostalAddress2;
			}
			set
			{
				if ((this._DCPostalAddress2 != value))
				{
					this.OnDCPostalAddress2Changing(value);
					this.SendPropertyChanging();
					this._DCPostalAddress2 = value;
					this.SendPropertyChanged("DCPostalAddress2");
					this.OnDCPostalAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEanLocationCode", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierEanLocationCode
		{
			get
			{
				return this._SupplierEanLocationCode;
			}
			set
			{
				if ((this._SupplierEanLocationCode != value))
				{
					this.OnSupplierEanLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierEanLocationCode = value;
					this.SendPropertyChanged("SupplierEanLocationCode");
					this.OnSupplierEanLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEanDispatchPoint", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierEanDispatchPoint
		{
			get
			{
				return this._SupplierEanDispatchPoint;
			}
			set
			{
				if ((this._SupplierEanDispatchPoint != value))
				{
					this.OnSupplierEanDispatchPointChanging(value);
					this.SendPropertyChanging();
					this._SupplierEanDispatchPoint = value;
					this.SendPropertyChanged("SupplierEanDispatchPoint");
					this.OnSupplierEanDispatchPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCVatRegNo", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DCVatRegNo
		{
			get
			{
				return this._DCVatRegNo;
			}
			set
			{
				if ((this._DCVatRegNo != value))
				{
					this.OnDCVatRegNoChanging(value);
					this.SendPropertyChanging();
					this._DCVatRegNo = value;
					this.SendPropertyChanged("DCVatRegNo");
					this.OnDCVatRegNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierNumber", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierNumber
		{
			get
			{
				return this._SupplierNumber;
			}
			set
			{
				if ((this._SupplierNumber != value))
				{
					this.OnSupplierNumberChanging(value);
					this.SendPropertyChanging();
					this._SupplierNumber = value;
					this.SendPropertyChanged("SupplierNumber");
					this.OnSupplierNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAddress1", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierAddress1
		{
			get
			{
				return this._SupplierAddress1;
			}
			set
			{
				if ((this._SupplierAddress1 != value))
				{
					this.OnSupplierAddress1Changing(value);
					this.SendPropertyChanging();
					this._SupplierAddress1 = value;
					this.SendPropertyChanged("SupplierAddress1");
					this.OnSupplierAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAddress2", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierAddress2
		{
			get
			{
				return this._SupplierAddress2;
			}
			set
			{
				if ((this._SupplierAddress2 != value))
				{
					this.OnSupplierAddress2Changing(value);
					this.SendPropertyChanging();
					this._SupplierAddress2 = value;
					this.SendPropertyChanged("SupplierAddress2");
					this.OnSupplierAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAddress3", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierAddress3
		{
			get
			{
				return this._SupplierAddress3;
			}
			set
			{
				if ((this._SupplierAddress3 != value))
				{
					this.OnSupplierAddress3Changing(value);
					this.SendPropertyChanging();
					this._SupplierAddress3 = value;
					this.SendPropertyChanged("SupplierAddress3");
					this.OnSupplierAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPostalCode", DbType="VarChar(6)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierPostalCode
		{
			get
			{
				return this._SupplierPostalCode;
			}
			set
			{
				if ((this._SupplierPostalCode != value))
				{
					this.OnSupplierPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierPostalCode = value;
					this.SendPropertyChanged("SupplierPostalCode");
					this.OnSupplierPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierVatRegNo", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierVatRegNo
		{
			get
			{
				return this._SupplierVatRegNo;
			}
			set
			{
				if ((this._SupplierVatRegNo != value))
				{
					this.OnSupplierVatRegNoChanging(value);
					this.SendPropertyChanging();
					this._SupplierVatRegNo = value;
					this.SendPropertyChanged("SupplierVatRegNo");
					this.OnSupplierVatRegNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNumber", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string PaymentNumber
		{
			get
			{
				return this._PaymentNumber;
			}
			set
			{
				if ((this._PaymentNumber != value))
				{
					this.OnPaymentNumberChanging(value);
					this.SendPropertyChanging();
					this._PaymentNumber = value;
					this.SendPropertyChanged("PaymentNumber");
					this.OnPaymentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractedDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ExtractedDate
		{
			get
			{
				return this._ExtractedDate;
			}
			set
			{
				if ((this._ExtractedDate != value))
				{
					this.OnExtractedDateChanging(value);
					this.SendPropertyChanging();
					this._ExtractedDate = value;
					this.SendPropertyChanged("ExtractedDate");
					this.OnExtractedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RADate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> RADate
		{
			get
			{
				return this._RADate;
			}
			set
			{
				if ((this._RADate != value))
				{
					this.OnRADateChanging(value);
					this.SendPropertyChanging();
					this._RADate = value;
					this.SendPropertyChanged("RADate");
					this.OnRADateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsCode", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string TermsCode
		{
			get
			{
				return this._TermsCode;
			}
			set
			{
				if ((this._TermsCode != value))
				{
					this.OnTermsCodeChanging(value);
					this.SendPropertyChanging();
					this._TermsCode = value;
					this.SendPropertyChanged("TermsCode");
					this.OnTermsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsDays", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> TermsDays
		{
			get
			{
				return this._TermsDays;
			}
			set
			{
				if ((this._TermsDays != value))
				{
					this.OnTermsDaysChanging(value);
					this.SendPropertyChanging();
					this._TermsDays = value;
					this.SendPropertyChanged("TermsDays");
					this.OnTermsDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastViewed", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> LastViewed
		{
			get
			{
				return this._LastViewed;
			}
			set
			{
				if ((this._LastViewed != value))
				{
					this.OnLastViewedChanging(value);
					this.SendPropertyChanging();
					this._LastViewed = value;
					this.SendPropertyChanged("LastViewed");
					this.OnLastViewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Old")]
		public bool Old
		{
			get
			{
				return this._Old;
			}
			set
			{
				if ((this._Old != value))
				{
					this.OnOldChanging(value);
					this.SendPropertyChanging();
					this._Old = value;
					this.SendPropertyChanged("Old");
					this.OnOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCPostalCode", DbType="varchar(255)", UpdateCheck=UpdateCheck.Never)]
		public string DCPostalCode
		{
			get
			{
				return this._DCPostalCode;
			}
			set
			{
				if ((this._DCPostalCode != value))
				{
					this.OnDCPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._DCPostalCode = value;
					this.SendPropertyChanged("DCPostalCode");
					this.OnDCPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceTotalPayment", Storage="_RemittanceAdviceTotalPayments", ThisKey="Id", OtherKey="RemittanceAdviceId")]
		public EntitySet<RemittanceAdviceTotalPayment> RemittanceAdviceTotalPayments
		{
			get
			{
				return this._RemittanceAdviceTotalPayments;
			}
			set
			{
				this._RemittanceAdviceTotalPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceOtherTotal", Storage="_RemittanceAdviceOtherTotals", ThisKey="Id", OtherKey="RemittanceAdviceId")]
		public EntitySet<RemittanceAdviceOtherTotal> RemittanceAdviceOtherTotals
		{
			get
			{
				return this._RemittanceAdviceOtherTotals;
			}
			set
			{
				this._RemittanceAdviceOtherTotals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceTaxCreditNote", Storage="_RemittanceAdviceTaxCreditNotes", ThisKey="Id", OtherKey="RemittanceAdviceId")]
		public EntitySet<RemittanceAdviceTaxCreditNote> RemittanceAdviceTaxCreditNotes
		{
			get
			{
				return this._RemittanceAdviceTaxCreditNotes;
			}
			set
			{
				this._RemittanceAdviceTaxCreditNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceTaxInvoice", Storage="_RemittanceAdviceTaxInvoices", ThisKey="Id", OtherKey="RemittanceAdviceId")]
		public EntitySet<RemittanceAdviceTaxInvoice> RemittanceAdviceTaxInvoices
		{
			get
			{
				return this._RemittanceAdviceTaxInvoices;
			}
			set
			{
				this._RemittanceAdviceTaxInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceDetail", Storage="_RemittanceAdviceDetails", ThisKey="Id", OtherKey="RemittanceAdviceId")]
		public EntitySet<RemittanceAdviceDetail> RemittanceAdviceDetails
		{
			get
			{
				return this._RemittanceAdviceDetails;
			}
			set
			{
				this._RemittanceAdviceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RemittanceAdviceTotalPayments(RemittanceAdviceTotalPayment entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = this;
		}
		
		private void detach_RemittanceAdviceTotalPayments(RemittanceAdviceTotalPayment entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = null;
		}
		
		private void attach_RemittanceAdviceOtherTotals(RemittanceAdviceOtherTotal entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = this;
		}
		
		private void detach_RemittanceAdviceOtherTotals(RemittanceAdviceOtherTotal entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = null;
		}
		
		private void attach_RemittanceAdviceTaxCreditNotes(RemittanceAdviceTaxCreditNote entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = this;
		}
		
		private void detach_RemittanceAdviceTaxCreditNotes(RemittanceAdviceTaxCreditNote entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = null;
		}
		
		private void attach_RemittanceAdviceTaxInvoices(RemittanceAdviceTaxInvoice entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = this;
		}
		
		private void detach_RemittanceAdviceTaxInvoices(RemittanceAdviceTaxInvoice entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = null;
		}
		
		private void attach_RemittanceAdviceDetails(RemittanceAdviceDetail entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = this;
		}
		
		private void detach_RemittanceAdviceDetails(RemittanceAdviceDetail entity)
		{
			this.SendPropertyChanging();
			entity.RemittanceAdvice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RemittanceAdviceDetail")]
	public partial class RemittanceAdviceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _RemittanceAdviceId;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private string _DocumentType;
		
		private string _SupplierDocumentNo;
		
		private string _StoreCode;
		
		private string _StoreName;
		
		private string _StoreEanCode;
		
		private System.Nullable<decimal> _DocumentAmountExcl;
		
		private System.Nullable<decimal> _DocumentAmountIncl;
		
		private System.Nullable<decimal> _DiscountAmountIncl;
		
		private System.Nullable<decimal> _DiscountAmountExcl;
		
		private System.Nullable<decimal> _VatAmountPayable;
		
		private System.Nullable<decimal> _NetAmountIncl;
		
		private System.Data.Linq.Binary _Timestamp;
		
		private EntityRef<RemittanceAdvice> _RemittanceAdvice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRemittanceAdviceIdChanging(System.Guid value);
    partial void OnRemittanceAdviceIdChanged();
    partial void OnDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentDateChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    partial void OnSupplierDocumentNoChanging(string value);
    partial void OnSupplierDocumentNoChanged();
    partial void OnStoreCodeChanging(string value);
    partial void OnStoreCodeChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    partial void OnStoreEanCodeChanging(string value);
    partial void OnStoreEanCodeChanged();
    partial void OnDocumentAmountExclChanging(System.Nullable<decimal> value);
    partial void OnDocumentAmountExclChanged();
    partial void OnDocumentAmountInclChanging(System.Nullable<decimal> value);
    partial void OnDocumentAmountInclChanged();
    partial void OnDiscountAmountInclChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountInclChanged();
    partial void OnDiscountAmountExclChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountExclChanged();
    partial void OnVatAmountPayableChanging(System.Nullable<decimal> value);
    partial void OnVatAmountPayableChanged();
    partial void OnNetAmountInclChanging(System.Nullable<decimal> value);
    partial void OnNetAmountInclChanged();
    partial void OnTimestampChanging(System.Data.Linq.Binary value);
    partial void OnTimestampChanged();
    #endregion
		
		public RemittanceAdviceDetail()
		{
			this._RemittanceAdvice = default(EntityRef<RemittanceAdvice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemittanceAdviceId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid RemittanceAdviceId
		{
			get
			{
				return this._RemittanceAdviceId;
			}
			set
			{
				if ((this._RemittanceAdviceId != value))
				{
					if (this._RemittanceAdvice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRemittanceAdviceIdChanging(value);
					this.SendPropertyChanging();
					this._RemittanceAdviceId = value;
					this.SendPropertyChanged("RemittanceAdviceId");
					this.OnRemittanceAdviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this.OnDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentDate = value;
					this.SendPropertyChanged("DocumentDate");
					this.OnDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="VarChar(5)", UpdateCheck=UpdateCheck.Never)]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierDocumentNo", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierDocumentNo
		{
			get
			{
				return this._SupplierDocumentNo;
			}
			set
			{
				if ((this._SupplierDocumentNo != value))
				{
					this.OnSupplierDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._SupplierDocumentNo = value;
					this.SendPropertyChanged("SupplierDocumentNo");
					this.OnSupplierDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreCode", DbType="VarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string StoreCode
		{
			get
			{
				return this._StoreCode;
			}
			set
			{
				if ((this._StoreCode != value))
				{
					this.OnStoreCodeChanging(value);
					this.SendPropertyChanging();
					this._StoreCode = value;
					this.SendPropertyChanged("StoreCode");
					this.OnStoreCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreEanCode", DbType="VarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string StoreEanCode
		{
			get
			{
				return this._StoreEanCode;
			}
			set
			{
				if ((this._StoreEanCode != value))
				{
					this.OnStoreEanCodeChanging(value);
					this.SendPropertyChanging();
					this._StoreEanCode = value;
					this.SendPropertyChanged("StoreEanCode");
					this.OnStoreEanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentAmountExcl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DocumentAmountExcl
		{
			get
			{
				return this._DocumentAmountExcl;
			}
			set
			{
				if ((this._DocumentAmountExcl != value))
				{
					this.OnDocumentAmountExclChanging(value);
					this.SendPropertyChanging();
					this._DocumentAmountExcl = value;
					this.SendPropertyChanged("DocumentAmountExcl");
					this.OnDocumentAmountExclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentAmountIncl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DocumentAmountIncl
		{
			get
			{
				return this._DocumentAmountIncl;
			}
			set
			{
				if ((this._DocumentAmountIncl != value))
				{
					this.OnDocumentAmountInclChanging(value);
					this.SendPropertyChanging();
					this._DocumentAmountIncl = value;
					this.SendPropertyChanged("DocumentAmountIncl");
					this.OnDocumentAmountInclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmountIncl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountAmountIncl
		{
			get
			{
				return this._DiscountAmountIncl;
			}
			set
			{
				if ((this._DiscountAmountIncl != value))
				{
					this.OnDiscountAmountInclChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmountIncl = value;
					this.SendPropertyChanged("DiscountAmountIncl");
					this.OnDiscountAmountInclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmountExcl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DiscountAmountExcl
		{
			get
			{
				return this._DiscountAmountExcl;
			}
			set
			{
				if ((this._DiscountAmountExcl != value))
				{
					this.OnDiscountAmountExclChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmountExcl = value;
					this.SendPropertyChanged("DiscountAmountExcl");
					this.OnDiscountAmountExclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatAmountPayable", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> VatAmountPayable
		{
			get
			{
				return this._VatAmountPayable;
			}
			set
			{
				if ((this._VatAmountPayable != value))
				{
					this.OnVatAmountPayableChanging(value);
					this.SendPropertyChanging();
					this._VatAmountPayable = value;
					this.SendPropertyChanged("VatAmountPayable");
					this.OnVatAmountPayableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmountIncl", DbType="Decimal(18,2)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> NetAmountIncl
		{
			get
			{
				return this._NetAmountIncl;
			}
			set
			{
				if ((this._NetAmountIncl != value))
				{
					this.OnNetAmountInclChanging(value);
					this.SendPropertyChanging();
					this._NetAmountIncl = value;
					this.SendPropertyChanged("NetAmountIncl");
					this.OnNetAmountInclChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RemittanceAdvice_RemittanceAdviceDetail", Storage="_RemittanceAdvice", ThisKey="RemittanceAdviceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RemittanceAdvice RemittanceAdvice
		{
			get
			{
				return this._RemittanceAdvice.Entity;
			}
			set
			{
				RemittanceAdvice previousValue = this._RemittanceAdvice.Entity;
				if (((previousValue != value) 
							|| (this._RemittanceAdvice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RemittanceAdvice.Entity = null;
						previousValue.RemittanceAdviceDetails.Remove(this);
					}
					this._RemittanceAdvice.Entity = value;
					if ((value != null))
					{
						value.RemittanceAdviceDetails.Add(this);
						this._RemittanceAdviceId = value.Id;
					}
					else
					{
						this._RemittanceAdviceId = default(System.Guid);
					}
					this.SendPropertyChanged("RemittanceAdvice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
