#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TradingGateway.Gateway
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "TradingGateway")]
    public partial class TradingGatewayOrderDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertOrder(Order instance);
        partial void UpdateOrder(Order instance);
        partial void DeleteOrder(Order instance);
        partial void InsertOrderLine(OrderLine instance);
        partial void UpdateOrderLine(OrderLine instance);
        partial void DeleteOrderLine(OrderLine instance);
        #endregion

        public TradingGatewayOrderDataContext() :
                base(global::TradingGateway.Gateway.Properties.Settings.Default.TradingGatewayConnectionString, mappingSource)
        {
            OnCreated();
        }

        public TradingGatewayOrderDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public TradingGatewayOrderDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public TradingGatewayOrderDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public TradingGatewayOrderDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Order> Orders
        {
            get
            {
                return this.GetTable<Order>();
            }
        }

        public System.Data.Linq.Table<OrderLine> OrderLines
        {
            get
            {
                return this.GetTable<OrderLine>();
            }
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetEmailDetails")]
        public ISingleResult<GetEmailDetailsResult> GetEmailDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SupplierEan", DbType = "Char(15)")] string supplierEan, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DestinationRetailerEan", DbType = "Char(15)")] string destinationRetailerEan, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "OrderingRetailerEan", DbType = "Char(15)")] string orderingRetailerEan)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierEan, destinationRetailerEan, orderingRetailerEan);
            return ((ISingleResult<GetEmailDetailsResult>)(result.ReturnValue));
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.[Order]")]
    public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _OrderId;

        private string _InterchangeNo;

        private string _SupplierEAN;

        private string _OrderingRetailerEAN;

        private string _DestinationRetailerEAN;

        private string _RetailerOrderNumber;

        private System.Nullable<System.DateTime> _OrderDate;

        private System.Nullable<char> _TransactionCode;

        private System.Nullable<System.DateTime> _EarliestDeliveryDate;

        private System.Nullable<System.DateTime> _LatestDeliveryDate;

        private int _OrderStatusId;

        private System.DateTime _OrderStatusChangeDate;

        private string _Narrative;

        private System.Data.Linq.Binary _RowVersion;

        private string _AlternativeOrderPoint;

        private EntitySet<OrderLine> _OrderLines;
        private System.Nullable<decimal> _TotalOrderValue;


        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnOrderIdChanging(int value);
        partial void OnOrderIdChanged();
        partial void OnInterchangeNoChanging(string value);
        partial void OnInterchangeNoChanged();
        partial void OnSupplierEANChanging(string value);
        partial void OnSupplierEANChanged();
        partial void OnOrderingRetailerEANChanging(string value);
        partial void OnOrderingRetailerEANChanged();
        partial void OnDestinationRetailerEANChanging(string value);
        partial void OnDestinationRetailerEANChanged();
        partial void OnRetailerOrderNumberChanging(string value);
        partial void OnRetailerOrderNumberChanged();
        partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
        partial void OnOrderDateChanged();
        partial void OnTransactionCodeChanging(System.Nullable<char> value);
        partial void OnTransactionCodeChanged();
        partial void OnEarliestDeliveryDateChanging(System.Nullable<System.DateTime> value);
        partial void OnEarliestDeliveryDateChanged();
        partial void OnLatestDeliveryDateChanging(System.Nullable<System.DateTime> value);
        partial void OnLatestDeliveryDateChanged();
        partial void OnOrderStatusIdChanging(int value);
        partial void OnOrderStatusIdChanged();
        partial void OnOrderStatusChangeDateChanging(System.DateTime value);
        partial void OnOrderStatusChangeDateChanged();
        partial void OnNarrativeChanging(string value);
        partial void OnNarrativeChanged();
        partial void OnRowVersionChanging(System.Data.Linq.Binary value);
        partial void OnRowVersionChanged();
        partial void OnAlternativeOrderPointChanging(string value);
        partial void OnAlternativeOrderPointChanged();
        partial void OnTotalOrderValueChanging(System.Nullable<System.Decimal> value);
        partial void OnTotalOrderValueChanging();
        #endregion

        public Order()
        {
            this._OrderLines = new EntitySet<OrderLine>(new Action<OrderLine>(this.attach_OrderLines), new Action<OrderLine>(this.detach_OrderLines));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
        public int OrderId
        {
            get
            {
                return this._OrderId;
            }
            set
            {
                if ((this._OrderId != value))
                {
                    this.OnOrderIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrderId = value;
                    this.SendPropertyChanged("OrderId");
                    this.OnOrderIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InterchangeNo", DbType = "VarChar(50)", UpdateCheck = UpdateCheck.Never)]
        public string InterchangeNo
        {
            get
            {
                return this._InterchangeNo;
            }
            set
            {
                if ((this._InterchangeNo != value))
                {
                    this.OnInterchangeNoChanging(value);
                    this.SendPropertyChanging();
                    this._InterchangeNo = value;
                    this.SendPropertyChanged("InterchangeNo");
                    this.OnInterchangeNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SupplierEAN", DbType = "VarChar(50)", UpdateCheck = UpdateCheck.Never)]
        public string SupplierEAN
        {
            get
            {
                return this._SupplierEAN;
            }
            set
            {
                if ((this._SupplierEAN != value))
                {
                    this.OnSupplierEANChanging(value);
                    this.SendPropertyChanging();
                    this._SupplierEAN = value;
                    this.SendPropertyChanged("SupplierEAN");
                    this.OnSupplierEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderingRetailerEAN", DbType = "VarChar(50)", UpdateCheck = UpdateCheck.Never)]
        public string OrderingRetailerEAN
        {
            get
            {
                return this._OrderingRetailerEAN;
            }
            set
            {
                if ((this._OrderingRetailerEAN != value))
                {
                    this.OnOrderingRetailerEANChanging(value);
                    this.SendPropertyChanging();
                    this._OrderingRetailerEAN = value;
                    this.SendPropertyChanged("OrderingRetailerEAN");
                    this.OnOrderingRetailerEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DestinationRetailerEAN", DbType = "VarChar(50)", UpdateCheck = UpdateCheck.Never)]
        public string DestinationRetailerEAN
        {
            get
            {
                return this._DestinationRetailerEAN;
            }
            set
            {
                if ((this._DestinationRetailerEAN != value))
                {
                    this.OnDestinationRetailerEANChanging(value);
                    this.SendPropertyChanging();
                    this._DestinationRetailerEAN = value;
                    this.SendPropertyChanged("DestinationRetailerEAN");
                    this.OnDestinationRetailerEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RetailerOrderNumber", DbType = "VarChar(50)", UpdateCheck = UpdateCheck.Never)]
        public string RetailerOrderNumber
        {
            get
            {
                return this._RetailerOrderNumber;
            }
            set
            {
                if ((this._RetailerOrderNumber != value))
                {
                    this.OnRetailerOrderNumberChanging(value);
                    this.SendPropertyChanging();
                    this._RetailerOrderNumber = value;
                    this.SendPropertyChanged("RetailerOrderNumber");
                    this.OnRetailerOrderNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderDate", DbType = "DateTime", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> OrderDate
        {
            get
            {
                return this._OrderDate;
            }
            set
            {
                if ((this._OrderDate != value))
                {
                    this.OnOrderDateChanging(value);
                    this.SendPropertyChanging();
                    this._OrderDate = value;
                    this.SendPropertyChanged("OrderDate");
                    this.OnOrderDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransactionCode", DbType = "Char(1)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<char> TransactionCode
        {
            get
            {
                return this._TransactionCode;
            }
            set
            {
                if ((this._TransactionCode != value))
                {
                    this.OnTransactionCodeChanging(value);
                    this.SendPropertyChanging();
                    this._TransactionCode = value;
                    this.SendPropertyChanged("TransactionCode");
                    this.OnTransactionCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EarliestDeliveryDate", DbType = "DateTime", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> EarliestDeliveryDate
        {
            get
            {
                return this._EarliestDeliveryDate;
            }
            set
            {
                if ((this._EarliestDeliveryDate != value))
                {
                    this.OnEarliestDeliveryDateChanging(value);
                    this.SendPropertyChanging();
                    this._EarliestDeliveryDate = value;
                    this.SendPropertyChanged("EarliestDeliveryDate");
                    this.OnEarliestDeliveryDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LatestDeliveryDate", DbType = "DateTime", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> LatestDeliveryDate
        {
            get
            {
                return this._LatestDeliveryDate;
            }
            set
            {
                if ((this._LatestDeliveryDate != value))
                {
                    this.OnLatestDeliveryDateChanging(value);
                    this.SendPropertyChanging();
                    this._LatestDeliveryDate = value;
                    this.SendPropertyChanged("LatestDeliveryDate");
                    this.OnLatestDeliveryDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderStatusId", DbType = "Int NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int OrderStatusId
        {
            get
            {
                return this._OrderStatusId;
            }
            set
            {
                if ((this._OrderStatusId != value))
                {
                    this.OnOrderStatusIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrderStatusId = value;
                    this.SendPropertyChanged("OrderStatusId");
                    this.OnOrderStatusIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderStatusChangeDate", DbType = "DateTime NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime OrderStatusChangeDate
        {
            get
            {
                return this._OrderStatusChangeDate;
            }
            set
            {
                if ((this._OrderStatusChangeDate != value))
                {
                    this.OnOrderStatusChangeDateChanging(value);
                    this.SendPropertyChanging();
                    this._OrderStatusChangeDate = value;
                    this.SendPropertyChanged("OrderStatusChangeDate");
                    this.OnOrderStatusChangeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Narrative", DbType = "VarChar(40)", UpdateCheck = UpdateCheck.Never)]
        public string Narrative
        {
            get
            {
                return this._Narrative;
            }
            set
            {
                if ((this._Narrative != value))
                {
                    this.OnNarrativeChanging(value);
                    this.SendPropertyChanging();
                    this._Narrative = value;
                    this.SendPropertyChanged("Narrative");
                    this.OnNarrativeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RowVersion", AutoSync = AutoSync.Always, DbType = "rowversion NOT NULL", CanBeNull = false, IsDbGenerated = true, IsVersion = true, UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary RowVersion
        {
            get
            {
                return this._RowVersion;
            }
            set
            {
                if ((this._RowVersion != value))
                {
                    this.OnRowVersionChanging(value);
                    this.SendPropertyChanging();
                    this._RowVersion = value;
                    this.SendPropertyChanged("RowVersion");
                    this.OnRowVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AlternativeOrderPoint", DbType = "VarChar(50)", UpdateCheck = UpdateCheck.Never)]
        public string AlternativeOrderPoint
        {
            get
            {
                return this._AlternativeOrderPoint;
            }
            set
            {
                if ((this._AlternativeOrderPoint != value))
                {
                    this.OnAlternativeOrderPointChanging(value);
                    this.SendPropertyChanging();
                    this._AlternativeOrderPoint = value;
                    this.SendPropertyChanged("AlternativeOrderPoint");
                    this.OnAlternativeOrderPointChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_OrderLine", Storage = "_OrderLines", ThisKey = "OrderId", OtherKey = "OrderId")]
        public EntitySet<OrderLine> OrderLines
        {
            get
            {
                return this._OrderLines;
            }
            set
            {
                this._OrderLines.Assign(value);
            }
        }


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TotalOrderValue", DbType = "Money", UpdateCheck = UpdateCheck.Never)]
        public decimal? TotalOrderValue
        {
            get
            {
                return this._TotalOrderValue;
            }
            set
            {
                if ((this._TotalOrderValue != value))
                {
                    this.OnTotalOrderValueChanging(value);
                    this.SendPropertyChanging();
                    this._TotalOrderValue = value;
                    this.SendPropertyChanged("TotalOrderValue");
                    this.OnTotalOrderValueChanging();
                }
            }
        }



        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_OrderLines(OrderLine entity)
        {
            this.SendPropertyChanging();
            entity.Order = this;
        }

        private void detach_OrderLines(OrderLine entity)
        {
            this.SendPropertyChanging();
            entity.Order = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.OrderLine")]
    public partial class OrderLine : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _OrderLineId;

        private int _OrderId;

        private int _SequenceNumber;

        private string _PackBarcode;

        private string _UnitBarcode;

        private string _SupplierProductCode;

        private string _ProductDescription;

        private System.Nullable<decimal> _Quantity;

        private System.Nullable<decimal> _AmendedOrderQuantity;

        private System.Nullable<decimal> _CostPrice;

        private System.Nullable<decimal> _VatRate;

        private System.Nullable<decimal> _LineCost;

        private string _Narrative;

        private System.Nullable<decimal> _PackSize;

        private System.Data.Linq.Binary _RowVersion;

        private EntityRef<Order> _Order;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnOrderLineIdChanging(int value);
        partial void OnOrderLineIdChanged();
        partial void OnOrderIdChanging(int value);
        partial void OnOrderIdChanged();
        partial void OnSequenceNumberChanging(int value);
        partial void OnSequenceNumberChanged();
        partial void OnPackBarcodeChanging(string value);
        partial void OnPackBarcodeChanged();
        partial void OnUnitBarcodeChanging(string value);
        partial void OnUnitBarcodeChanged();
        partial void OnSupplierProductCodeChanging(string value);
        partial void OnSupplierProductCodeChanged();
        partial void OnProductDescriptionChanging(string value);
        partial void OnProductDescriptionChanged();
        partial void OnQuantityChanging(System.Nullable<decimal> value);
        partial void OnQuantityChanged();
        partial void OnAmendedOrderQuantityChanging(System.Nullable<decimal> value);
        partial void OnAmendedOrderQuantityChanged();
        partial void OnCostPriceChanging(System.Nullable<decimal> value);
        partial void OnCostPriceChanged();
        partial void OnVatRateChanging(System.Nullable<decimal> value);
        partial void OnVatRateChanged();
        partial void OnLineCostChanging(System.Nullable<decimal> value);
        partial void OnLineCostChanged();
        partial void OnNarrativeChanging(string value);
        partial void OnNarrativeChanged();
        partial void OnPackSizeChanging(System.Nullable<decimal> value);
        partial void OnPackSizeChanged();
        partial void OnRowVersionChanging(System.Data.Linq.Binary value);
        partial void OnRowVersionChanged();
        #endregion

        public OrderLine()
        {
            this._Order = default(EntityRef<Order>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderLineId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
        public int OrderLineId
        {
            get
            {
                return this._OrderLineId;
            }
            set
            {
                if ((this._OrderLineId != value))
                {
                    this.OnOrderLineIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrderLineId = value;
                    this.SendPropertyChanged("OrderLineId");
                    this.OnOrderLineIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderId", DbType = "Int NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int OrderId
        {
            get
            {
                return this._OrderId;
            }
            set
            {
                if ((this._OrderId != value))
                {
                    if (this._Order.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnOrderIdChanging(value);
                    this.SendPropertyChanging();
                    this._OrderId = value;
                    this.SendPropertyChanged("OrderId");
                    this.OnOrderIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SequenceNumber", DbType = "Int NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int SequenceNumber
        {
            get
            {
                return this._SequenceNumber;
            }
            set
            {
                if ((this._SequenceNumber != value))
                {
                    this.OnSequenceNumberChanging(value);
                    this.SendPropertyChanging();
                    this._SequenceNumber = value;
                    this.SendPropertyChanged("SequenceNumber");
                    this.OnSequenceNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PackBarcode", DbType = "Char(14)", UpdateCheck = UpdateCheck.Never)]
        public string PackBarcode
        {
            get
            {
                return this._PackBarcode;
            }
            set
            {
                if ((this._PackBarcode != value))
                {
                    this.OnPackBarcodeChanging(value);
                    this.SendPropertyChanging();
                    this._PackBarcode = value;
                    this.SendPropertyChanged("PackBarcode");
                    this.OnPackBarcodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UnitBarcode", DbType = "Char(14)", UpdateCheck = UpdateCheck.Never)]
        public string UnitBarcode
        {
            get
            {
                return this._UnitBarcode;
            }
            set
            {
                if ((this._UnitBarcode != value))
                {
                    this.OnUnitBarcodeChanging(value);
                    this.SendPropertyChanging();
                    this._UnitBarcode = value;
                    this.SendPropertyChanged("UnitBarcode");
                    this.OnUnitBarcodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SupplierProductCode", DbType = "Char(14)", UpdateCheck = UpdateCheck.Never)]
        public string SupplierProductCode
        {
            get
            {
                return this._SupplierProductCode;
            }
            set
            {
                if ((this._SupplierProductCode != value))
                {
                    this.OnSupplierProductCodeChanging(value);
                    this.SendPropertyChanging();
                    this._SupplierProductCode = value;
                    this.SendPropertyChanged("SupplierProductCode");
                    this.OnSupplierProductCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProductDescription", DbType = "VarChar(MAX)", UpdateCheck = UpdateCheck.Never)]
        public string ProductDescription
        {
            get
            {
                return this._ProductDescription;
            }
            set
            {
                if ((this._ProductDescription != value))
                {
                    this.OnProductDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._ProductDescription = value;
                    this.SendPropertyChanged("ProductDescription");
                    this.OnProductDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Quantity", DbType = "Decimal(18,0)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> Quantity
        {
            get
            {
                return this._Quantity;
            }
            set
            {
                if ((this._Quantity != value))
                {
                    this.OnQuantityChanging(value);
                    this.SendPropertyChanging();
                    this._Quantity = value;
                    this.SendPropertyChanged("Quantity");
                    this.OnQuantityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmendedOrderQuantity", DbType = "Decimal(18,0)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> AmendedOrderQuantity
        {
            get
            {
                return this._AmendedOrderQuantity;
            }
            set
            {
                if ((this._AmendedOrderQuantity != value))
                {
                    this.OnAmendedOrderQuantityChanging(value);
                    this.SendPropertyChanging();
                    this._AmendedOrderQuantity = value;
                    this.SendPropertyChanged("AmendedOrderQuantity");
                    this.OnAmendedOrderQuantityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CostPrice", DbType = "Money", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> CostPrice
        {
            get
            {
                return this._CostPrice;
            }
            set
            {
                if ((this._CostPrice != value))
                {
                    this.OnCostPriceChanging(value);
                    this.SendPropertyChanging();
                    this._CostPrice = value;
                    this.SendPropertyChanged("CostPrice");
                    this.OnCostPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VatRate", DbType = "Decimal(18,0)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> VatRate
        {
            get
            {
                return this._VatRate;
            }
            set
            {
                if ((this._VatRate != value))
                {
                    this.OnVatRateChanging(value);
                    this.SendPropertyChanging();
                    this._VatRate = value;
                    this.SendPropertyChanged("VatRate");
                    this.OnVatRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineCost", DbType = "Money", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> LineCost
        {
            get
            {
                return this._LineCost;
            }
            set
            {
                if ((this._LineCost != value))
                {
                    this.OnLineCostChanging(value);
                    this.SendPropertyChanging();
                    this._LineCost = value;
                    this.SendPropertyChanged("LineCost");
                    this.OnLineCostChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Narrative", DbType = "VarChar(40)", UpdateCheck = UpdateCheck.Never)]
        public string Narrative
        {
            get
            {
                return this._Narrative;
            }
            set
            {
                if ((this._Narrative != value))
                {
                    this.OnNarrativeChanging(value);
                    this.SendPropertyChanging();
                    this._Narrative = value;
                    this.SendPropertyChanged("Narrative");
                    this.OnNarrativeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PackSize", DbType = "Decimal(18,0)", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> PackSize
        {
            get
            {
                return this._PackSize;
            }
            set
            {
                if ((this._PackSize != value))
                {
                    this.OnPackSizeChanging(value);
                    this.SendPropertyChanging();
                    this._PackSize = value;
                    this.SendPropertyChanged("PackSize");
                    this.OnPackSizeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RowVersion", AutoSync = AutoSync.Always, DbType = "rowversion NOT NULL", CanBeNull = false, IsDbGenerated = true, IsVersion = true, UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary RowVersion
        {
            get
            {
                return this._RowVersion;
            }
            set
            {
                if ((this._RowVersion != value))
                {
                    this.OnRowVersionChanging(value);
                    this.SendPropertyChanging();
                    this._RowVersion = value;
                    this.SendPropertyChanged("RowVersion");
                    this.OnRowVersionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Order_OrderLine", Storage = "_Order", ThisKey = "OrderId", OtherKey = "OrderId", IsForeignKey = true)]
        public Order Order
        {
            get
            {
                return this._Order.Entity;
            }
            set
            {
                Order previousValue = this._Order.Entity;
                if (((previousValue != value)
                            || (this._Order.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Order.Entity = null;
                        previousValue.OrderLines.Remove(this);
                    }
                    this._Order.Entity = value;
                    if ((value != null))
                    {
                        value.OrderLines.Add(this);
                        this._OrderId = value.OrderId;
                    }
                    else
                    {
                        this._OrderId = default(int);
                    }
                    this.SendPropertyChanged("Order");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class GetEmailDetailsResult
    {

        private int _EmailDetailId;

        private System.Nullable<int> _TradingPartnerParentId;

        private System.Nullable<bool> _IsEmailNotificationEnabled;

        private string _SupplierName;

        private string _DestinationRetailer;

        private string _OrderingRetailer;

        private string _EmailToAddress;

        private string _UriRoot;

        private string _EmailAddressFrom;

        private string _EmailSubjectLine;

        private string _SmtpHost;

        public GetEmailDetailsResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailDetailId", DbType = "Int NOT NULL")]
        public int EmailDetailId
        {
            get
            {
                return this._EmailDetailId;
            }
            set
            {
                if ((this._EmailDetailId != value))
                {
                    this._EmailDetailId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradingPartnerParentId", DbType = "Int")]
        public System.Nullable<int> TradingPartnerParentId
        {
            get
            {
                return this._TradingPartnerParentId;
            }
            set
            {
                if ((this._TradingPartnerParentId != value))
                {
                    this._TradingPartnerParentId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsEmailNotificationEnabled", DbType = "Bit")]
        public System.Nullable<bool> IsEmailNotificationEnabled
        {
            get
            {
                return this._IsEmailNotificationEnabled;
            }
            set
            {
                if ((this._IsEmailNotificationEnabled != value))
                {
                    this._IsEmailNotificationEnabled = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SupplierName", DbType = "VarChar(50)")]
        public string SupplierName
        {
            get
            {
                return this._SupplierName;
            }
            set
            {
                if ((this._SupplierName != value))
                {
                    this._SupplierName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DestinationRetailer", DbType = "VarChar(50)")]
        public string DestinationRetailer
        {
            get
            {
                return this._DestinationRetailer;
            }
            set
            {
                if ((this._DestinationRetailer != value))
                {
                    this._DestinationRetailer = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrderingRetailer", DbType = "VarChar(50)")]
        public string OrderingRetailer
        {
            get
            {
                return this._OrderingRetailer;
            }
            set
            {
                if ((this._OrderingRetailer != value))
                {
                    this._OrderingRetailer = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailToAddress", DbType = "VarChar(200)")]
        public string EmailToAddress
        {
            get
            {
                return this._EmailToAddress;
            }
            set
            {
                if ((this._EmailToAddress != value))
                {
                    this._EmailToAddress = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UriRoot", DbType = "VarChar(24) NOT NULL", CanBeNull = false)]
        public string UriRoot
        {
            get
            {
                return this._UriRoot;
            }
            set
            {
                if ((this._UriRoot != value))
                {
                    this._UriRoot = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailAddressFrom", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string EmailAddressFrom
        {
            get
            {
                return this._EmailAddressFrom;
            }
            set
            {
                if ((this._EmailAddressFrom != value))
                {
                    this._EmailAddressFrom = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EmailSubjectLine", DbType = "VarChar(28) NOT NULL", CanBeNull = false)]
        public string EmailSubjectLine
        {
            get
            {
                return this._EmailSubjectLine;
            }
            set
            {
                if ((this._EmailSubjectLine != value))
                {
                    this._EmailSubjectLine = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SmtpHost", DbType = "VarChar(14) NOT NULL", CanBeNull = false)]
        public string SmtpHost
        {
            get
            {
                return this._SmtpHost;
            }
            set
            {
                if ((this._SmtpHost != value))
                {
                    this._SmtpHost = value;
                }
            }
        }
    }
}
#pragma warning restore 1591
