#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spar.Gateway.StoreList
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SparDS")]
	public partial class StoreListDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertStoreEmail(StoreEmail instance);
    partial void UpdateStoreEmail(StoreEmail instance);
    partial void DeleteStoreEmail(StoreEmail instance);
    partial void InsertLookup_DCId(Lookup_DCId instance);
    partial void UpdateLookup_DCId(Lookup_DCId instance);
    partial void DeleteLookup_DCId(Lookup_DCId instance);
    #endregion
		
		public StoreListDataContext() : 
				base(global::Spar.Gateway.StoreList.Properties.Settings.Default.SparDSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StoreListDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreListDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreListDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StoreListDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<StoreEmail> StoreEmails
		{
			get
			{
				return this.GetTable<StoreEmail>();
			}
		}
		
		public System.Data.Linq.Table<Lookup_DCId> Lookup_DCIds
		{
			get
			{
				return this.GetTable<Lookup_DCId>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistributionId;
		
		private string _Name;
		
		private string _PhoneNumber;
		
		private string _FaxNumber;
		
		private System.Nullable<int> _UserId;
		
		private string _Gln;
		
		private string _Code;
		
		private string _Address;
		
		private string _OwnerName;
		
		private string _ManagerName;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _IsLive;
		
		private System.Nullable<int> _DCId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _Action;
		
		private System.Nullable<System.DateTime> _ActionDate;
		
		private string _Vat;
		
		private string _Email;
		
		private string _FormatType;
		
		private string _CountryCode;
		
		private string _ClaimsForSupplierIndicator;
		
		private string _STcItemSocRqd;
		
		private string _STcExportCustInd;
		
		private string _STcExportVatInd;
		
		private string _ClaimCaptureOverrideIndicator;
		
		private EntitySet<StoreEmail> _StoreEmails;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnGlnChanging(string value);
    partial void OnGlnChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnOwnerNameChanging(string value);
    partial void OnOwnerNameChanged();
    partial void OnManagerNameChanging(string value);
    partial void OnManagerNameChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnIsLiveChanging(System.Nullable<int> value);
    partial void OnIsLiveChanged();
    partial void OnDcIdChanging(System.Nullable<int> value);
    partial void OnDcIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnActionChanging(System.Nullable<int> value);
    partial void OnActionChanged();
    partial void OnActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionDateChanged();
    partial void OnVatChanging(string value);
    partial void OnVatChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFormatTypeChanging(string value);
    partial void OnFormatTypeChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnClaimsForSupplierIndicatorChanging(string value);
    partial void OnClaimsForSupplierIndicatorChanged();
    partial void OnSTcItemSocRqdChanging(string value);
    partial void OnSTcItemSocRqdChanged();
    partial void OnSTcExportCustIndChanging(string value);
    partial void OnSTcExportCustIndChanged();
    partial void OnSTcExportVatIndChanging(string value);
    partial void OnSTcExportVatIndChanged();
    partial void OnClaimCaptureOverrideIndicatorChanging(string value);
    partial void OnClaimCaptureOverrideIndicatorChanged();
    #endregion
		
		public Store()
		{
			this._StoreEmails = new EntitySet<StoreEmail>(new Action<StoreEmail>(this.attach_StoreEmails), new Action<StoreEmail>(this.detach_StoreEmails));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STID", Storage="_DistributionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._DistributionId;
			}
			set
			{
				if ((this._DistributionId != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._DistributionId = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcName", Storage="_Name", DbType="VarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcPhoneNumber", Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcFaxNumber", Storage="_FaxNumber", DbType="VarChar(50)")]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STiUserID", Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcEANNumber", Storage="_Gln", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Gln
		{
			get
			{
				return this._Gln;
			}
			set
			{
				if ((this._Gln != value))
				{
					this.OnGlnChanging(value);
					this.SendPropertyChanging();
					this._Gln = value;
					this.SendPropertyChanged("Gln");
					this.OnGlnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcCode", Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcAddress", Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcOwner", Storage="_OwnerName", DbType="VarChar(200)")]
		public string OwnerName
		{
			get
			{
				return this._OwnerName;
			}
			set
			{
				if ((this._OwnerName != value))
				{
					this.OnOwnerNameChanging(value);
					this.SendPropertyChanging();
					this._OwnerName = value;
					this.SendPropertyChanged("OwnerName");
					this.OnOwnerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcManager", Storage="_ManagerName", DbType="VarChar(200)")]
		public string ManagerName
		{
			get
			{
				return this._ManagerName;
			}
			set
			{
				if ((this._ManagerName != value))
				{
					this.OnManagerNameChanging(value);
					this.SendPropertyChanging();
					this._ManagerName = value;
					this.SendPropertyChanged("ManagerName");
					this.OnManagerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STiParent", Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STiIsLive", Storage="_IsLive", DbType="Int")]
		public System.Nullable<int> IsLive
		{
			get
			{
				return this._IsLive;
			}
			set
			{
				if ((this._IsLive != value))
				{
					this.OnIsLiveChanging(value);
					this.SendPropertyChanging();
					this._IsLive = value;
					this.SendPropertyChanged("IsLive");
					this.OnIsLiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STiDCID", Storage="_DCId", DbType="Int")]
		public System.Nullable<int> DcId
		{
			get
			{
				return this._DCId;
			}
			set
			{
				if ((this._DCId != value))
				{
					this.OnDcIdChanging(value);
					this.SendPropertyChanging();
					this._DCId = value;
					this.SendPropertyChanged("DcId");
					this.OnDcIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STdCreateDate", Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STiAction", Storage="_Action", DbType="Int")]
		public System.Nullable<int> Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STdActionDate", Storage="_ActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcVatNumber", Storage="_Vat", DbType="VarChar(50)")]
		public string Vat
		{
			get
			{
				return this._Vat;
			}
			set
			{
				if ((this._Vat != value))
				{
					this.OnVatChanging(value);
					this.SendPropertyChanging();
					this._Vat = value;
					this.SendPropertyChanged("Vat");
					this.OnVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcEmail", Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcFormattypeDesc", Storage="_FormatType", DbType="VarChar(50)")]
		public string FormatType
		{
			get
			{
				return this._FormatType;
			}
			set
			{
				if ((this._FormatType != value))
				{
					this.OnFormatTypeChanging(value);
					this.SendPropertyChanging();
					this._FormatType = value;
					this.SendPropertyChanged("FormatType");
					this.OnFormatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcCountryCode", Storage="_CountryCode", DbType="VarChar(50)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="STcCalimsforSuppInd", Storage="_ClaimsForSupplierIndicator", DbType="VarChar(50)")]
		public string ClaimsForSupplierIndicator
		{
			get
			{
				return this._ClaimsForSupplierIndicator;
			}
			set
			{
				if ((this._ClaimsForSupplierIndicator != value))
				{
					this.OnClaimsForSupplierIndicatorChanging(value);
					this.SendPropertyChanging();
					this._ClaimsForSupplierIndicator = value;
					this.SendPropertyChanged("ClaimsForSupplierIndicator");
					this.OnClaimsForSupplierIndicatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STcItemSocRqd", DbType="VarChar(50)")]
		public string STcItemSocRqd
		{
			get
			{
				return this._STcItemSocRqd;
			}
			set
			{
				if ((this._STcItemSocRqd != value))
				{
					this.OnSTcItemSocRqdChanging(value);
					this.SendPropertyChanging();
					this._STcItemSocRqd = value;
					this.SendPropertyChanged("STcItemSocRqd");
					this.OnSTcItemSocRqdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STcExportCustInd", DbType="VarChar(50)")]
		public string STcExportCustInd
		{
			get
			{
				return this._STcExportCustInd;
			}
			set
			{
				if ((this._STcExportCustInd != value))
				{
					this.OnSTcExportCustIndChanging(value);
					this.SendPropertyChanging();
					this._STcExportCustInd = value;
					this.SendPropertyChanged("STcExportCustInd");
					this.OnSTcExportCustIndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STcExportVatInd", DbType="VarChar(50)")]
		public string STcExportVatInd
		{
			get
			{
				return this._STcExportVatInd;
			}
			set
			{
				if ((this._STcExportVatInd != value))
				{
					this.OnSTcExportVatIndChanging(value);
					this.SendPropertyChanging();
					this._STcExportVatInd = value;
					this.SendPropertyChanged("STcExportVatInd");
					this.OnSTcExportVatIndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimCaptureOverrideIndicator", DbType="nchar(10)")]
		public string ClaimCaptureOverrideIndicator
		{
			get
			{
				return this._ClaimCaptureOverrideIndicator;
			}
			set
			{
				if ((this._ClaimCaptureOverrideIndicator != value))
				{
					this.OnClaimCaptureOverrideIndicatorChanging(value);
					this.SendPropertyChanging();
					this._ClaimCaptureOverrideIndicator = value;
					this.SendPropertyChanged("ClaimCaptureOverrideIndicator");
					this.OnClaimCaptureOverrideIndicatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreEmail", Storage="_StoreEmails", ThisKey="Id", OtherKey="StoreId")]
		public EntitySet<StoreEmail> StoreEmails
		{
			get
			{
				return this._StoreEmails;
			}
			set
			{
				this._StoreEmails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Store", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Stores.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Stores.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreEmails(StoreEmail entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_StoreEmails(StoreEmail entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Password;
		
		private int _Type;
		
		private int _Permission;
		
		private int _ChangePassword;
		
		private int _Disabled;
		
		private System.Nullable<int> _DCId;
		
		private System.Nullable<int> _ParentId;
		
		private EntitySet<Store> _Stores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnPermissionChanging(int value);
    partial void OnPermissionChanged();
    partial void OnChangePasswordChanging(int value);
    partial void OnChangePasswordChanged();
    partial void OnDisabledChanging(int value);
    partial void OnDisabledChanged();
    partial void OnDcIdChanging(System.Nullable<int> value);
    partial void OnDcIdChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    #endregion
		
		public User()
		{
			this._Stores = new EntitySet<Store>(new Action<Store>(this.attach_Stores), new Action<Store>(this.detach_Stores));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UScUserName", Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="UScPassword", Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USiType", Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USiPermission", Storage="_Permission", DbType="Int NOT NULL")]
		public int Permission
		{
			get
			{
				return this._Permission;
			}
			set
			{
				if ((this._Permission != value))
				{
					this.OnPermissionChanging(value);
					this.SendPropertyChanging();
					this._Permission = value;
					this.SendPropertyChanged("Permission");
					this.OnPermissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USiChangePwd", Storage="_ChangePassword", DbType="Int NOT NULL")]
		public int ChangePassword
		{
			get
			{
				return this._ChangePassword;
			}
			set
			{
				if ((this._ChangePassword != value))
				{
					this.OnChangePasswordChanging(value);
					this.SendPropertyChanging();
					this._ChangePassword = value;
					this.SendPropertyChanged("ChangePassword");
					this.OnChangePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USiDisable", Storage="_Disabled", DbType="Int NOT NULL")]
		public int Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USiDCID", Storage="_DCId", DbType="Int")]
		public System.Nullable<int> DcId
		{
			get
			{
				return this._DCId;
			}
			set
			{
				if ((this._DCId != value))
				{
					this.OnDcIdChanging(value);
					this.SendPropertyChanging();
					this._DCId = value;
					this.SendPropertyChanged("DcId");
					this.OnDcIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="USiParent", Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Store", Storage="_Stores", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Store> Stores
		{
			get
			{
				return this._Stores;
			}
			set
			{
				this._Stores.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreEmail")]
	public partial class StoreEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StoreId;
		
		private string _Email;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStoreIdChanging(System.Nullable<int> value);
    partial void OnStoreIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public StoreEmail()
		{
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SEID", Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SEiStoreID", Storage="_StoreId", DbType="Int")]
		public System.Nullable<int> StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SEcEmail", Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreEmail", Storage="_Store", ThisKey="StoreId", OtherKey="Id", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.StoreEmails.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.StoreEmails.Add(this);
						this._StoreId = value.Id;
					}
					else
					{
						this._StoreId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lookup_DCId")]
	public partial class Lookup_DCId : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _DistributionId;
		
		private int _DCId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDistributionIdChanging(string value);
    partial void OnDistributionIdChanged();
    partial void OnDCIdChanging(int value);
    partial void OnDCIdChanged();
    #endregion
		
		public Lookup_DCId()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributionId", DbType="VarChar(20)", CanBeNull=false)]
		public string DistributionId
		{
			get
			{
				return this._DistributionId;
			}
			set
			{
				if ((this._DistributionId != value))
				{
					this.OnDistributionIdChanging(value);
					this.SendPropertyChanging();
					this._DistributionId = value;
					this.SendPropertyChanged("DistributionId");
					this.OnDistributionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCId", DbType="Int")]
		public int DCId
		{
			get
			{
				return this._DCId;
			}
			set
			{
				if ((this._DCId != value))
				{
					this.OnDCIdChanging(value);
					this.SendPropertyChanging();
					this._DCId = value;
					this.SendPropertyChanged("DCId");
					this.OnDCIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
