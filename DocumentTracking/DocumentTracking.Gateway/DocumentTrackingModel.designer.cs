#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocumentTracking.Gateway
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TradingBridgeDomain")]
	public partial class DocumentTrackingModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTrackingDocument(TrackingDocument instance);
    partial void UpdateTrackingDocument(TrackingDocument instance);
    partial void DeleteTrackingDocument(TrackingDocument instance);
    partial void InsertTrackingDocumentReference(TrackingDocumentReference instance);
    partial void UpdateTrackingDocumentReference(TrackingDocumentReference instance);
    partial void DeleteTrackingDocumentReference(TrackingDocumentReference instance);
    partial void InsertTrackingDocumentSystem(TrackingDocumentSystem instance);
    partial void UpdateTrackingDocumentSystem(TrackingDocumentSystem instance);
    partial void DeleteTrackingDocumentSystem(TrackingDocumentSystem instance);
    partial void InsertTrackingDocumentDetail(TrackingDocumentDetail instance);
    partial void UpdateTrackingDocumentDetail(TrackingDocumentDetail instance);
    partial void DeleteTrackingDocumentDetail(TrackingDocumentDetail instance);
    #endregion
		
		public DocumentTrackingModelDataContext() : 
				base(global::DocumentTracking.Gateway.Properties.Settings.Default.TradingBridgeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentTrackingModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentTrackingModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentTrackingModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentTrackingModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TrackingDocument> TrackingDocuments
		{
			get
			{
				return this.GetTable<TrackingDocument>();
			}
		}
		
		public System.Data.Linq.Table<TrackingDocumentReference> TrackingDocumentReferences
		{
			get
			{
				return this.GetTable<TrackingDocumentReference>();
			}
		}
		
		public System.Data.Linq.Table<TrackingDocumentSystem> TrackingDocumentSystems
		{
			get
			{
				return this.GetTable<TrackingDocumentSystem>();
			}
		}
		
		public System.Data.Linq.Table<TrackingDocumentDetail> TrackingDocumentDetails
		{
			get
			{
				return this.GetTable<TrackingDocumentDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrackingDocuments")]
	public partial class TrackingDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Data.Linq.Binary _Version;
		
		private string _DocumentType;
		
		private string _DocumentFormat;
		
		private string _DocumentIdentifier;
		
		private System.DateTime _DocumentTimestamp;
		
		private string _DocumentDeliveryPoint;
		
		private string _SourceInterchangeNumber;
		
		private string _SourceTradingPartnerEan;
		
		private string _DestinationInterchangeNumber;
		
		private string _DestinationTradingPartnerEan;
		
		private System.Guid _System_Id;
		
		private string _CustomData;
		
		private EntitySet<TrackingDocumentReference> _TrackingDocumentReferences;
		
		private EntitySet<TrackingDocumentDetail> _TrackingDocumentDetails;
		
		private EntityRef<TrackingDocumentSystem> _TrackingDocumentSystem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    partial void OnDocumentFormatChanging(string value);
    partial void OnDocumentFormatChanged();
    partial void OnDocumentIdentifierChanging(string value);
    partial void OnDocumentIdentifierChanged();
    partial void OnDocumentTimestampChanging(System.DateTime value);
    partial void OnDocumentTimestampChanged();
    partial void OnDocumentDeliveryPointChanging(string value);
    partial void OnDocumentDeliveryPointChanged();
    partial void OnSourceInterchangeNumberChanging(string value);
    partial void OnSourceInterchangeNumberChanged();
    partial void OnSourceTradingPartnerEanChanging(string value);
    partial void OnSourceTradingPartnerEanChanged();
    partial void OnDestinationInterchangeNumberChanging(string value);
    partial void OnDestinationInterchangeNumberChanged();
    partial void OnDestinationTradingPartnerEanChanging(string value);
    partial void OnDestinationTradingPartnerEanChanged();
    partial void OnSystem_IdChanging(System.Guid value);
    partial void OnSystem_IdChanged();
    partial void OnCustomDataChanging(string value);
    partial void OnCustomDataChanged();
    #endregion
		
		public TrackingDocument()
		{
			this._TrackingDocumentReferences = new EntitySet<TrackingDocumentReference>(new Action<TrackingDocumentReference>(this.attach_TrackingDocumentReferences), new Action<TrackingDocumentReference>(this.detach_TrackingDocumentReferences));
			this._TrackingDocumentDetails = new EntitySet<TrackingDocumentDetail>(new Action<TrackingDocumentDetail>(this.attach_TrackingDocumentDetails), new Action<TrackingDocumentDetail>(this.detach_TrackingDocumentDetails));
			this._TrackingDocumentSystem = default(EntityRef<TrackingDocumentSystem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentFormat", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentFormat
		{
			get
			{
				return this._DocumentFormat;
			}
			set
			{
				if ((this._DocumentFormat != value))
				{
					this.OnDocumentFormatChanging(value);
					this.SendPropertyChanging();
					this._DocumentFormat = value;
					this.SendPropertyChanged("DocumentFormat");
					this.OnDocumentFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentIdentifier", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentIdentifier
		{
			get
			{
				return this._DocumentIdentifier;
			}
			set
			{
				if ((this._DocumentIdentifier != value))
				{
					this.OnDocumentIdentifierChanging(value);
					this.SendPropertyChanging();
					this._DocumentIdentifier = value;
					this.SendPropertyChanged("DocumentIdentifier");
					this.OnDocumentIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTimestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DocumentTimestamp
		{
			get
			{
				return this._DocumentTimestamp;
			}
			set
			{
				if ((this._DocumentTimestamp != value))
				{
					this.OnDocumentTimestampChanging(value);
					this.SendPropertyChanging();
					this._DocumentTimestamp = value;
					this.SendPropertyChanged("DocumentTimestamp");
					this.OnDocumentTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDeliveryPoint", DbType="NVarChar(13) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentDeliveryPoint
		{
			get
			{
				return this._DocumentDeliveryPoint;
			}
			set
			{
				if ((this._DocumentDeliveryPoint != value))
				{
					this.OnDocumentDeliveryPointChanging(value);
					this.SendPropertyChanging();
					this._DocumentDeliveryPoint = value;
					this.SendPropertyChanged("DocumentDeliveryPoint");
					this.OnDocumentDeliveryPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceInterchangeNumber", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SourceInterchangeNumber
		{
			get
			{
				return this._SourceInterchangeNumber;
			}
			set
			{
				if ((this._SourceInterchangeNumber != value))
				{
					this.OnSourceInterchangeNumberChanging(value);
					this.SendPropertyChanging();
					this._SourceInterchangeNumber = value;
					this.SendPropertyChanged("SourceInterchangeNumber");
					this.OnSourceInterchangeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTradingPartnerEan", DbType="NVarChar(14) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SourceTradingPartnerEan
		{
			get
			{
				return this._SourceTradingPartnerEan;
			}
			set
			{
				if ((this._SourceTradingPartnerEan != value))
				{
					this.OnSourceTradingPartnerEanChanging(value);
					this.SendPropertyChanging();
					this._SourceTradingPartnerEan = value;
					this.SendPropertyChanged("SourceTradingPartnerEan");
					this.OnSourceTradingPartnerEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationInterchangeNumber", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DestinationInterchangeNumber
		{
			get
			{
				return this._DestinationInterchangeNumber;
			}
			set
			{
				if ((this._DestinationInterchangeNumber != value))
				{
					this.OnDestinationInterchangeNumberChanging(value);
					this.SendPropertyChanging();
					this._DestinationInterchangeNumber = value;
					this.SendPropertyChanged("DestinationInterchangeNumber");
					this.OnDestinationInterchangeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationTradingPartnerEan", DbType="NVarChar(14) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DestinationTradingPartnerEan
		{
			get
			{
				return this._DestinationTradingPartnerEan;
			}
			set
			{
				if ((this._DestinationTradingPartnerEan != value))
				{
					this.OnDestinationTradingPartnerEanChanging(value);
					this.SendPropertyChanging();
					this._DestinationTradingPartnerEan = value;
					this.SendPropertyChanged("DestinationTradingPartnerEan");
					this.OnDestinationTradingPartnerEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System_Id", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid System_Id
		{
			get
			{
				return this._System_Id;
			}
			set
			{
				if ((this._System_Id != value))
				{
					if (this._TrackingDocumentSystem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystem_IdChanging(value);
					this.SendPropertyChanging();
					this._System_Id = value;
					this.SendPropertyChanged("System_Id");
					this.OnSystem_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomData", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string CustomData
		{
			get
			{
				return this._CustomData;
			}
			set
			{
				if ((this._CustomData != value))
				{
					this.OnCustomDataChanging(value);
					this.SendPropertyChanging();
					this._CustomData = value;
					this.SendPropertyChanged("CustomData");
					this.OnCustomDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackingDocument_TrackingDocumentReference", Storage="_TrackingDocumentReferences", ThisKey="Id", OtherKey="TrackingDocument_Id")]
		public EntitySet<TrackingDocumentReference> TrackingDocumentReferences
		{
			get
			{
				return this._TrackingDocumentReferences;
			}
			set
			{
				this._TrackingDocumentReferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackingDocument_TrackingDocumentDetail", Storage="_TrackingDocumentDetails", ThisKey="Id", OtherKey="TrackingDocumentId")]
		public EntitySet<TrackingDocumentDetail> TrackingDocumentDetails
		{
			get
			{
				return this._TrackingDocumentDetails;
			}
			set
			{
				this._TrackingDocumentDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackingDocumentSystem_TrackingDocument", Storage="_TrackingDocumentSystem", ThisKey="System_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrackingDocumentSystem TrackingDocumentSystem
		{
			get
			{
				return this._TrackingDocumentSystem.Entity;
			}
			set
			{
				TrackingDocumentSystem previousValue = this._TrackingDocumentSystem.Entity;
				if (((previousValue != value) 
							|| (this._TrackingDocumentSystem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackingDocumentSystem.Entity = null;
						previousValue.TrackingDocuments.Remove(this);
					}
					this._TrackingDocumentSystem.Entity = value;
					if ((value != null))
					{
						value.TrackingDocuments.Add(this);
						this._System_Id = value.Id;
					}
					else
					{
						this._System_Id = default(System.Guid);
					}
					this.SendPropertyChanged("TrackingDocumentSystem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrackingDocumentReferences(TrackingDocumentReference entity)
		{
			this.SendPropertyChanging();
			entity.TrackingDocument = this;
		}
		
		private void detach_TrackingDocumentReferences(TrackingDocumentReference entity)
		{
			this.SendPropertyChanging();
			entity.TrackingDocument = null;
		}
		
		private void attach_TrackingDocumentDetails(TrackingDocumentDetail entity)
		{
			this.SendPropertyChanging();
			entity.TrackingDocument = this;
		}
		
		private void detach_TrackingDocumentDetails(TrackingDocumentDetail entity)
		{
			this.SendPropertyChanging();
			entity.TrackingDocument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrackingDocumentReferences")]
	public partial class TrackingDocumentReference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Data.Linq.Binary _Version;
		
		private string _DocumentType;
		
		private string _DocumentIdentifier;
		
		private System.DateTime _DocumentTimestamp;
		
		private System.Nullable<System.Guid> _TrackingDocument_Id;
		
		private EntityRef<TrackingDocument> _TrackingDocument;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    partial void OnDocumentIdentifierChanging(string value);
    partial void OnDocumentIdentifierChanged();
    partial void OnDocumentTimestampChanging(System.DateTime value);
    partial void OnDocumentTimestampChanged();
    partial void OnTrackingDocument_IdChanging(System.Nullable<System.Guid> value);
    partial void OnTrackingDocument_IdChanged();
    #endregion
		
		public TrackingDocumentReference()
		{
			this._TrackingDocument = default(EntityRef<TrackingDocument>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentIdentifier", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentIdentifier
		{
			get
			{
				return this._DocumentIdentifier;
			}
			set
			{
				if ((this._DocumentIdentifier != value))
				{
					this.OnDocumentIdentifierChanging(value);
					this.SendPropertyChanging();
					this._DocumentIdentifier = value;
					this.SendPropertyChanged("DocumentIdentifier");
					this.OnDocumentIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTimestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DocumentTimestamp
		{
			get
			{
				return this._DocumentTimestamp;
			}
			set
			{
				if ((this._DocumentTimestamp != value))
				{
					this.OnDocumentTimestampChanging(value);
					this.SendPropertyChanging();
					this._DocumentTimestamp = value;
					this.SendPropertyChanged("DocumentTimestamp");
					this.OnDocumentTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDocument_Id", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> TrackingDocument_Id
		{
			get
			{
				return this._TrackingDocument_Id;
			}
			set
			{
				if ((this._TrackingDocument_Id != value))
				{
					if (this._TrackingDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackingDocument_IdChanging(value);
					this.SendPropertyChanging();
					this._TrackingDocument_Id = value;
					this.SendPropertyChanged("TrackingDocument_Id");
					this.OnTrackingDocument_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackingDocument_TrackingDocumentReference", Storage="_TrackingDocument", ThisKey="TrackingDocument_Id", OtherKey="Id", IsForeignKey=true)]
		public TrackingDocument TrackingDocument
		{
			get
			{
				return this._TrackingDocument.Entity;
			}
			set
			{
				TrackingDocument previousValue = this._TrackingDocument.Entity;
				if (((previousValue != value) 
							|| (this._TrackingDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackingDocument.Entity = null;
						previousValue.TrackingDocumentReferences.Remove(this);
					}
					this._TrackingDocument.Entity = value;
					if ((value != null))
					{
						value.TrackingDocumentReferences.Add(this);
						this._TrackingDocument_Id = value.Id;
					}
					else
					{
						this._TrackingDocument_Id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TrackingDocument");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrackingDocumentSystems")]
	public partial class TrackingDocumentSystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Data.Linq.Binary _Version;
		
		private string _Name;
		
		private string _GroupId;
		
		private System.DateTime _Timestamp;
		
		private string _FileInputPath;
		
		private string _FileOutputPath;
		
		private string _Status;
		
		private string _StatusMessage;
		
		private EntitySet<TrackingDocument> _TrackingDocuments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupIdChanging(string value);
    partial void OnGroupIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnFileInputPathChanging(string value);
    partial void OnFileInputPathChanged();
    partial void OnFileOutputPathChanging(string value);
    partial void OnFileOutputPathChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnStatusMessageChanging(string value);
    partial void OnStatusMessageChanged();
    #endregion
		
		public TrackingDocumentSystem()
		{
			this._TrackingDocuments = new EntitySet<TrackingDocument>(new Action<TrackingDocument>(this.attach_TrackingDocuments), new Action<TrackingDocument>(this.detach_TrackingDocuments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="NVarChar(14) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileInputPath", DbType="NVarChar(3000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FileInputPath
		{
			get
			{
				return this._FileInputPath;
			}
			set
			{
				if ((this._FileInputPath != value))
				{
					this.OnFileInputPathChanging(value);
					this.SendPropertyChanging();
					this._FileInputPath = value;
					this.SendPropertyChanged("FileInputPath");
					this.OnFileInputPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileOutputPath", DbType="NVarChar(3000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FileOutputPath
		{
			get
			{
				return this._FileOutputPath;
			}
			set
			{
				if ((this._FileOutputPath != value))
				{
					this.OnFileOutputPathChanging(value);
					this.SendPropertyChanging();
					this._FileOutputPath = value;
					this.SendPropertyChanged("FileOutputPath");
					this.OnFileOutputPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusMessage", DbType="NVarChar(3000)", UpdateCheck=UpdateCheck.Never)]
		public string StatusMessage
		{
			get
			{
				return this._StatusMessage;
			}
			set
			{
				if ((this._StatusMessage != value))
				{
					this.OnStatusMessageChanging(value);
					this.SendPropertyChanging();
					this._StatusMessage = value;
					this.SendPropertyChanged("StatusMessage");
					this.OnStatusMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackingDocumentSystem_TrackingDocument", Storage="_TrackingDocuments", ThisKey="Id", OtherKey="System_Id")]
		public EntitySet<TrackingDocument> TrackingDocuments
		{
			get
			{
				return this._TrackingDocuments;
			}
			set
			{
				this._TrackingDocuments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrackingDocuments(TrackingDocument entity)
		{
			this.SendPropertyChanging();
			entity.TrackingDocumentSystem = this;
		}
		
		private void detach_TrackingDocuments(TrackingDocument entity)
		{
			this.SendPropertyChanging();
			entity.TrackingDocumentSystem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrackingDocumentDetails")]
	public partial class TrackingDocumentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _DocumentType;
		
		private string _DocumentFormat;
		
		private System.DateTime _DocumentTimestamp;
		
		private string _SourceTradingPartnerEan;
		
		private string _DestinationTradingPartnerEan;
		
		private System.Guid _TrackingDocumentId;
		
		private EntityRef<TrackingDocument> _TrackingDocument;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    partial void OnDocumentFormatChanging(string value);
    partial void OnDocumentFormatChanged();
    partial void OnDocumentTimestampChanging(System.DateTime value);
    partial void OnDocumentTimestampChanged();
    partial void OnSourceTradingPartnerEanChanging(string value);
    partial void OnSourceTradingPartnerEanChanged();
    partial void OnDestinationTradingPartnerEanChanging(string value);
    partial void OnDestinationTradingPartnerEanChanged();
    partial void OnTrackingDocumentIdChanging(System.Guid value);
    partial void OnTrackingDocumentIdChanged();
    #endregion
		
		public TrackingDocumentDetail()
		{
			this._TrackingDocument = default(EntityRef<TrackingDocument>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentFormat", DbType="VarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DocumentFormat
		{
			get
			{
				return this._DocumentFormat;
			}
			set
			{
				if ((this._DocumentFormat != value))
				{
					this.OnDocumentFormatChanging(value);
					this.SendPropertyChanging();
					this._DocumentFormat = value;
					this.SendPropertyChanged("DocumentFormat");
					this.OnDocumentFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTimestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DocumentTimestamp
		{
			get
			{
				return this._DocumentTimestamp;
			}
			set
			{
				if ((this._DocumentTimestamp != value))
				{
					this.OnDocumentTimestampChanging(value);
					this.SendPropertyChanging();
					this._DocumentTimestamp = value;
					this.SendPropertyChanged("DocumentTimestamp");
					this.OnDocumentTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceTradingPartnerEan", DbType="VarChar(14) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string SourceTradingPartnerEan
		{
			get
			{
				return this._SourceTradingPartnerEan;
			}
			set
			{
				if ((this._SourceTradingPartnerEan != value))
				{
					this.OnSourceTradingPartnerEanChanging(value);
					this.SendPropertyChanging();
					this._SourceTradingPartnerEan = value;
					this.SendPropertyChanged("SourceTradingPartnerEan");
					this.OnSourceTradingPartnerEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestinationTradingPartnerEan", DbType="VarChar(14) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DestinationTradingPartnerEan
		{
			get
			{
				return this._DestinationTradingPartnerEan;
			}
			set
			{
				if ((this._DestinationTradingPartnerEan != value))
				{
					this.OnDestinationTradingPartnerEanChanging(value);
					this.SendPropertyChanging();
					this._DestinationTradingPartnerEan = value;
					this.SendPropertyChanged("DestinationTradingPartnerEan");
					this.OnDestinationTradingPartnerEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDocumentId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid TrackingDocumentId
		{
			get
			{
				return this._TrackingDocumentId;
			}
			set
			{
				if ((this._TrackingDocumentId != value))
				{
					if (this._TrackingDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTrackingDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._TrackingDocumentId = value;
					this.SendPropertyChanged("TrackingDocumentId");
					this.OnTrackingDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrackingDocument_TrackingDocumentDetail", Storage="_TrackingDocument", ThisKey="TrackingDocumentId", OtherKey="Id", IsForeignKey=true)]
		public TrackingDocument TrackingDocument
		{
			get
			{
				return this._TrackingDocument.Entity;
			}
			set
			{
				TrackingDocument previousValue = this._TrackingDocument.Entity;
				if (((previousValue != value) 
							|| (this._TrackingDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrackingDocument.Entity = null;
						previousValue.TrackingDocumentDetails.Remove(this);
					}
					this._TrackingDocument.Entity = value;
					if ((value != null))
					{
						value.TrackingDocumentDetails.Add(this);
						this._TrackingDocumentId = value.Id;
					}
					else
					{
						this._TrackingDocumentId = default(System.Guid);
					}
					this.SendPropertyChanged("TrackingDocument");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
