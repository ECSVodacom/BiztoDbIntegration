#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spar.Gateway.VendorList
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SparDS")]
	public partial class VendorDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertDC(DC instance);
    partial void UpdateDC(DC instance);
    partial void DeleteDC(DC instance);
    partial void InsertSupplierDCLookup(SupplierDCLookup instance);
    partial void UpdateSupplierDCLookup(SupplierDCLookup instance);
    partial void DeleteSupplierDCLookup(SupplierDCLookup instance);
    #endregion
		
		public VendorDataContext() : 
				base(global::Spar.Gateway.VendorList.Properties.Settings.Default.SparDSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VendorDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<DC> DCs
		{
			get
			{
				return this.GetTable<DC>();
			}
		}
		
		public System.Data.Linq.Table<SupplierDCLookup> SupplierDCLookups
		{
			get
			{
				return this.GetTable<SupplierDCLookup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SPID;
		
		private string _SPcName;
		
		private string _SPcAddress;
		
		private System.Nullable<int> _SPiUserID;
		
		private string _SPcEANNumber;
		
		private string _SPcVatNumber;
		
		private System.Nullable<int> _SPiParent;
		
		private System.Guid _msrepl_tran_version;
		
		private System.Nullable<int> _SPiIsXML;
		
		private string _SPcFuncEmail;
		
		private System.Nullable<int> _SPiMailAlert;
		
		private System.Nullable<int> _SPiClmRoute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSPIDChanging(int value);
    partial void OnSPIDChanged();
    partial void OnSPcNameChanging(string value);
    partial void OnSPcNameChanged();
    partial void OnSPcAddressChanging(string value);
    partial void OnSPcAddressChanged();
    partial void OnSPiUserIDChanging(System.Nullable<int> value);
    partial void OnSPiUserIDChanged();
    partial void OnSPcEANNumberChanging(string value);
    partial void OnSPcEANNumberChanged();
    partial void OnSPcVatNumberChanging(string value);
    partial void OnSPcVatNumberChanged();
    partial void OnSPiParentChanging(System.Nullable<int> value);
    partial void OnSPiParentChanged();
    partial void Onmsrepl_tran_versionChanging(System.Guid value);
    partial void Onmsrepl_tran_versionChanged();
    partial void OnSPiIsXMLChanging(System.Nullable<int> value);
    partial void OnSPiIsXMLChanged();
    partial void OnSPcFuncEmailChanging(string value);
    partial void OnSPcFuncEmailChanged();
    partial void OnSPiMailAlertChanging(System.Nullable<int> value);
    partial void OnSPiMailAlertChanged();
    partial void OnSPiClmRouteChanging(System.Nullable<int> value);
    partial void OnSPiClmRouteChanged();
    #endregion
		
		public Supplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SPID
		{
			get
			{
				return this._SPID;
			}
			set
			{
				if ((this._SPID != value))
				{
					this.OnSPIDChanging(value);
					this.SendPropertyChanging();
					this._SPID = value;
					this.SendPropertyChanged("SPID");
					this.OnSPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPcName", DbType="VarChar(50)")]
		public string SPcName
		{
			get
			{
				return this._SPcName;
			}
			set
			{
				if ((this._SPcName != value))
				{
					this.OnSPcNameChanging(value);
					this.SendPropertyChanging();
					this._SPcName = value;
					this.SendPropertyChanged("SPcName");
					this.OnSPcNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPcAddress", DbType="VarChar(200)")]
		public string SPcAddress
		{
			get
			{
				return this._SPcAddress;
			}
			set
			{
				if ((this._SPcAddress != value))
				{
					this.OnSPcAddressChanging(value);
					this.SendPropertyChanging();
					this._SPcAddress = value;
					this.SendPropertyChanged("SPcAddress");
					this.OnSPcAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPiUserID", DbType="Int")]
		public System.Nullable<int> SPiUserID
		{
			get
			{
				return this._SPiUserID;
			}
			set
			{
				if ((this._SPiUserID != value))
				{
					this.OnSPiUserIDChanging(value);
					this.SendPropertyChanging();
					this._SPiUserID = value;
					this.SendPropertyChanged("SPiUserID");
					this.OnSPiUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPcEANNumber", DbType="VarChar(50)")]
		public string SPcEANNumber
		{
			get
			{
				return this._SPcEANNumber;
			}
			set
			{
				if ((this._SPcEANNumber != value))
				{
					this.OnSPcEANNumberChanging(value);
					this.SendPropertyChanging();
					this._SPcEANNumber = value;
					this.SendPropertyChanged("SPcEANNumber");
					this.OnSPcEANNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPcVatNumber", DbType="VarChar(50)")]
		public string SPcVatNumber
		{
			get
			{
				return this._SPcVatNumber;
			}
			set
			{
				if ((this._SPcVatNumber != value))
				{
					this.OnSPcVatNumberChanging(value);
					this.SendPropertyChanging();
					this._SPcVatNumber = value;
					this.SendPropertyChanged("SPcVatNumber");
					this.OnSPcVatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPiParent", DbType="Int")]
		public System.Nullable<int> SPiParent
		{
			get
			{
				return this._SPiParent;
			}
			set
			{
				if ((this._SPiParent != value))
				{
					this.OnSPiParentChanging(value);
					this.SendPropertyChanging();
					this._SPiParent = value;
					this.SendPropertyChanged("SPiParent");
					this.OnSPiParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msrepl_tran_version", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid msrepl_tran_version
		{
			get
			{
				return this._msrepl_tran_version;
			}
			set
			{
				if ((this._msrepl_tran_version != value))
				{
					this.Onmsrepl_tran_versionChanging(value);
					this.SendPropertyChanging();
					this._msrepl_tran_version = value;
					this.SendPropertyChanged("msrepl_tran_version");
					this.Onmsrepl_tran_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPiIsXML", DbType="Int")]
		public System.Nullable<int> SPiIsXML
		{
			get
			{
				return this._SPiIsXML;
			}
			set
			{
				if ((this._SPiIsXML != value))
				{
					this.OnSPiIsXMLChanging(value);
					this.SendPropertyChanging();
					this._SPiIsXML = value;
					this.SendPropertyChanged("SPiIsXML");
					this.OnSPiIsXMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPcFuncEmail", DbType="VarChar(500)")]
		public string SPcFuncEmail
		{
			get
			{
				return this._SPcFuncEmail;
			}
			set
			{
				if ((this._SPcFuncEmail != value))
				{
					this.OnSPcFuncEmailChanging(value);
					this.SendPropertyChanging();
					this._SPcFuncEmail = value;
					this.SendPropertyChanged("SPcFuncEmail");
					this.OnSPcFuncEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPiMailAlert", DbType="Int")]
		public System.Nullable<int> SPiMailAlert
		{
			get
			{
				return this._SPiMailAlert;
			}
			set
			{
				if ((this._SPiMailAlert != value))
				{
					this.OnSPiMailAlertChanging(value);
					this.SendPropertyChanging();
					this._SPiMailAlert = value;
					this.SendPropertyChanged("SPiMailAlert");
					this.OnSPiMailAlertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPiClmRoute", DbType="Int")]
		public System.Nullable<int> SPiClmRoute
		{
			get
			{
				return this._SPiClmRoute;
			}
			set
			{
				if ((this._SPiClmRoute != value))
				{
					this.OnSPiClmRouteChanging(value);
					this.SendPropertyChanging();
					this._SPiClmRoute = value;
					this.SendPropertyChanged("SPiClmRoute");
					this.OnSPiClmRouteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DC")]
	public partial class DC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DCID;
		
		private string _DCcName;
		
		private string _DCcRegNumber;
		
		private string _DCcVatNumber;
		
		private string _DCcAddress;
		
		private string _DCcPostAddress;
		
		private string _DCcPhoneNum;
		
		private string _DCcFaxNum;
		
		private string _DCcEANNumber;
		
		private int _DCiUserID;
		
		private string _DCcEmail;
		
		private System.Nullable<int> _DCiParent;
		
		private System.Guid _msrepl_tran_version;
		
		private string _DCcX40EAN;
		
		private System.Nullable<bool> _AllowCaptureClaimForSupplier;
		
		private System.Nullable<bool> _AllowCaptureClaimForDC;
		
		private string _DCEmailAddressForDCClaims;
		
		private System.Nullable<bool> _AllowDCsToMaintainSupplierClaims;
		
		private System.Nullable<bool> _AllowClaimCaptureForSupplier;
		
		private System.Nullable<bool> _AllowClaimCaptureForAdminDC;
		
		private string _DCEmailAddressForAdminDCClaims;
		
		private string _DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDCIDChanging(int value);
    partial void OnDCIDChanged();
    partial void OnDCcNameChanging(string value);
    partial void OnDCcNameChanged();
    partial void OnDCcRegNumberChanging(string value);
    partial void OnDCcRegNumberChanged();
    partial void OnDCcVatNumberChanging(string value);
    partial void OnDCcVatNumberChanged();
    partial void OnDCcAddressChanging(string value);
    partial void OnDCcAddressChanged();
    partial void OnDCcPostAddressChanging(string value);
    partial void OnDCcPostAddressChanged();
    partial void OnDCcPhoneNumChanging(string value);
    partial void OnDCcPhoneNumChanged();
    partial void OnDCcFaxNumChanging(string value);
    partial void OnDCcFaxNumChanged();
    partial void OnDCcEANNumberChanging(string value);
    partial void OnDCcEANNumberChanged();
    partial void OnDCiUserIDChanging(int value);
    partial void OnDCiUserIDChanged();
    partial void OnDCcEmailChanging(string value);
    partial void OnDCcEmailChanged();
    partial void OnDCiParentChanging(System.Nullable<int> value);
    partial void OnDCiParentChanged();
    partial void Onmsrepl_tran_versionChanging(System.Guid value);
    partial void Onmsrepl_tran_versionChanged();
    partial void OnDCcX40EANChanging(string value);
    partial void OnDCcX40EANChanged();
    partial void OnAllowCaptureClaimForSupplierChanging(System.Nullable<bool> value);
    partial void OnAllowCaptureClaimForSupplierChanged();
    partial void OnAllowCaptureClaimForDCChanging(System.Nullable<bool> value);
    partial void OnAllowCaptureClaimForDCChanged();
    partial void OnDCEmailAddressForDCClaimsChanging(string value);
    partial void OnDCEmailAddressForDCClaimsChanged();
    partial void OnAllowDCsToMaintainSupplierClaimsChanging(System.Nullable<bool> value);
    partial void OnAllowDCsToMaintainSupplierClaimsChanged();
    partial void OnAllowClaimCaptureForSupplierChanging(System.Nullable<bool> value);
    partial void OnAllowClaimCaptureForSupplierChanged();
    partial void OnAllowClaimCaptureForAdminDCChanging(System.Nullable<bool> value);
    partial void OnAllowClaimCaptureForAdminDCChanged();
    partial void OnDCEmailAddressForAdminDCClaimsChanging(string value);
    partial void OnDCEmailAddressForAdminDCClaimsChanged();
    partial void OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanging(string value);
    partial void OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanged();
    #endregion
		
		public DC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DCID
		{
			get
			{
				return this._DCID;
			}
			set
			{
				if ((this._DCID != value))
				{
					this.OnDCIDChanging(value);
					this.SendPropertyChanging();
					this._DCID = value;
					this.SendPropertyChanged("DCID");
					this.OnDCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DCcName
		{
			get
			{
				return this._DCcName;
			}
			set
			{
				if ((this._DCcName != value))
				{
					this.OnDCcNameChanging(value);
					this.SendPropertyChanging();
					this._DCcName = value;
					this.SendPropertyChanged("DCcName");
					this.OnDCcNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcRegNumber", DbType="VarChar(50)")]
		public string DCcRegNumber
		{
			get
			{
				return this._DCcRegNumber;
			}
			set
			{
				if ((this._DCcRegNumber != value))
				{
					this.OnDCcRegNumberChanging(value);
					this.SendPropertyChanging();
					this._DCcRegNumber = value;
					this.SendPropertyChanged("DCcRegNumber");
					this.OnDCcRegNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcVatNumber", DbType="VarChar(50)")]
		public string DCcVatNumber
		{
			get
			{
				return this._DCcVatNumber;
			}
			set
			{
				if ((this._DCcVatNumber != value))
				{
					this.OnDCcVatNumberChanging(value);
					this.SendPropertyChanging();
					this._DCcVatNumber = value;
					this.SendPropertyChanged("DCcVatNumber");
					this.OnDCcVatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcAddress", DbType="VarChar(500)")]
		public string DCcAddress
		{
			get
			{
				return this._DCcAddress;
			}
			set
			{
				if ((this._DCcAddress != value))
				{
					this.OnDCcAddressChanging(value);
					this.SendPropertyChanging();
					this._DCcAddress = value;
					this.SendPropertyChanged("DCcAddress");
					this.OnDCcAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcPostAddress", DbType="VarChar(50)")]
		public string DCcPostAddress
		{
			get
			{
				return this._DCcPostAddress;
			}
			set
			{
				if ((this._DCcPostAddress != value))
				{
					this.OnDCcPostAddressChanging(value);
					this.SendPropertyChanging();
					this._DCcPostAddress = value;
					this.SendPropertyChanged("DCcPostAddress");
					this.OnDCcPostAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcPhoneNum", DbType="VarChar(50)")]
		public string DCcPhoneNum
		{
			get
			{
				return this._DCcPhoneNum;
			}
			set
			{
				if ((this._DCcPhoneNum != value))
				{
					this.OnDCcPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._DCcPhoneNum = value;
					this.SendPropertyChanged("DCcPhoneNum");
					this.OnDCcPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcFaxNum", DbType="VarChar(50)")]
		public string DCcFaxNum
		{
			get
			{
				return this._DCcFaxNum;
			}
			set
			{
				if ((this._DCcFaxNum != value))
				{
					this.OnDCcFaxNumChanging(value);
					this.SendPropertyChanging();
					this._DCcFaxNum = value;
					this.SendPropertyChanged("DCcFaxNum");
					this.OnDCcFaxNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcEANNumber", DbType="VarChar(50)")]
		public string DCcEANNumber
		{
			get
			{
				return this._DCcEANNumber;
			}
			set
			{
				if ((this._DCcEANNumber != value))
				{
					this.OnDCcEANNumberChanging(value);
					this.SendPropertyChanging();
					this._DCcEANNumber = value;
					this.SendPropertyChanged("DCcEANNumber");
					this.OnDCcEANNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCiUserID", DbType="Int NOT NULL")]
		public int DCiUserID
		{
			get
			{
				return this._DCiUserID;
			}
			set
			{
				if ((this._DCiUserID != value))
				{
					this.OnDCiUserIDChanging(value);
					this.SendPropertyChanging();
					this._DCiUserID = value;
					this.SendPropertyChanged("DCiUserID");
					this.OnDCiUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcEmail", DbType="VarChar(500)")]
		public string DCcEmail
		{
			get
			{
				return this._DCcEmail;
			}
			set
			{
				if ((this._DCcEmail != value))
				{
					this.OnDCcEmailChanging(value);
					this.SendPropertyChanging();
					this._DCcEmail = value;
					this.SendPropertyChanged("DCcEmail");
					this.OnDCcEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCiParent", DbType="Int")]
		public System.Nullable<int> DCiParent
		{
			get
			{
				return this._DCiParent;
			}
			set
			{
				if ((this._DCiParent != value))
				{
					this.OnDCiParentChanging(value);
					this.SendPropertyChanging();
					this._DCiParent = value;
					this.SendPropertyChanged("DCiParent");
					this.OnDCiParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msrepl_tran_version", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid msrepl_tran_version
		{
			get
			{
				return this._msrepl_tran_version;
			}
			set
			{
				if ((this._msrepl_tran_version != value))
				{
					this.Onmsrepl_tran_versionChanging(value);
					this.SendPropertyChanging();
					this._msrepl_tran_version = value;
					this.SendPropertyChanged("msrepl_tran_version");
					this.Onmsrepl_tran_versionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCcX40EAN", DbType="VarChar(50)")]
		public string DCcX40EAN
		{
			get
			{
				return this._DCcX40EAN;
			}
			set
			{
				if ((this._DCcX40EAN != value))
				{
					this.OnDCcX40EANChanging(value);
					this.SendPropertyChanging();
					this._DCcX40EAN = value;
					this.SendPropertyChanged("DCcX40EAN");
					this.OnDCcX40EANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowCaptureClaimForSupplier", DbType="Bit")]
		public System.Nullable<bool> AllowCaptureClaimForSupplier
		{
			get
			{
				return this._AllowCaptureClaimForSupplier;
			}
			set
			{
				if ((this._AllowCaptureClaimForSupplier != value))
				{
					this.OnAllowCaptureClaimForSupplierChanging(value);
					this.SendPropertyChanging();
					this._AllowCaptureClaimForSupplier = value;
					this.SendPropertyChanged("AllowCaptureClaimForSupplier");
					this.OnAllowCaptureClaimForSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowCaptureClaimForDC", DbType="Bit")]
		public System.Nullable<bool> AllowCaptureClaimForDC
		{
			get
			{
				return this._AllowCaptureClaimForDC;
			}
			set
			{
				if ((this._AllowCaptureClaimForDC != value))
				{
					this.OnAllowCaptureClaimForDCChanging(value);
					this.SendPropertyChanging();
					this._AllowCaptureClaimForDC = value;
					this.SendPropertyChanged("AllowCaptureClaimForDC");
					this.OnAllowCaptureClaimForDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCEmailAddressForDCClaims", DbType="VarChar(50)")]
		public string DCEmailAddressForDCClaims
		{
			get
			{
				return this._DCEmailAddressForDCClaims;
			}
			set
			{
				if ((this._DCEmailAddressForDCClaims != value))
				{
					this.OnDCEmailAddressForDCClaimsChanging(value);
					this.SendPropertyChanging();
					this._DCEmailAddressForDCClaims = value;
					this.SendPropertyChanged("DCEmailAddressForDCClaims");
					this.OnDCEmailAddressForDCClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowDCsToMaintainSupplierClaims", DbType="Bit")]
		public System.Nullable<bool> AllowDCsToMaintainSupplierClaims
		{
			get
			{
				return this._AllowDCsToMaintainSupplierClaims;
			}
			set
			{
				if ((this._AllowDCsToMaintainSupplierClaims != value))
				{
					this.OnAllowDCsToMaintainSupplierClaimsChanging(value);
					this.SendPropertyChanging();
					this._AllowDCsToMaintainSupplierClaims = value;
					this.SendPropertyChanged("AllowDCsToMaintainSupplierClaims");
					this.OnAllowDCsToMaintainSupplierClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowClaimCaptureForSupplier", DbType="Bit")]
		public System.Nullable<bool> AllowClaimCaptureForSupplier
		{
			get
			{
				return this._AllowClaimCaptureForSupplier;
			}
			set
			{
				if ((this._AllowClaimCaptureForSupplier != value))
				{
					this.OnAllowClaimCaptureForSupplierChanging(value);
					this.SendPropertyChanging();
					this._AllowClaimCaptureForSupplier = value;
					this.SendPropertyChanged("AllowClaimCaptureForSupplier");
					this.OnAllowClaimCaptureForSupplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowClaimCaptureForAdminDC", DbType="Bit")]
		public System.Nullable<bool> AllowClaimCaptureForAdminDC
		{
			get
			{
				return this._AllowClaimCaptureForAdminDC;
			}
			set
			{
				if ((this._AllowClaimCaptureForAdminDC != value))
				{
					this.OnAllowClaimCaptureForAdminDCChanging(value);
					this.SendPropertyChanging();
					this._AllowClaimCaptureForAdminDC = value;
					this.SendPropertyChanged("AllowClaimCaptureForAdminDC");
					this.OnAllowClaimCaptureForAdminDCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCEmailAddressForAdminDCClaims", DbType="VarChar(100)")]
		public string DCEmailAddressForAdminDCClaims
		{
			get
			{
				return this._DCEmailAddressForAdminDCClaims;
			}
			set
			{
				if ((this._DCEmailAddressForAdminDCClaims != value))
				{
					this.OnDCEmailAddressForAdminDCClaimsChanging(value);
					this.SendPropertyChanging();
					this._DCEmailAddressForAdminDCClaims = value;
					this.SendPropertyChanged("DCEmailAddressForAdminDCClaims");
					this.OnDCEmailAddressForAdminDCClaimsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims", DbType="VarChar(100)")]
		public string DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims
		{
			get
			{
				return this._DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims;
			}
			set
			{
				if ((this._DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims != value))
				{
					this.OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanging(value);
					this.SendPropertyChanging();
					this._DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims = value;
					this.SendPropertyChanged("DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims");
					this.OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SupplierDCLookup")]
	public partial class SupplierDCLookup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sID;
		
		private string _BuEanCode;
		
		private string _VendorCode;
		
		private System.Nullable<char> _VendorStatus;
		
		private string _VendorName;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _PostalCode;
		
		private string _PhoneNumber;
		
		private string _CountryCode;
		
		private string _LocationCode;
		
		private string _DespatchPoint;
		
		private string _EmailAddress;
		
		private string _SupplierVatNumber;
		
		private System.Nullable<char> _CaptureClaim;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<int> _CannotMatch;
		
		private string _VendorAccountType;
		
		private string _StoreOrderMethod;
		
		private string _SupplierOrderMethod;
		
		private string _OrderEmailAddress;
		
		private string _EdiGroupCode;
		
		private string _EdiGroupCodeEan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsIDChanging(int value);
    partial void OnsIDChanged();
    partial void OnBuEanCodeChanging(string value);
    partial void OnBuEanCodeChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnVendorStatusChanging(System.Nullable<char> value);
    partial void OnVendorStatusChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnLocationCodeChanging(string value);
    partial void OnLocationCodeChanged();
    partial void OnDespatchPointChanging(string value);
    partial void OnDespatchPointChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnSupplierVatNumberChanging(string value);
    partial void OnSupplierVatNumberChanged();
    partial void OnCaptureClaimChanging(System.Nullable<char> value);
    partial void OnCaptureClaimChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnCannotMatchChanging(System.Nullable<int> value);
    partial void OnCannotMatchChanged();
    partial void OnVendorAccountTypeChanging(string value);
    partial void OnVendorAccountTypeChanged();
    partial void OnStoreOrderMethodChanging(string value);
    partial void OnStoreOrderMethodChanged();
    partial void OnSupplierOrderMethodChanging(string value);
    partial void OnSupplierOrderMethodChanged();
    partial void OnOrderEmailAddressChanging(string value);
    partial void OnOrderEmailAddressChanged();
    partial void OnEdiGroupCodeChanging(string value);
    partial void OnEdiGroupCodeChanged();
    partial void OnEdiGroupCodeEanChanging(string value);
    partial void OnEdiGroupCodeEanChanged();
    #endregion
		
		public SupplierDCLookup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sID
		{
			get
			{
				return this._sID;
			}
			set
			{
				if ((this._sID != value))
				{
					this.OnsIDChanging(value);
					this.SendPropertyChanging();
					this._sID = value;
					this.SendPropertyChanged("sID");
					this.OnsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuEanCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BuEanCode
		{
			get
			{
				return this._BuEanCode;
			}
			set
			{
				if ((this._BuEanCode != value))
				{
					this.OnBuEanCodeChanging(value);
					this.SendPropertyChanging();
					this._BuEanCode = value;
					this.SendPropertyChanged("BuEanCode");
					this.OnBuEanCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorCode", DbType="NVarChar(50)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorStatus", DbType="Char(1)")]
		public System.Nullable<char> VendorStatus
		{
			get
			{
				return this._VendorStatus;
			}
			set
			{
				if ((this._VendorStatus != value))
				{
					this.OnVendorStatusChanging(value);
					this.SendPropertyChanging();
					this._VendorStatus = value;
					this.SendPropertyChanged("VendorStatus");
					this.OnVendorStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorName", DbType="NVarChar(300)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="NVarChar(100)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="Char(3)")]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationCode", DbType="VarChar(50)")]
		public string LocationCode
		{
			get
			{
				return this._LocationCode;
			}
			set
			{
				if ((this._LocationCode != value))
				{
					this.OnLocationCodeChanging(value);
					this.SendPropertyChanging();
					this._LocationCode = value;
					this.SendPropertyChanged("LocationCode");
					this.OnLocationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DespatchPoint", DbType="NVarChar(50)")]
		public string DespatchPoint
		{
			get
			{
				return this._DespatchPoint;
			}
			set
			{
				if ((this._DespatchPoint != value))
				{
					this.OnDespatchPointChanging(value);
					this.SendPropertyChanging();
					this._DespatchPoint = value;
					this.SendPropertyChanged("DespatchPoint");
					this.OnDespatchPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierVatNumber", DbType="NVarChar(50)")]
		public string SupplierVatNumber
		{
			get
			{
				return this._SupplierVatNumber;
			}
			set
			{
				if ((this._SupplierVatNumber != value))
				{
					this.OnSupplierVatNumberChanging(value);
					this.SendPropertyChanging();
					this._SupplierVatNumber = value;
					this.SendPropertyChanged("SupplierVatNumber");
					this.OnSupplierVatNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaptureClaim", DbType="Char(1)")]
		public System.Nullable<char> CaptureClaim
		{
			get
			{
				return this._CaptureClaim;
			}
			set
			{
				if ((this._CaptureClaim != value))
				{
					this.OnCaptureClaimChanging(value);
					this.SendPropertyChanging();
					this._CaptureClaim = value;
					this.SendPropertyChanged("CaptureClaim");
					this.OnCaptureClaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CannotMatch", DbType="Int")]
		public System.Nullable<int> CannotMatch
		{
			get
			{
				return this._CannotMatch;
			}
			set
			{
				if ((this._CannotMatch != value))
				{
					this.OnCannotMatchChanging(value);
					this.SendPropertyChanging();
					this._CannotMatch = value;
					this.SendPropertyChanged("CannotMatch");
					this.OnCannotMatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorAccountType", DbType="VarChar(10)")]
		public string VendorAccountType
		{
			get
			{
				return this._VendorAccountType;
			}
			set
			{
				if ((this._VendorAccountType != value))
				{
					this.OnVendorAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._VendorAccountType = value;
					this.SendPropertyChanged("VendorAccountType");
					this.OnVendorAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreOrderMethod", DbType="NVarChar(10)")]
		public string StoreOrderMethod
		{
			get
			{
				return this._StoreOrderMethod;
			}
			set
			{
				if ((this._StoreOrderMethod != value))
				{
					this.OnStoreOrderMethodChanging(value);
					this.SendPropertyChanging();
					this._StoreOrderMethod = value;
					this.SendPropertyChanged("StoreOrderMethod");
					this.OnStoreOrderMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierOrderMethod", DbType="NVarChar(10)")]
		public string SupplierOrderMethod
		{
			get
			{
				return this._SupplierOrderMethod;
			}
			set
			{
				if ((this._SupplierOrderMethod != value))
				{
					this.OnSupplierOrderMethodChanging(value);
					this.SendPropertyChanging();
					this._SupplierOrderMethod = value;
					this.SendPropertyChanged("SupplierOrderMethod");
					this.OnSupplierOrderMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEmailAddress", DbType="NVarChar(50)")]
		public string OrderEmailAddress
		{
			get
			{
				return this._OrderEmailAddress;
			}
			set
			{
				if ((this._OrderEmailAddress != value))
				{
					this.OnOrderEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._OrderEmailAddress = value;
					this.SendPropertyChanged("OrderEmailAddress");
					this.OnOrderEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdiGroupCode", DbType="NVarChar(10)")]
		public string EdiGroupCode
		{
			get
			{
				return this._EdiGroupCode;
			}
			set
			{
				if ((this._EdiGroupCode != value))
				{
					this.OnEdiGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._EdiGroupCode = value;
					this.SendPropertyChanged("EdiGroupCode");
					this.OnEdiGroupCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EdiGroupCodeEan", DbType="NVarChar(20)")]
		public string EdiGroupCodeEan
		{
			get
			{
				return this._EdiGroupCodeEan;
			}
			set
			{
				if ((this._EdiGroupCodeEan != value))
				{
					this.OnEdiGroupCodeEanChanging(value);
					this.SendPropertyChanging();
					this._EdiGroupCodeEan = value;
					this.SendPropertyChanged("EdiGroupCodeEan");
					this.OnEdiGroupCodeEanChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
