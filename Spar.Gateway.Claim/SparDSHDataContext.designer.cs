#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spar.Gateway.Claim
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "SparDS")]
    public partial class SparDSHDataContextDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertClaim(Claim instance);
        partial void UpdateClaim(Claim instance);
        partial void DeleteClaim(Claim instance);
        partial void InsertClaimDetail(ClaimDetail instance);
        partial void UpdateClaimDetail(ClaimDetail instance);
        partial void DeleteClaimDetail(ClaimDetail instance);
        partial void InsertClaimCategory(ClaimCategory instance);
        partial void UpdateClaimCategory(ClaimCategory instance);
        partial void DeleteClaimCategory(ClaimCategory instance);
        partial void InsertClaimReason(ClaimReason instance);
        partial void UpdateClaimReason(ClaimReason instance);
        partial void DeleteClaimReason(ClaimReason instance);
        partial void InsertStore(Store instance);
        partial void UpdateStore(Store instance);
        partial void DeleteStore(Store instance);
        partial void InsertUser(User instance);
        partial void UpdateUser(User instance);
        partial void DeleteUser(User instance);
        partial void InsertSupplier(Supplier instance);
        partial void UpdateSupplier(Supplier instance);
        partial void DeleteSupplier(Supplier instance);
        partial void InsertDC(DC instance);
        partial void UpdateDC(DC instance);
        partial void DeleteDC(DC instance);
        partial void InsertInvoice(Invoice instance);
        partial void UpdateInvoice(Invoice instance);
        partial void DeleteInvoice(Invoice instance);
        partial void InsertClaimSubReason(ClaimSubReason instance);
        partial void UpdateClaimSubReason(ClaimSubReason instance);
        partial void DeleteClaimSubReason(ClaimSubReason instance);

        partial void InsertMessageException(MessageException instance);
        partial void UpdateMessageException(MessageException instance);
        partial void DeleteMessageException(MessageException instance);
        #endregion

        public SparDSHDataContextDataContext() :
                base(global::Spar.Gateway.Claim.Properties.Settings.Default.SparDSConnectionString, mappingSource)
        {
            OnCreated();
        }

        public SparDSHDataContextDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public SparDSHDataContextDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public SparDSHDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public SparDSHDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Claim> Claims
        {
            get
            {
                return this.GetTable<Claim>();
            }
        }

        public System.Data.Linq.Table<ClaimDetail> ClaimDetails
        {
            get
            {
                return this.GetTable<ClaimDetail>();
            }
        }

        public System.Data.Linq.Table<ClaimCategory> ClaimCategories
        {
            get
            {
                return this.GetTable<ClaimCategory>();
            }
        }

        public System.Data.Linq.Table<ClaimReason> ClaimReasons
        {
            get
            {
                return this.GetTable<ClaimReason>();
            }
        }

        public System.Data.Linq.Table<Store> Stores
        {
            get
            {
                return this.GetTable<Store>();
            }
        }

        public System.Data.Linq.Table<User> Users
        {
            get
            {
                return this.GetTable<User>();
            }
        }

        public System.Data.Linq.Table<Supplier> Suppliers
        {
            get
            {
                return this.GetTable<Supplier>();
            }
        }

        public System.Data.Linq.Table<DC> DCs
        {
            get
            {
                return this.GetTable<DC>();
            }
        }

        public System.Data.Linq.Table<Invoice> Invoices
        {
            get
            {
                return this.GetTable<Invoice>();
            }
        }

        public System.Data.Linq.Table<CreditNote> CreditNotes
        {
            get
            {
                return this.GetTable<CreditNote>();
            }
        }

        public System.Data.Linq.Table<ClaimSubReason> ClaimSubReasons
        {
            get
            {
                return this.GetTable<ClaimSubReason>();
            }
        }

        public System.Data.Linq.Table<MessageException> MessageExceptions
        {
            get
            {
                return this.GetTable<MessageException>();
            }
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.AddToClaimsAuditLog")]
        public ISingleResult<AddToClaimsAuditLogResult> AddToClaimsAuditLog(
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimId", DbType = "Int")] System.Nullable<int> claimId,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimStatusId", DbType = "Int")] System.Nullable<int> claimStatusId,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "StatusChangedByUserId", DbType = "Int")] System.Nullable<int> statusChangedByUserId,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SupplierComments", DbType = "VarChar(8000)")] string supplierComments,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CreditNoteNo", DbType = "VarChar(100)")] string creditNoteNo,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CreditNoteAmount", DbType = "Money")] System.Nullable<decimal> creditNoteAmount,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ActionTaken", DbType = "VarChar(1)")] string actionTaken,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserName", DbType = "VarChar(50)")] string userName,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SuppressMessages", DbType = "Bit")] System.Nullable<bool> suppressMessages,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "MatchingProgram", DbType = "Bit")] System.Nullable<bool> matchingProgram,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CreditNoteIDFromMatching", DbType = "Int")] System.Nullable<int> creditNoteIDFromMatching,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimCategoryId", DbType = "Int")] System.Nullable<int> claimCategoryId,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimSubCategoryId", DbType = "Int")] System.Nullable<int> claimSubCategoryId,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimReasonId", DbType = "Int")] System.Nullable<int> claimReasonId,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IsForceCredit", DbType = "Int")] System.Nullable<int> isForceCredit,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ForceCreditReversal", DbType = "Int")] System.Nullable<int> forceCreditReversal,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimSubReasonId", DbType = "Int")] System.Nullable<int> claimSubReasonId,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimConfigGuid", DbType = "UniqueIdentifier")] System.Nullable<System.Guid> claimConfigGuid,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "OutcomeReasonCode", DbType = "Int")] System.Nullable<int> outcomeReasonCode,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AuthorisedByRep", DbType = "Int")] System.Nullable<int> authorisedByRep,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UpliftNo", DbType = "VarChar(50)")] string upliftNo,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AllowSubReason", DbType = "Bit")] System.Nullable<bool> allowSubReason,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FromBatchUpdate", DbType = "Int")] System.Nullable<int> fromBatchUpdate,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Buyer_Id", DbType = "Int")] System.Nullable<int> buyer_Id,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ManualInvoiceNumber", DbType = "NVarChar(13)")] string manualInvoiceNumber,
                    [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ScheduleRelease", DbType = "Bit")] System.Nullable<bool> scheduleRelease)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), claimId, claimStatusId, statusChangedByUserId, supplierComments, creditNoteNo, creditNoteAmount, actionTaken, userName, suppressMessages, matchingProgram, creditNoteIDFromMatching, claimCategoryId, claimSubCategoryId, claimReasonId, isForceCredit, forceCreditReversal, claimSubReasonId, claimConfigGuid, outcomeReasonCode, authorisedByRep, upliftNo, allowSubReason, fromBatchUpdate, buyer_Id, manualInvoiceNumber, scheduleRelease);
            return ((ISingleResult<AddToClaimsAuditLogResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.IsCapturedClaim")]
        public ISingleResult<IsCapturedClaimResult> IsCapturedClaim([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimNumber", DbType = "VarChar(20)")] string claimNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User", DbType = "VarChar(50)")] string user)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), claimNumber, user);
            return ((ISingleResult<IsCapturedClaimResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetVendorSupplierDetails")]
        public ISingleResult<GetVendorSupplierDetailsResult> GetVendorSupplierDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SupplierEan", DbType = "VarChar(20)")] string supplierEan)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supplierEan);
            return ((ISingleResult<GetVendorSupplierDetailsResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.editClaim")]
        public ISingleResult<editClaimResult> editClaim([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ClaimID", DbType = "Int")] System.Nullable<int> claimID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Nar", DbType = "VarChar(255)")] string nar, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DiscountIndc3", DbType = "VarChar(10)")] string discountIndc3, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DiscountPerc3", DbType = "Money")] System.Nullable<decimal> discountPerc3, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DiscountAmount3", DbType = "Money")] System.Nullable<decimal> discountAmount3)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), claimID, nar, discountIndc3, discountPerc3, discountAmount3);
            return ((ISingleResult<editClaimResult>)(result.ReturnValue));
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Claim")]
    public partial class Claim : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CLID;

        private int _CLiStoreID;

        private string _CLcStoreEAN;

        private int _CLiDCID;

        private string _CLcDCEAN;

        private int _CLiSupplierID;

        private string _CLcSupplierEAN;

        private string _CLcClaimNumber;

        private System.DateTime _CLdClaimDate;

        private System.DateTime _CLdReceivedDate;

        private System.DateTime _CLdTransDate;

        private System.Nullable<System.DateTime> _CLdExtractDate;

        private string _CLcClaimType;

        private System.Nullable<int> _CLiClaimNumberType;

        private System.Nullable<int> _CLiInvoiceID;

        private string _CLcInvoiceNumber;

        private System.Nullable<System.DateTime> _CLdInvoiceDate;

        private string _CLcManualClaimNum;

        private System.Nullable<System.DateTime> _CLdManualClaimDate;

        private System.Nullable<int> _CLiCNID;

        private string _CLcCNNumber;

        private System.Nullable<System.DateTime> _CLdCNDate;

        private System.Nullable<decimal> _CLmAmount;

        private System.Nullable<decimal> _CLmVat;

        private string _CLcDiscIndc1;

        private System.Nullable<decimal> _CLiDiscPerc1;

        private System.Nullable<decimal> _CLmDiscAmt1;

        private string _CLcDiscIndc2;

        private System.Nullable<decimal> _CLiDiscPerc2;

        private System.Nullable<decimal> _CLmDiscAmt2;

        private string _CLcDiscIndc3;

        private System.Nullable<decimal> _CLiDiscPerc3;

        private System.Nullable<decimal> _CLmDiscAmt3;

        private System.Nullable<int> _CLiReasonID;

        private System.Nullable<int> _CLiNumLines;

        private string _CLcNarratives;

        private System.Nullable<int> _StatusId;

        private System.Nullable<int> _TypeId;

        private System.Nullable<System.DateTime> _ReceivedDate;

        private System.Nullable<System.DateTime> _LastUpdated;

        private System.Nullable<char> _AssignedToHistory;

        private System.Nullable<System.DateTime> _AssignedToHistoryDate;

        private string _ProFormaCreditNoteNumber;

        private System.Nullable<decimal> _ProFormaCreditAmount;

        private string _ActualCreditNoteNumber;

        private System.Nullable<decimal> _ActualCreditAmount;

        private string _ReasonDescr;

        private System.Nullable<int> _OldCLiNID;

        private System.Nullable<int> _ClaimCategoryId;

        private string _OriginalClaimType;

        private System.Nullable<bool> _ForceCreditInEffect;

        private string _DespatchPoint;

        private System.Nullable<int> _ClaimSubCategoryId;

        private System.Nullable<int> _OutcomeReasonCode;

        private System.Nullable<decimal> _InvoiceValue;

        private string _PoNumber;

        private System.Nullable<decimal> _PoValue;

        private string _UpliftRef;

        private System.Nullable<bool> _AuthorisedByRep;

        private string _AuditLog_Comments;

        private System.Nullable<int> _CliSubReasonId;

        private System.Nullable<bool> _HasAttachments;

        private System.Nullable<int> _Buyer_Id;

        private string _ManualInvoiceNumber;

        private string _CLcVendorCode;

        private string _ReasonCode;

        private EntitySet<ClaimDetail> _ClaimDetails;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCLIDChanging(int value);
        partial void OnCLIDChanged();
        partial void OnCLiStoreIDChanging(int value);
        partial void OnCLiStoreIDChanged();
        partial void OnCLcStoreEANChanging(string value);
        partial void OnCLcStoreEANChanged();
        partial void OnCLiDCIDChanging(int value);
        partial void OnCLiDCIDChanged();
        partial void OnCLcDCEANChanging(string value);
        partial void OnCLcDCEANChanged();
        partial void OnCLiSupplierIDChanging(int value);
        partial void OnCLiSupplierIDChanged();
        partial void OnCLcSupplierEANChanging(string value);
        partial void OnCLcSupplierEANChanged();
        partial void OnCLcClaimNumberChanging(string value);
        partial void OnCLcClaimNumberChanged();
        partial void OnCLdClaimDateChanging(System.DateTime value);
        partial void OnCLdClaimDateChanged();
        partial void OnCLdReceivedDateChanging(System.DateTime value);
        partial void OnCLdReceivedDateChanged();
        partial void OnCLdTransDateChanging(System.DateTime value);
        partial void OnCLdTransDateChanged();
        partial void OnCLdExtractDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCLdExtractDateChanged();
        partial void OnCLcClaimTypeChanging(string value);
        partial void OnCLcClaimTypeChanged();
        partial void OnCLiClaimNumberTypeChanging(System.Nullable<int> value);
        partial void OnCLiClaimNumberTypeChanged();
        partial void OnCLiInvoiceIDChanging(System.Nullable<int> value);
        partial void OnCLiInvoiceIDChanged();
        partial void OnCLcInvoiceNumberChanging(string value);
        partial void OnCLcInvoiceNumberChanged();
        partial void OnCLdInvoiceDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCLdInvoiceDateChanged();
        partial void OnCLcManualClaimNumChanging(string value);
        partial void OnCLcManualClaimNumChanged();
        partial void OnCLdManualClaimDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCLdManualClaimDateChanged();
        partial void OnCLiCNIDChanging(System.Nullable<int> value);
        partial void OnCLiCNIDChanged();
        partial void OnCLcCNNumberChanging(string value);
        partial void OnCLcCNNumberChanged();
        partial void OnCLdCNDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCLdCNDateChanged();
        partial void OnCLmAmountChanging(System.Nullable<decimal> value);
        partial void OnCLmAmountChanged();
        partial void OnCLmVatChanging(System.Nullable<decimal> value);
        partial void OnCLmVatChanged();
        partial void OnCLcDiscIndc1Changing(string value);
        partial void OnCLcDiscIndc1Changed();
        partial void OnCLiDiscPerc1Changing(System.Nullable<decimal> value);
        partial void OnCLiDiscPerc1Changed();
        partial void OnCLmDiscAmt1Changing(System.Nullable<decimal> value);
        partial void OnCLmDiscAmt1Changed();
        partial void OnCLcDiscIndc2Changing(string value);
        partial void OnCLcDiscIndc2Changed();
        partial void OnCLiDiscPerc2Changing(System.Nullable<decimal> value);
        partial void OnCLiDiscPerc2Changed();
        partial void OnCLmDiscAmt2Changing(System.Nullable<decimal> value);
        partial void OnCLmDiscAmt2Changed();
        partial void OnCLcDiscIndc3Changing(string value);
        partial void OnCLcDiscIndc3Changed();
        partial void OnCLiDiscPerc3Changing(System.Nullable<decimal> value);
        partial void OnCLiDiscPerc3Changed();
        partial void OnCLmDiscAmt3Changing(System.Nullable<decimal> value);
        partial void OnCLmDiscAmt3Changed();
        partial void OnCLiReasonIDChanging(System.Nullable<int> value);
        partial void OnCLiReasonIDChanged();
        partial void OnCLiNumLinesChanging(System.Nullable<int> value);
        partial void OnCLiNumLinesChanged();
        partial void OnCLcNarrativesChanging(string value);
        partial void OnCLcNarrativesChanged();
        partial void OnStatusIdChanging(System.Nullable<int> value);
        partial void OnStatusIdChanged();
        partial void OnTypeIdChanging(System.Nullable<int> value);
        partial void OnTypeIdChanged();
        partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnReceivedDateChanged();
        partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
        partial void OnLastUpdatedChanged();
        partial void OnAssignedToHistoryChanging(System.Nullable<char> value);
        partial void OnAssignedToHistoryChanged();
        partial void OnAssignedToHistoryDateChanging(System.Nullable<System.DateTime> value);
        partial void OnAssignedToHistoryDateChanged();
        partial void OnProFormaCreditNoteNumberChanging(string value);
        partial void OnProFormaCreditNoteNumberChanged();
        partial void OnProFormaCreditAmountChanging(System.Nullable<decimal> value);
        partial void OnProFormaCreditAmountChanged();
        partial void OnActualCreditNoteNumberChanging(string value);
        partial void OnActualCreditNoteNumberChanged();
        partial void OnActualCreditAmountChanging(System.Nullable<decimal> value);
        partial void OnActualCreditAmountChanged();
        partial void OnReasonDescrChanging(string value);
        partial void OnReasonDescrChanged();
        partial void OnOldCLiNIDChanging(System.Nullable<int> value);
        partial void OnOldCLiNIDChanged();
        partial void OnClaimCategoryIdChanging(System.Nullable<int> value);
        partial void OnClaimCategoryIdChanged();
        partial void OnOriginalClaimTypeChanging(string value);
        partial void OnOriginalClaimTypeChanged();
        partial void OnForceCreditInEffectChanging(System.Nullable<bool> value);
        partial void OnForceCreditInEffectChanged();
        partial void OnDespatchPointChanging(string value);
        partial void OnDespatchPointChanged();
        partial void OnClaimSubCategoryIdChanging(System.Nullable<int> value);
        partial void OnClaimSubCategoryIdChanged();
        partial void OnOutcomeReasonCodeChanging(System.Nullable<int> value);
        partial void OnOutcomeReasonCodeChanged();
        partial void OnInvoiceValueChanging(System.Nullable<decimal> value);
        partial void OnInvoiceValueChanged();
        partial void OnPoNumberChanging(string value);
        partial void OnPoNumberChanged();
        partial void OnPoValueChanging(System.Nullable<decimal> value);
        partial void OnPoValueChanged();
        partial void OnUpliftRefChanging(string value);
        partial void OnUpliftRefChanged();
        partial void OnAuthorisedByRepChanging(System.Nullable<bool> value);
        partial void OnAuthorisedByRepChanged();
        partial void OnAuditLog_CommentsChanging(string value);
        partial void OnAuditLog_CommentsChanged();
        partial void OnCliSubReasonIdChanging(System.Nullable<int> value);
        partial void OnCliSubReasonIdChanged();
        partial void OnHasAttachmentsChanging(System.Nullable<bool> value);
        partial void OnHasAttachmentsChanged();
        partial void OnBuyer_IdChanging(System.Nullable<int> value);
        partial void OnBuyer_IdChanged();
        partial void OnManualInvoiceNumberChanging(string value);
        partial void OnManualInvoiceNumberChanged();
        partial void OnCLcVendorCodeChanging(string value);
        partial void OnCLcVendorCodeChanged();
        partial void OnReasonCodeChanging(string value);
        partial void OnReasonCodeChanged();
        #endregion

        public Claim()
        {
            this._ClaimDetails = new EntitySet<ClaimDetail>(new Action<ClaimDetail>(this.attach_ClaimDetails), new Action<ClaimDetail>(this.detach_ClaimDetails));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CLID
        {
            get
            {
                return this._CLID;
            }
            set
            {
                if ((this._CLID != value))
                {
                    this.OnCLIDChanging(value);
                    this.SendPropertyChanging();
                    this._CLID = value;
                    this.SendPropertyChanged("CLID");
                    this.OnCLIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiStoreID", DbType = "Int NOT NULL")]
        public int CLiStoreID
        {
            get
            {
                return this._CLiStoreID;
            }
            set
            {
                if ((this._CLiStoreID != value))
                {
                    this.OnCLiStoreIDChanging(value);
                    this.SendPropertyChanging();
                    this._CLiStoreID = value;
                    this.SendPropertyChanged("CLiStoreID");
                    this.OnCLiStoreIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcStoreEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CLcStoreEAN
        {
            get
            {
                return this._CLcStoreEAN;
            }
            set
            {
                if ((this._CLcStoreEAN != value))
                {
                    this.OnCLcStoreEANChanging(value);
                    this.SendPropertyChanging();
                    this._CLcStoreEAN = value;
                    this.SendPropertyChanged("CLcStoreEAN");
                    this.OnCLcStoreEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiDCID", DbType = "Int NOT NULL")]
        public int CLiDCID
        {
            get
            {
                return this._CLiDCID;
            }
            set
            {
                if ((this._CLiDCID != value))
                {
                    this.OnCLiDCIDChanging(value);
                    this.SendPropertyChanging();
                    this._CLiDCID = value;
                    this.SendPropertyChanged("CLiDCID");
                    this.OnCLiDCIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcDCEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CLcDCEAN
        {
            get
            {
                return this._CLcDCEAN;
            }
            set
            {
                if ((this._CLcDCEAN != value))
                {
                    this.OnCLcDCEANChanging(value);
                    this.SendPropertyChanging();
                    this._CLcDCEAN = value;
                    this.SendPropertyChanged("CLcDCEAN");
                    this.OnCLcDCEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiSupplierID", DbType = "Int NOT NULL")]
        public int CLiSupplierID
        {
            get
            {
                return this._CLiSupplierID;
            }
            set
            {
                if ((this._CLiSupplierID != value))
                {
                    this.OnCLiSupplierIDChanging(value);
                    this.SendPropertyChanging();
                    this._CLiSupplierID = value;
                    this.SendPropertyChanged("CLiSupplierID");
                    this.OnCLiSupplierIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcSupplierEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CLcSupplierEAN
        {
            get
            {
                return this._CLcSupplierEAN;
            }
            set
            {
                if ((this._CLcSupplierEAN != value))
                {
                    this.OnCLcSupplierEANChanging(value);
                    this.SendPropertyChanging();
                    this._CLcSupplierEAN = value;
                    this.SendPropertyChanged("CLcSupplierEAN");
                    this.OnCLcSupplierEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcClaimNumber", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CLcClaimNumber
        {
            get
            {
                return this._CLcClaimNumber;
            }
            set
            {
                if ((this._CLcClaimNumber != value))
                {
                    this.OnCLcClaimNumberChanging(value);
                    this.SendPropertyChanging();
                    this._CLcClaimNumber = value;
                    this.SendPropertyChanged("CLcClaimNumber");
                    this.OnCLcClaimNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLdClaimDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CLdClaimDate
        {
            get
            {
                return this._CLdClaimDate;
            }
            set
            {
                if ((this._CLdClaimDate != value))
                {
                    this.OnCLdClaimDateChanging(value);
                    this.SendPropertyChanging();
                    this._CLdClaimDate = value;
                    this.SendPropertyChanged("CLdClaimDate");
                    this.OnCLdClaimDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLdReceivedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CLdReceivedDate
        {
            get
            {
                return this._CLdReceivedDate;
            }
            set
            {
                if ((this._CLdReceivedDate != value))
                {
                    this.OnCLdReceivedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CLdReceivedDate = value;
                    this.SendPropertyChanged("CLdReceivedDate");
                    this.OnCLdReceivedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLdTransDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CLdTransDate
        {
            get
            {
                return this._CLdTransDate;
            }
            set
            {
                if ((this._CLdTransDate != value))
                {
                    this.OnCLdTransDateChanging(value);
                    this.SendPropertyChanging();
                    this._CLdTransDate = value;
                    this.SendPropertyChanged("CLdTransDate");
                    this.OnCLdTransDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLdExtractDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CLdExtractDate
        {
            get
            {
                return this._CLdExtractDate;
            }
            set
            {
                if ((this._CLdExtractDate != value))
                {
                    this.OnCLdExtractDateChanging(value);
                    this.SendPropertyChanging();
                    this._CLdExtractDate = value;
                    this.SendPropertyChanged("CLdExtractDate");
                    this.OnCLdExtractDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcClaimType", DbType = "VarChar(4)")]
        public string CLcClaimType
        {
            get
            {
                return this._CLcClaimType;
            }
            set
            {
                if ((this._CLcClaimType != value))
                {
                    this.OnCLcClaimTypeChanging(value);
                    this.SendPropertyChanging();
                    this._CLcClaimType = value;
                    this.SendPropertyChanged("CLcClaimType");
                    this.OnCLcClaimTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiClaimNumberType", DbType = "Int")]
        public System.Nullable<int> CLiClaimNumberType
        {
            get
            {
                return this._CLiClaimNumberType;
            }
            set
            {
                if ((this._CLiClaimNumberType != value))
                {
                    this.OnCLiClaimNumberTypeChanging(value);
                    this.SendPropertyChanging();
                    this._CLiClaimNumberType = value;
                    this.SendPropertyChanged("CLiClaimNumberType");
                    this.OnCLiClaimNumberTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiInvoiceID", DbType = "Int")]
        public System.Nullable<int> CLiInvoiceID
        {
            get
            {
                return this._CLiInvoiceID;
            }
            set
            {
                if ((this._CLiInvoiceID != value))
                {
                    this.OnCLiInvoiceIDChanging(value);
                    this.SendPropertyChanging();
                    this._CLiInvoiceID = value;
                    this.SendPropertyChanged("CLiInvoiceID");
                    this.OnCLiInvoiceIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcInvoiceNumber", DbType = "VarChar(50)")]
        public string CLcInvoiceNumber
        {
            get
            {
                return this._CLcInvoiceNumber;
            }
            set
            {
                if ((this._CLcInvoiceNumber != value))
                {
                    this.OnCLcInvoiceNumberChanging(value);
                    this.SendPropertyChanging();
                    this._CLcInvoiceNumber = value;
                    this.SendPropertyChanged("CLcInvoiceNumber");
                    this.OnCLcInvoiceNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLdInvoiceDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CLdInvoiceDate
        {
            get
            {
                return this._CLdInvoiceDate;
            }
            set
            {
                if ((this._CLdInvoiceDate != value))
                {
                    this.OnCLdInvoiceDateChanging(value);
                    this.SendPropertyChanging();
                    this._CLdInvoiceDate = value;
                    this.SendPropertyChanged("CLdInvoiceDate");
                    this.OnCLdInvoiceDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcManualClaimNum", DbType = "VarChar(50)")]
        public string CLcManualClaimNum
        {
            get
            {
                return this._CLcManualClaimNum;
            }
            set
            {
                if ((this._CLcManualClaimNum != value))
                {
                    this.OnCLcManualClaimNumChanging(value);
                    this.SendPropertyChanging();
                    this._CLcManualClaimNum = value;
                    this.SendPropertyChanged("CLcManualClaimNum");
                    this.OnCLcManualClaimNumChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLdManualClaimDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CLdManualClaimDate
        {
            get
            {
                return this._CLdManualClaimDate;
            }
            set
            {
                if ((this._CLdManualClaimDate != value))
                {
                    this.OnCLdManualClaimDateChanging(value);
                    this.SendPropertyChanging();
                    this._CLdManualClaimDate = value;
                    this.SendPropertyChanged("CLdManualClaimDate");
                    this.OnCLdManualClaimDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiCNID", DbType = "Int")]
        public System.Nullable<int> CLiCNID
        {
            get
            {
                return this._CLiCNID;
            }
            set
            {
                if ((this._CLiCNID != value))
                {
                    this.OnCLiCNIDChanging(value);
                    this.SendPropertyChanging();
                    this._CLiCNID = value;
                    this.SendPropertyChanged("CLiCNID");
                    this.OnCLiCNIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcCNNumber", DbType = "VarChar(50)")]
        public string CLcCNNumber
        {
            get
            {
                return this._CLcCNNumber;
            }
            set
            {
                if ((this._CLcCNNumber != value))
                {
                    this.OnCLcCNNumberChanging(value);
                    this.SendPropertyChanging();
                    this._CLcCNNumber = value;
                    this.SendPropertyChanged("CLcCNNumber");
                    this.OnCLcCNNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLdCNDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CLdCNDate
        {
            get
            {
                return this._CLdCNDate;
            }
            set
            {
                if ((this._CLdCNDate != value))
                {
                    this.OnCLdCNDateChanging(value);
                    this.SendPropertyChanging();
                    this._CLdCNDate = value;
                    this.SendPropertyChanged("CLdCNDate");
                    this.OnCLdCNDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLmAmount", DbType = "Money")]
        public System.Nullable<decimal> CLmAmount
        {
            get
            {
                return this._CLmAmount;
            }
            set
            {
                if ((this._CLmAmount != value))
                {
                    this.OnCLmAmountChanging(value);
                    this.SendPropertyChanging();
                    this._CLmAmount = value;
                    this.SendPropertyChanged("CLmAmount");
                    this.OnCLmAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLmVat", DbType = "Money")]
        public System.Nullable<decimal> CLmVat
        {
            get
            {
                return this._CLmVat;
            }
            set
            {
                if ((this._CLmVat != value))
                {
                    this.OnCLmVatChanging(value);
                    this.SendPropertyChanging();
                    this._CLmVat = value;
                    this.SendPropertyChanged("CLmVat");
                    this.OnCLmVatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcDiscIndc1", DbType = "VarChar(50)")]
        public string CLcDiscIndc1
        {
            get
            {
                return this._CLcDiscIndc1;
            }
            set
            {
                if ((this._CLcDiscIndc1 != value))
                {
                    this.OnCLcDiscIndc1Changing(value);
                    this.SendPropertyChanging();
                    this._CLcDiscIndc1 = value;
                    this.SendPropertyChanged("CLcDiscIndc1");
                    this.OnCLcDiscIndc1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiDiscPerc1", DbType = "Money")]
        public System.Nullable<decimal> CLiDiscPerc1
        {
            get
            {
                return this._CLiDiscPerc1;
            }
            set
            {
                if ((this._CLiDiscPerc1 != value))
                {
                    this.OnCLiDiscPerc1Changing(value);
                    this.SendPropertyChanging();
                    this._CLiDiscPerc1 = value;
                    this.SendPropertyChanged("CLiDiscPerc1");
                    this.OnCLiDiscPerc1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLmDiscAmt1", DbType = "Money")]
        public System.Nullable<decimal> CLmDiscAmt1
        {
            get
            {
                return this._CLmDiscAmt1;
            }
            set
            {
                if ((this._CLmDiscAmt1 != value))
                {
                    this.OnCLmDiscAmt1Changing(value);
                    this.SendPropertyChanging();
                    this._CLmDiscAmt1 = value;
                    this.SendPropertyChanged("CLmDiscAmt1");
                    this.OnCLmDiscAmt1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcDiscIndc2", DbType = "VarChar(50)")]
        public string CLcDiscIndc2
        {
            get
            {
                return this._CLcDiscIndc2;
            }
            set
            {
                if ((this._CLcDiscIndc2 != value))
                {
                    this.OnCLcDiscIndc2Changing(value);
                    this.SendPropertyChanging();
                    this._CLcDiscIndc2 = value;
                    this.SendPropertyChanged("CLcDiscIndc2");
                    this.OnCLcDiscIndc2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiDiscPerc2", DbType = "Money")]
        public System.Nullable<decimal> CLiDiscPerc2
        {
            get
            {
                return this._CLiDiscPerc2;
            }
            set
            {
                if ((this._CLiDiscPerc2 != value))
                {
                    this.OnCLiDiscPerc2Changing(value);
                    this.SendPropertyChanging();
                    this._CLiDiscPerc2 = value;
                    this.SendPropertyChanged("CLiDiscPerc2");
                    this.OnCLiDiscPerc2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLmDiscAmt2", DbType = "Money")]
        public System.Nullable<decimal> CLmDiscAmt2
        {
            get
            {
                return this._CLmDiscAmt2;
            }
            set
            {
                if ((this._CLmDiscAmt2 != value))
                {
                    this.OnCLmDiscAmt2Changing(value);
                    this.SendPropertyChanging();
                    this._CLmDiscAmt2 = value;
                    this.SendPropertyChanged("CLmDiscAmt2");
                    this.OnCLmDiscAmt2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcDiscIndc3", DbType = "VarChar(50)")]
        public string CLcDiscIndc3
        {
            get
            {
                return this._CLcDiscIndc3;
            }
            set
            {
                if ((this._CLcDiscIndc3 != value))
                {
                    this.OnCLcDiscIndc3Changing(value);
                    this.SendPropertyChanging();
                    this._CLcDiscIndc3 = value;
                    this.SendPropertyChanged("CLcDiscIndc3");
                    this.OnCLcDiscIndc3Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiDiscPerc3", DbType = "Money")]
        public System.Nullable<decimal> CLiDiscPerc3
        {
            get
            {
                return this._CLiDiscPerc3;
            }
            set
            {
                if ((this._CLiDiscPerc3 != value))
                {
                    this.OnCLiDiscPerc3Changing(value);
                    this.SendPropertyChanging();
                    this._CLiDiscPerc3 = value;
                    this.SendPropertyChanged("CLiDiscPerc3");
                    this.OnCLiDiscPerc3Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLmDiscAmt3", DbType = "Money")]
        public System.Nullable<decimal> CLmDiscAmt3
        {
            get
            {
                return this._CLmDiscAmt3;
            }
            set
            {
                if ((this._CLmDiscAmt3 != value))
                {
                    this.OnCLmDiscAmt3Changing(value);
                    this.SendPropertyChanging();
                    this._CLmDiscAmt3 = value;
                    this.SendPropertyChanged("CLmDiscAmt3");
                    this.OnCLmDiscAmt3Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiReasonID", DbType = "Int")]
        public System.Nullable<int> CLiReasonID
        {
            get
            {
                return this._CLiReasonID;
            }
            set
            {
                if ((this._CLiReasonID != value))
                {
                    this.OnCLiReasonIDChanging(value);
                    this.SendPropertyChanging();
                    this._CLiReasonID = value;
                    this.SendPropertyChanged("CLiReasonID");
                    this.OnCLiReasonIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLiNumLines", DbType = "Int")]
        public System.Nullable<int> CLiNumLines
        {
            get
            {
                return this._CLiNumLines;
            }
            set
            {
                if ((this._CLiNumLines != value))
                {
                    this.OnCLiNumLinesChanging(value);
                    this.SendPropertyChanging();
                    this._CLiNumLines = value;
                    this.SendPropertyChanged("CLiNumLines");
                    this.OnCLiNumLinesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcNarratives", DbType = "VarChar(255)")]
        public string CLcNarratives
        {
            get
            {
                return this._CLcNarratives;
            }
            set
            {
                if ((this._CLcNarratives != value))
                {
                    this.OnCLcNarrativesChanging(value);
                    this.SendPropertyChanging();
                    this._CLcNarratives = value;
                    this.SendPropertyChanged("CLcNarratives");
                    this.OnCLcNarrativesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StatusId", DbType = "Int")]
        public System.Nullable<int> StatusId
        {
            get
            {
                return this._StatusId;
            }
            set
            {
                if ((this._StatusId != value))
                {
                    this.OnStatusIdChanging(value);
                    this.SendPropertyChanging();
                    this._StatusId = value;
                    this.SendPropertyChanged("StatusId");
                    this.OnStatusIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TypeId", DbType = "Int")]
        public System.Nullable<int> TypeId
        {
            get
            {
                return this._TypeId;
            }
            set
            {
                if ((this._TypeId != value))
                {
                    this.OnTypeIdChanging(value);
                    this.SendPropertyChanging();
                    this._TypeId = value;
                    this.SendPropertyChanged("TypeId");
                    this.OnTypeIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReceivedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> ReceivedDate
        {
            get
            {
                return this._ReceivedDate;
            }
            set
            {
                if ((this._ReceivedDate != value))
                {
                    this.OnReceivedDateChanging(value);
                    this.SendPropertyChanging();
                    this._ReceivedDate = value;
                    this.SendPropertyChanged("ReceivedDate");
                    this.OnReceivedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastUpdated", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LastUpdated
        {
            get
            {
                return this._LastUpdated;
            }
            set
            {
                if ((this._LastUpdated != value))
                {
                    this.OnLastUpdatedChanging(value);
                    this.SendPropertyChanging();
                    this._LastUpdated = value;
                    this.SendPropertyChanged("LastUpdated");
                    this.OnLastUpdatedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssignedToHistory", DbType = "Char(1)")]
        public System.Nullable<char> AssignedToHistory
        {
            get
            {
                return this._AssignedToHistory;
            }
            set
            {
                if ((this._AssignedToHistory != value))
                {
                    this.OnAssignedToHistoryChanging(value);
                    this.SendPropertyChanging();
                    this._AssignedToHistory = value;
                    this.SendPropertyChanged("AssignedToHistory");
                    this.OnAssignedToHistoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssignedToHistoryDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> AssignedToHistoryDate
        {
            get
            {
                return this._AssignedToHistoryDate;
            }
            set
            {
                if ((this._AssignedToHistoryDate != value))
                {
                    this.OnAssignedToHistoryDateChanging(value);
                    this.SendPropertyChanging();
                    this._AssignedToHistoryDate = value;
                    this.SendPropertyChanged("AssignedToHistoryDate");
                    this.OnAssignedToHistoryDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProFormaCreditNoteNumber", DbType = "VarChar(50)")]
        public string ProFormaCreditNoteNumber
        {
            get
            {
                return this._ProFormaCreditNoteNumber;
            }
            set
            {
                if ((this._ProFormaCreditNoteNumber != value))
                {
                    this.OnProFormaCreditNoteNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ProFormaCreditNoteNumber = value;
                    this.SendPropertyChanged("ProFormaCreditNoteNumber");
                    this.OnProFormaCreditNoteNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProFormaCreditAmount", DbType = "Decimal(18,4)")]
        public System.Nullable<decimal> ProFormaCreditAmount
        {
            get
            {
                return this._ProFormaCreditAmount;
            }
            set
            {
                if ((this._ProFormaCreditAmount != value))
                {
                    this.OnProFormaCreditAmountChanging(value);
                    this.SendPropertyChanging();
                    this._ProFormaCreditAmount = value;
                    this.SendPropertyChanged("ProFormaCreditAmount");
                    this.OnProFormaCreditAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ActualCreditNoteNumber", DbType = "VarChar(50)")]
        public string ActualCreditNoteNumber
        {
            get
            {
                return this._ActualCreditNoteNumber;
            }
            set
            {
                if ((this._ActualCreditNoteNumber != value))
                {
                    this.OnActualCreditNoteNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ActualCreditNoteNumber = value;
                    this.SendPropertyChanged("ActualCreditNoteNumber");
                    this.OnActualCreditNoteNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ActualCreditAmount", DbType = "Decimal(18,4)")]
        public System.Nullable<decimal> ActualCreditAmount
        {
            get
            {
                return this._ActualCreditAmount;
            }
            set
            {
                if ((this._ActualCreditAmount != value))
                {
                    this.OnActualCreditAmountChanging(value);
                    this.SendPropertyChanging();
                    this._ActualCreditAmount = value;
                    this.SendPropertyChanged("ActualCreditAmount");
                    this.OnActualCreditAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReasonDescr", DbType = "VarChar(50)")]
        public string ReasonDescr
        {
            get
            {
                return this._ReasonDescr;
            }
            set
            {
                if ((this._ReasonDescr != value))
                {
                    this.OnReasonDescrChanging(value);
                    this.SendPropertyChanging();
                    this._ReasonDescr = value;
                    this.SendPropertyChanged("ReasonDescr");
                    this.OnReasonDescrChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OldCLiNID", DbType = "Int")]
        public System.Nullable<int> OldCLiNID
        {
            get
            {
                return this._OldCLiNID;
            }
            set
            {
                if ((this._OldCLiNID != value))
                {
                    this.OnOldCLiNIDChanging(value);
                    this.SendPropertyChanging();
                    this._OldCLiNID = value;
                    this.SendPropertyChanged("OldCLiNID");
                    this.OnOldCLiNIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimCategoryId", DbType = "Int")]
        public System.Nullable<int> ClaimCategoryId
        {
            get
            {
                return this._ClaimCategoryId;
            }
            set
            {
                if ((this._ClaimCategoryId != value))
                {
                    this.OnClaimCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimCategoryId = value;
                    this.SendPropertyChanged("ClaimCategoryId");
                    this.OnClaimCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OriginalClaimType", DbType = "NVarChar(4)")]
        public string OriginalClaimType
        {
            get
            {
                return this._OriginalClaimType;
            }
            set
            {
                if ((this._OriginalClaimType != value))
                {
                    this.OnOriginalClaimTypeChanging(value);
                    this.SendPropertyChanging();
                    this._OriginalClaimType = value;
                    this.SendPropertyChanged("OriginalClaimType");
                    this.OnOriginalClaimTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ForceCreditInEffect", DbType = "Bit")]
        public System.Nullable<bool> ForceCreditInEffect
        {
            get
            {
                return this._ForceCreditInEffect;
            }
            set
            {
                if ((this._ForceCreditInEffect != value))
                {
                    this.OnForceCreditInEffectChanging(value);
                    this.SendPropertyChanging();
                    this._ForceCreditInEffect = value;
                    this.SendPropertyChanged("ForceCreditInEffect");
                    this.OnForceCreditInEffectChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DespatchPoint", DbType = "NVarChar(20)")]
        public string DespatchPoint
        {
            get
            {
                return this._DespatchPoint;
            }
            set
            {
                if ((this._DespatchPoint != value))
                {
                    this.OnDespatchPointChanging(value);
                    this.SendPropertyChanging();
                    this._DespatchPoint = value;
                    this.SendPropertyChanged("DespatchPoint");
                    this.OnDespatchPointChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimSubCategoryId", DbType = "Int")]
        public System.Nullable<int> ClaimSubCategoryId
        {
            get
            {
                return this._ClaimSubCategoryId;
            }
            set
            {
                if ((this._ClaimSubCategoryId != value))
                {
                    this.OnClaimSubCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimSubCategoryId = value;
                    this.SendPropertyChanged("ClaimSubCategoryId");
                    this.OnClaimSubCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OutcomeReasonCode", DbType = "Int")]
        public System.Nullable<int> OutcomeReasonCode
        {
            get
            {
                return this._OutcomeReasonCode;
            }
            set
            {
                if ((this._OutcomeReasonCode != value))
                {
                    this.OnOutcomeReasonCodeChanging(value);
                    this.SendPropertyChanging();
                    this._OutcomeReasonCode = value;
                    this.SendPropertyChanged("OutcomeReasonCode");
                    this.OnOutcomeReasonCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvoiceValue", DbType = "Decimal(18,4)")]
        public System.Nullable<decimal> InvoiceValue
        {
            get
            {
                return this._InvoiceValue;
            }
            set
            {
                if ((this._InvoiceValue != value))
                {
                    this.OnInvoiceValueChanging(value);
                    this.SendPropertyChanging();
                    this._InvoiceValue = value;
                    this.SendPropertyChanged("InvoiceValue");
                    this.OnInvoiceValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoNumber", DbType = "VarChar(50)")]
        public string PoNumber
        {
            get
            {
                return this._PoNumber;
            }
            set
            {
                if ((this._PoNumber != value))
                {
                    this.OnPoNumberChanging(value);
                    this.SendPropertyChanging();
                    this._PoNumber = value;
                    this.SendPropertyChanged("PoNumber");
                    this.OnPoNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PoValue", DbType = "Decimal(18,4)")]
        public System.Nullable<decimal> PoValue
        {
            get
            {
                return this._PoValue;
            }
            set
            {
                if ((this._PoValue != value))
                {
                    this.OnPoValueChanging(value);
                    this.SendPropertyChanging();
                    this._PoValue = value;
                    this.SendPropertyChanged("PoValue");
                    this.OnPoValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpliftRef", DbType = "VarChar(100)")]
        public string UpliftRef
        {
            get
            {
                return this._UpliftRef;
            }
            set
            {
                if ((this._UpliftRef != value))
                {
                    this.OnUpliftRefChanging(value);
                    this.SendPropertyChanging();
                    this._UpliftRef = value;
                    this.SendPropertyChanged("UpliftRef");
                    this.OnUpliftRefChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AuthorisedByRep", DbType = "Bit")]
        public System.Nullable<bool> AuthorisedByRep
        {
            get
            {
                return this._AuthorisedByRep;
            }
            set
            {
                if ((this._AuthorisedByRep != value))
                {
                    this.OnAuthorisedByRepChanging(value);
                    this.SendPropertyChanging();
                    this._AuthorisedByRep = value;
                    this.SendPropertyChanged("AuthorisedByRep");
                    this.OnAuthorisedByRepChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AuditLog_Comments", DbType = "NVarChar(MAX)")]
        public string AuditLog_Comments
        {
            get
            {
                return this._AuditLog_Comments;
            }
            set
            {
                if ((this._AuditLog_Comments != value))
                {
                    this.OnAuditLog_CommentsChanging(value);
                    this.SendPropertyChanging();
                    this._AuditLog_Comments = value;
                    this.SendPropertyChanged("AuditLog_Comments");
                    this.OnAuditLog_CommentsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CliSubReasonId", DbType = "Int")]
        public System.Nullable<int> CliSubReasonId
        {
            get
            {
                return this._CliSubReasonId;
            }
            set
            {
                if ((this._CliSubReasonId != value))
                {
                    this.OnCliSubReasonIdChanging(value);
                    this.SendPropertyChanging();
                    this._CliSubReasonId = value;
                    this.SendPropertyChanged("CliSubReasonId");
                    this.OnCliSubReasonIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HasAttachments", DbType = "Bit")]
        public System.Nullable<bool> HasAttachments
        {
            get
            {
                return this._HasAttachments;
            }
            set
            {
                if ((this._HasAttachments != value))
                {
                    this.OnHasAttachmentsChanging(value);
                    this.SendPropertyChanging();
                    this._HasAttachments = value;
                    this.SendPropertyChanged("HasAttachments");
                    this.OnHasAttachmentsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Buyer_Id", DbType = "Int")]
        public System.Nullable<int> Buyer_Id
        {
            get
            {
                return this._Buyer_Id;
            }
            set
            {
                if ((this._Buyer_Id != value))
                {
                    this.OnBuyer_IdChanging(value);
                    this.SendPropertyChanging();
                    this._Buyer_Id = value;
                    this.SendPropertyChanged("Buyer_Id");
                    this.OnBuyer_IdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ManualInvoiceNumber", DbType = "NVarChar(13)")]
        public string ManualInvoiceNumber
        {
            get
            {
                return this._ManualInvoiceNumber;
            }
            set
            {
                if ((this._ManualInvoiceNumber != value))
                {
                    this.OnManualInvoiceNumberChanging(value);
                    this.SendPropertyChanging();
                    this._ManualInvoiceNumber = value;
                    this.SendPropertyChanged("ManualInvoiceNumber");
                    this.OnManualInvoiceNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CLcVendorCode", DbType = "NVarChar(10)")]
        public string CLcVendorCode
        {
            get
            {
                return this._CLcVendorCode;
            }
            set
            {
                if ((this._CLcVendorCode != value))
                {
                    this.OnCLcVendorCodeChanging(value);
                    this.SendPropertyChanging();
                    this._CLcVendorCode = value;
                    this.SendPropertyChanged("CLcVendorCode");
                    this.OnCLcVendorCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReasonCode", DbType = "NVarChar(10)")]
        public string ReasonCode
        {
            get
            {
                return this._ReasonCode;
            }
            set
            {
                if ((this._ReasonCode != value))
                {
                    this.OnReasonCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ReasonCode = value;
                    this.SendPropertyChanged("ReasonCode");
                    this.OnReasonCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Claim_ClaimDetail", Storage = "_ClaimDetails", ThisKey = "CLID", OtherKey = "CDiClaimID")]
        public EntitySet<ClaimDetail> ClaimDetails
        {
            get
            {
                return this._ClaimDetails;
            }
            set
            {
                this._ClaimDetails.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ClaimDetails(ClaimDetail entity)
        {
            this.SendPropertyChanging();
            entity.Claim = this;
        }

        private void detach_ClaimDetails(ClaimDetail entity)
        {
            this.SendPropertyChanging();
            entity.Claim = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ClaimDetail")]
    public partial class ClaimDetail : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _CDID;

        private int _CDiClaimID;

        private string _CDcProdCode;

        private string _CDcProdEAN;

        private string _CDcProdDescr;

        private System.Nullable<int> _CDiConsumerUnit;

        private string _CDcUOM;

        private System.Nullable<int> _CDiQtyWhole;

        private System.Nullable<int> _CDiQtyLoose;

        private System.Nullable<decimal> _CDmUnitPrice;

        private System.Nullable<int> _CDiTotMeasure;

        private string _CDcDealInd1;

        private System.Nullable<double> _CDiDealPerc1;

        private System.Nullable<decimal> _CDmDealAmt1;

        private string _CDcDealInd2;

        private System.Nullable<double> _CDiDealPerc2;

        private System.Nullable<decimal> _CDmDealAmt2;

        private System.Nullable<int> _CDmVatPerc;

        private System.Nullable<decimal> _CDmSubTot;

        private System.Nullable<int> _CDiClaimReasonID;

        private System.Nullable<int> _CDiGoodsRetID;

        private string _CDcNarr1;

        private string _CDcNarr2;

        private string _CDcNarr3;

        private System.Nullable<int> _ClaimReasonId;

        private EntityRef<Claim> _Claim;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCDIDChanging(int value);
        partial void OnCDIDChanged();
        partial void OnCDiClaimIDChanging(int value);
        partial void OnCDiClaimIDChanged();
        partial void OnCDcProdCodeChanging(string value);
        partial void OnCDcProdCodeChanged();
        partial void OnCDcProdEANChanging(string value);
        partial void OnCDcProdEANChanged();
        partial void OnCDcProdDescrChanging(string value);
        partial void OnCDcProdDescrChanged();
        partial void OnCDiConsumerUnitChanging(System.Nullable<int> value);
        partial void OnCDiConsumerUnitChanged();
        partial void OnCDcUOMChanging(string value);
        partial void OnCDcUOMChanged();
        partial void OnCDiQtyWholeChanging(System.Nullable<int> value);
        partial void OnCDiQtyWholeChanged();
        partial void OnCDiQtyLooseChanging(System.Nullable<int> value);
        partial void OnCDiQtyLooseChanged();
        partial void OnCDmUnitPriceChanging(System.Nullable<decimal> value);
        partial void OnCDmUnitPriceChanged();
        partial void OnCDiTotMeasureChanging(System.Nullable<int> value);
        partial void OnCDiTotMeasureChanged();
        partial void OnCDcDealInd1Changing(string value);
        partial void OnCDcDealInd1Changed();
        partial void OnCDiDealPerc1Changing(System.Nullable<double> value);
        partial void OnCDiDealPerc1Changed();
        partial void OnCDmDealAmt1Changing(System.Nullable<decimal> value);
        partial void OnCDmDealAmt1Changed();
        partial void OnCDcDealInd2Changing(string value);
        partial void OnCDcDealInd2Changed();
        partial void OnCDiDealPerc2Changing(System.Nullable<double> value);
        partial void OnCDiDealPerc2Changed();
        partial void OnCDmDealAmt2Changing(System.Nullable<decimal> value);
        partial void OnCDmDealAmt2Changed();
        partial void OnCDmVatPercChanging(System.Nullable<int> value);
        partial void OnCDmVatPercChanged();
        partial void OnCDmSubTotChanging(System.Nullable<decimal> value);
        partial void OnCDmSubTotChanged();
        partial void OnCDiClaimReasonIDChanging(System.Nullable<int> value);
        partial void OnCDiClaimReasonIDChanged();
        partial void OnCDiGoodsRetIDChanging(System.Nullable<int> value);
        partial void OnCDiGoodsRetIDChanged();
        partial void OnCDcNarr1Changing(string value);
        partial void OnCDcNarr1Changed();
        partial void OnCDcNarr2Changing(string value);
        partial void OnCDcNarr2Changed();
        partial void OnCDcNarr3Changing(string value);
        partial void OnCDcNarr3Changed();
        partial void OnClaimReasonIdChanging(System.Nullable<int> value);
        partial void OnClaimReasonIdChanged();
        #endregion

        public ClaimDetail()
        {
            this._Claim = default(EntityRef<Claim>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int CDID
        {
            get
            {
                return this._CDID;
            }
            set
            {
                if ((this._CDID != value))
                {
                    this.OnCDIDChanging(value);
                    this.SendPropertyChanging();
                    this._CDID = value;
                    this.SendPropertyChanged("CDID");
                    this.OnCDIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiClaimID", DbType = "Int NOT NULL")]
        public int CDiClaimID
        {
            get
            {
                return this._CDiClaimID;
            }
            set
            {
                if ((this._CDiClaimID != value))
                {
                    if (this._Claim.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnCDiClaimIDChanging(value);
                    this.SendPropertyChanging();
                    this._CDiClaimID = value;
                    this.SendPropertyChanged("CDiClaimID");
                    this.OnCDiClaimIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcProdCode", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CDcProdCode
        {
            get
            {
                return this._CDcProdCode;
            }
            set
            {
                if ((this._CDcProdCode != value))
                {
                    this.OnCDcProdCodeChanging(value);
                    this.SendPropertyChanging();
                    this._CDcProdCode = value;
                    this.SendPropertyChanged("CDcProdCode");
                    this.OnCDcProdCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcProdEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CDcProdEAN
        {
            get
            {
                return this._CDcProdEAN;
            }
            set
            {
                if ((this._CDcProdEAN != value))
                {
                    this.OnCDcProdEANChanging(value);
                    this.SendPropertyChanging();
                    this._CDcProdEAN = value;
                    this.SendPropertyChanged("CDcProdEAN");
                    this.OnCDcProdEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcProdDescr", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CDcProdDescr
        {
            get
            {
                return this._CDcProdDescr;
            }
            set
            {
                if ((this._CDcProdDescr != value))
                {
                    this.OnCDcProdDescrChanging(value);
                    this.SendPropertyChanging();
                    this._CDcProdDescr = value;
                    this.SendPropertyChanged("CDcProdDescr");
                    this.OnCDcProdDescrChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiConsumerUnit", DbType = "Int")]
        public System.Nullable<int> CDiConsumerUnit
        {
            get
            {
                return this._CDiConsumerUnit;
            }
            set
            {
                if ((this._CDiConsumerUnit != value))
                {
                    this.OnCDiConsumerUnitChanging(value);
                    this.SendPropertyChanging();
                    this._CDiConsumerUnit = value;
                    this.SendPropertyChanged("CDiConsumerUnit");
                    this.OnCDiConsumerUnitChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcUOM", DbType = "VarChar(10)")]
        public string CDcUOM
        {
            get
            {
                return this._CDcUOM;
            }
            set
            {
                if ((this._CDcUOM != value))
                {
                    this.OnCDcUOMChanging(value);
                    this.SendPropertyChanging();
                    this._CDcUOM = value;
                    this.SendPropertyChanged("CDcUOM");
                    this.OnCDcUOMChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiQtyWhole", DbType = "Int")]
        public System.Nullable<int> CDiQtyWhole
        {
            get
            {
                return this._CDiQtyWhole;
            }
            set
            {
                if ((this._CDiQtyWhole != value))
                {
                    this.OnCDiQtyWholeChanging(value);
                    this.SendPropertyChanging();
                    this._CDiQtyWhole = value;
                    this.SendPropertyChanged("CDiQtyWhole");
                    this.OnCDiQtyWholeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiQtyLoose", DbType = "Int")]
        public System.Nullable<int> CDiQtyLoose
        {
            get
            {
                return this._CDiQtyLoose;
            }
            set
            {
                if ((this._CDiQtyLoose != value))
                {
                    this.OnCDiQtyLooseChanging(value);
                    this.SendPropertyChanging();
                    this._CDiQtyLoose = value;
                    this.SendPropertyChanged("CDiQtyLoose");
                    this.OnCDiQtyLooseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDmUnitPrice", DbType = "Money")]
        public System.Nullable<decimal> CDmUnitPrice
        {
            get
            {
                return this._CDmUnitPrice;
            }
            set
            {
                if ((this._CDmUnitPrice != value))
                {
                    this.OnCDmUnitPriceChanging(value);
                    this.SendPropertyChanging();
                    this._CDmUnitPrice = value;
                    this.SendPropertyChanged("CDmUnitPrice");
                    this.OnCDmUnitPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiTotMeasure", DbType = "Int")]
        public System.Nullable<int> CDiTotMeasure
        {
            get
            {
                return this._CDiTotMeasure;
            }
            set
            {
                if ((this._CDiTotMeasure != value))
                {
                    this.OnCDiTotMeasureChanging(value);
                    this.SendPropertyChanging();
                    this._CDiTotMeasure = value;
                    this.SendPropertyChanged("CDiTotMeasure");
                    this.OnCDiTotMeasureChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcDealInd1", DbType = "VarChar(10)")]
        public string CDcDealInd1
        {
            get
            {
                return this._CDcDealInd1;
            }
            set
            {
                if ((this._CDcDealInd1 != value))
                {
                    this.OnCDcDealInd1Changing(value);
                    this.SendPropertyChanging();
                    this._CDcDealInd1 = value;
                    this.SendPropertyChanged("CDcDealInd1");
                    this.OnCDcDealInd1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiDealPerc1", DbType = "Float")]
        public System.Nullable<double> CDiDealPerc1
        {
            get
            {
                return this._CDiDealPerc1;
            }
            set
            {
                if ((this._CDiDealPerc1 != value))
                {
                    this.OnCDiDealPerc1Changing(value);
                    this.SendPropertyChanging();
                    this._CDiDealPerc1 = value;
                    this.SendPropertyChanged("CDiDealPerc1");
                    this.OnCDiDealPerc1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDmDealAmt1", DbType = "Money")]
        public System.Nullable<decimal> CDmDealAmt1
        {
            get
            {
                return this._CDmDealAmt1;
            }
            set
            {
                if ((this._CDmDealAmt1 != value))
                {
                    this.OnCDmDealAmt1Changing(value);
                    this.SendPropertyChanging();
                    this._CDmDealAmt1 = value;
                    this.SendPropertyChanged("CDmDealAmt1");
                    this.OnCDmDealAmt1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcDealInd2", DbType = "VarChar(10)")]
        public string CDcDealInd2
        {
            get
            {
                return this._CDcDealInd2;
            }
            set
            {
                if ((this._CDcDealInd2 != value))
                {
                    this.OnCDcDealInd2Changing(value);
                    this.SendPropertyChanging();
                    this._CDcDealInd2 = value;
                    this.SendPropertyChanged("CDcDealInd2");
                    this.OnCDcDealInd2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiDealPerc2", DbType = "Float")]
        public System.Nullable<double> CDiDealPerc2
        {
            get
            {
                return this._CDiDealPerc2;
            }
            set
            {
                if ((this._CDiDealPerc2 != value))
                {
                    this.OnCDiDealPerc2Changing(value);
                    this.SendPropertyChanging();
                    this._CDiDealPerc2 = value;
                    this.SendPropertyChanged("CDiDealPerc2");
                    this.OnCDiDealPerc2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDmDealAmt2", DbType = "Money")]
        public System.Nullable<decimal> CDmDealAmt2
        {
            get
            {
                return this._CDmDealAmt2;
            }
            set
            {
                if ((this._CDmDealAmt2 != value))
                {
                    this.OnCDmDealAmt2Changing(value);
                    this.SendPropertyChanging();
                    this._CDmDealAmt2 = value;
                    this.SendPropertyChanged("CDmDealAmt2");
                    this.OnCDmDealAmt2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDmVatPerc", DbType = "Int")]
        public System.Nullable<int> CDmVatPerc
        {
            get
            {
                return this._CDmVatPerc;
            }
            set
            {
                if ((this._CDmVatPerc != value))
                {
                    this.OnCDmVatPercChanging(value);
                    this.SendPropertyChanging();
                    this._CDmVatPerc = value;
                    this.SendPropertyChanged("CDmVatPerc");
                    this.OnCDmVatPercChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDmSubTot", DbType = "Money")]
        public System.Nullable<decimal> CDmSubTot
        {
            get
            {
                return this._CDmSubTot;
            }
            set
            {
                if ((this._CDmSubTot != value))
                {
                    this.OnCDmSubTotChanging(value);
                    this.SendPropertyChanging();
                    this._CDmSubTot = value;
                    this.SendPropertyChanged("CDmSubTot");
                    this.OnCDmSubTotChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiClaimReasonID", DbType = "Int")]
        public System.Nullable<int> CDiClaimReasonID
        {
            get
            {
                return this._CDiClaimReasonID;
            }
            set
            {
                if ((this._CDiClaimReasonID != value))
                {
                    this.OnCDiClaimReasonIDChanging(value);
                    this.SendPropertyChanging();
                    this._CDiClaimReasonID = value;
                    this.SendPropertyChanged("CDiClaimReasonID");
                    this.OnCDiClaimReasonIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDiGoodsRetID", DbType = "Int")]
        public System.Nullable<int> CDiGoodsRetID
        {
            get
            {
                return this._CDiGoodsRetID;
            }
            set
            {
                if ((this._CDiGoodsRetID != value))
                {
                    this.OnCDiGoodsRetIDChanging(value);
                    this.SendPropertyChanging();
                    this._CDiGoodsRetID = value;
                    this.SendPropertyChanged("CDiGoodsRetID");
                    this.OnCDiGoodsRetIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcNarr1", DbType = "VarChar(200)")]
        public string CDcNarr1
        {
            get
            {
                return this._CDcNarr1;
            }
            set
            {
                if ((this._CDcNarr1 != value))
                {
                    this.OnCDcNarr1Changing(value);
                    this.SendPropertyChanging();
                    this._CDcNarr1 = value;
                    this.SendPropertyChanged("CDcNarr1");
                    this.OnCDcNarr1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcNarr2", DbType = "VarChar(200)")]
        public string CDcNarr2
        {
            get
            {
                return this._CDcNarr2;
            }
            set
            {
                if ((this._CDcNarr2 != value))
                {
                    this.OnCDcNarr2Changing(value);
                    this.SendPropertyChanging();
                    this._CDcNarr2 = value;
                    this.SendPropertyChanged("CDcNarr2");
                    this.OnCDcNarr2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CDcNarr3", DbType = "VarChar(200)")]
        public string CDcNarr3
        {
            get
            {
                return this._CDcNarr3;
            }
            set
            {
                if ((this._CDcNarr3 != value))
                {
                    this.OnCDcNarr3Changing(value);
                    this.SendPropertyChanging();
                    this._CDcNarr3 = value;
                    this.SendPropertyChanged("CDcNarr3");
                    this.OnCDcNarr3Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimReasonId", DbType = "Int")]
        public System.Nullable<int> ClaimReasonId
        {
            get
            {
                return this._ClaimReasonId;
            }
            set
            {
                if ((this._ClaimReasonId != value))
                {
                    this.OnClaimReasonIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimReasonId = value;
                    this.SendPropertyChanged("ClaimReasonId");
                    this.OnClaimReasonIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Claim_ClaimDetail", Storage = "_Claim", ThisKey = "CDiClaimID", OtherKey = "CLID", IsForeignKey = true)]
        public Claim Claim
        {
            get
            {
                return this._Claim.Entity;
            }
            set
            {
                Claim previousValue = this._Claim.Entity;
                if (((previousValue != value)
                            || (this._Claim.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Claim.Entity = null;
                        previousValue.ClaimDetails.Remove(this);
                    }
                    this._Claim.Entity = value;
                    if ((value != null))
                    {
                        value.ClaimDetails.Add(this);
                        this._CDiClaimID = value.CLID;
                    }
                    else
                    {
                        this._CDiClaimID = default(int);
                    }
                    this.SendPropertyChanged("Claim");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ClaimCategories")]
    public partial class ClaimCategory : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ClaimCategoryId;

        private string _ClaimCategory1;

        private string _DCEmailAddressForClaimCategory;

        private int _ClaimTypeID;

        private bool _ActiveInactiveIndicator;

        private System.Nullable<int> _WarehouseCategoryId;

        private System.Nullable<int> _CategoryTypeId;

        private System.Nullable<int> _AllowZeroClaims;

        private EntitySet<ClaimReason> _ClaimReasons;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnClaimCategoryIdChanging(int value);
        partial void OnClaimCategoryIdChanged();
        partial void OnClaimCategory1Changing(string value);
        partial void OnClaimCategory1Changed();
        partial void OnDCEmailAddressForClaimCategoryChanging(string value);
        partial void OnDCEmailAddressForClaimCategoryChanged();
        partial void OnClaimTypeIDChanging(int value);
        partial void OnClaimTypeIDChanged();
        partial void OnActiveInactiveIndicatorChanging(bool value);
        partial void OnActiveInactiveIndicatorChanged();
        partial void OnWarehouseCategoryIdChanging(System.Nullable<int> value);
        partial void OnWarehouseCategoryIdChanged();
        partial void OnCategoryTypeIdChanging(System.Nullable<int> value);
        partial void OnCategoryTypeIdChanged();
        partial void OnAllowZeroClaimsChanging(System.Nullable<int> value);
        partial void OnAllowZeroClaimsChanged();
        #endregion

        public ClaimCategory()
        {
            this._ClaimReasons = new EntitySet<ClaimReason>(new Action<ClaimReason>(this.attach_ClaimReasons), new Action<ClaimReason>(this.detach_ClaimReasons));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimCategoryId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ClaimCategoryId
        {
            get
            {
                return this._ClaimCategoryId;
            }
            set
            {
                if ((this._ClaimCategoryId != value))
                {
                    this.OnClaimCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimCategoryId = value;
                    this.SendPropertyChanged("ClaimCategoryId");
                    this.OnClaimCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Name = "ClaimCategory", Storage = "_ClaimCategory1", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string ClaimCategory1
        {
            get
            {
                return this._ClaimCategory1;
            }
            set
            {
                if ((this._ClaimCategory1 != value))
                {
                    this.OnClaimCategory1Changing(value);
                    this.SendPropertyChanging();
                    this._ClaimCategory1 = value;
                    this.SendPropertyChanged("ClaimCategory1");
                    this.OnClaimCategory1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCEmailAddressForClaimCategory", DbType = "VarChar(200)")]
        public string DCEmailAddressForClaimCategory
        {
            get
            {
                return this._DCEmailAddressForClaimCategory;
            }
            set
            {
                if ((this._DCEmailAddressForClaimCategory != value))
                {
                    this.OnDCEmailAddressForClaimCategoryChanging(value);
                    this.SendPropertyChanging();
                    this._DCEmailAddressForClaimCategory = value;
                    this.SendPropertyChanged("DCEmailAddressForClaimCategory");
                    this.OnDCEmailAddressForClaimCategoryChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimTypeID", DbType = "Int NOT NULL")]
        public int ClaimTypeID
        {
            get
            {
                return this._ClaimTypeID;
            }
            set
            {
                if ((this._ClaimTypeID != value))
                {
                    this.OnClaimTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimTypeID = value;
                    this.SendPropertyChanged("ClaimTypeID");
                    this.OnClaimTypeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ActiveInactiveIndicator", DbType = "Bit NOT NULL")]
        public bool ActiveInactiveIndicator
        {
            get
            {
                return this._ActiveInactiveIndicator;
            }
            set
            {
                if ((this._ActiveInactiveIndicator != value))
                {
                    this.OnActiveInactiveIndicatorChanging(value);
                    this.SendPropertyChanging();
                    this._ActiveInactiveIndicator = value;
                    this.SendPropertyChanged("ActiveInactiveIndicator");
                    this.OnActiveInactiveIndicatorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WarehouseCategoryId", DbType = "Int")]
        public System.Nullable<int> WarehouseCategoryId
        {
            get
            {
                return this._WarehouseCategoryId;
            }
            set
            {
                if ((this._WarehouseCategoryId != value))
                {
                    this.OnWarehouseCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._WarehouseCategoryId = value;
                    this.SendPropertyChanged("WarehouseCategoryId");
                    this.OnWarehouseCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CategoryTypeId", DbType = "Int")]
        public System.Nullable<int> CategoryTypeId
        {
            get
            {
                return this._CategoryTypeId;
            }
            set
            {
                if ((this._CategoryTypeId != value))
                {
                    this.OnCategoryTypeIdChanging(value);
                    this.SendPropertyChanging();
                    this._CategoryTypeId = value;
                    this.SendPropertyChanged("CategoryTypeId");
                    this.OnCategoryTypeIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowZeroClaims", DbType = "Int")]
        public System.Nullable<int> AllowZeroClaims
        {
            get
            {
                return this._AllowZeroClaims;
            }
            set
            {
                if ((this._AllowZeroClaims != value))
                {
                    this.OnAllowZeroClaimsChanging(value);
                    this.SendPropertyChanging();
                    this._AllowZeroClaims = value;
                    this.SendPropertyChanged("AllowZeroClaims");
                    this.OnAllowZeroClaimsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ClaimCategory_ClaimReason", Storage = "_ClaimReasons", ThisKey = "ClaimCategoryId", OtherKey = "ClaimCategoryId")]
        public EntitySet<ClaimReason> ClaimReasons
        {
            get
            {
                return this._ClaimReasons;
            }
            set
            {
                this._ClaimReasons.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ClaimReasons(ClaimReason entity)
        {
            this.SendPropertyChanging();
            entity.ClaimCategory = this;
        }

        private void detach_ClaimReasons(ClaimReason entity)
        {
            this.SendPropertyChanging();
            entity.ClaimCategory = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ClaimReasons")]
    public partial class ClaimReason : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ClaimReasonId;

        private string _Value;

        private int _ClaimCategoryId;

        private string _ReasonCode;

        private bool _ActiveInactiveIndicator;

        private bool _AllowSubReasons;

        private EntitySet<ClaimSubReason> _ClaimSubReasons;

        private EntityRef<ClaimCategory> _ClaimCategory;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnClaimReasonIdChanging(int value);
        partial void OnClaimReasonIdChanged();
        partial void OnValueChanging(string value);
        partial void OnValueChanged();
        partial void OnClaimCategoryIdChanging(int value);
        partial void OnClaimCategoryIdChanged();
        partial void OnReasonCodeChanging(string value);
        partial void OnReasonCodeChanged();
        partial void OnActiveInactiveIndicatorChanging(bool value);
        partial void OnActiveInactiveIndicatorChanged();
        partial void OnAllowSubReasonsChanging(bool value);
        partial void OnAllowSubReasonsChanged();
        #endregion

        public ClaimReason()
        {
            this._ClaimSubReasons = new EntitySet<ClaimSubReason>(new Action<ClaimSubReason>(this.attach_ClaimSubReasons), new Action<ClaimSubReason>(this.detach_ClaimSubReasons));
            this._ClaimCategory = default(EntityRef<ClaimCategory>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimReasonId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ClaimReasonId
        {
            get
            {
                return this._ClaimReasonId;
            }
            set
            {
                if ((this._ClaimReasonId != value))
                {
                    this.OnClaimReasonIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimReasonId = value;
                    this.SendPropertyChanged("ClaimReasonId");
                    this.OnClaimReasonIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Value", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string Value
        {
            get
            {
                return this._Value;
            }
            set
            {
                if ((this._Value != value))
                {
                    this.OnValueChanging(value);
                    this.SendPropertyChanging();
                    this._Value = value;
                    this.SendPropertyChanged("Value");
                    this.OnValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimCategoryId", DbType = "Int NOT NULL")]
        public int ClaimCategoryId
        {
            get
            {
                return this._ClaimCategoryId;
            }
            set
            {
                if ((this._ClaimCategoryId != value))
                {
                    if (this._ClaimCategory.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnClaimCategoryIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimCategoryId = value;
                    this.SendPropertyChanged("ClaimCategoryId");
                    this.OnClaimCategoryIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReasonCode", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string ReasonCode
        {
            get
            {
                return this._ReasonCode;
            }
            set
            {
                if ((this._ReasonCode != value))
                {
                    this.OnReasonCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ReasonCode = value;
                    this.SendPropertyChanged("ReasonCode");
                    this.OnReasonCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ActiveInactiveIndicator", DbType = "Bit NOT NULL")]
        public bool ActiveInactiveIndicator
        {
            get
            {
                return this._ActiveInactiveIndicator;
            }
            set
            {
                if ((this._ActiveInactiveIndicator != value))
                {
                    this.OnActiveInactiveIndicatorChanging(value);
                    this.SendPropertyChanging();
                    this._ActiveInactiveIndicator = value;
                    this.SendPropertyChanged("ActiveInactiveIndicator");
                    this.OnActiveInactiveIndicatorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowSubReasons", DbType = "Bit NOT NULL")]
        public bool AllowSubReasons
        {
            get
            {
                return this._AllowSubReasons;
            }
            set
            {
                if ((this._AllowSubReasons != value))
                {
                    this.OnAllowSubReasonsChanging(value);
                    this.SendPropertyChanging();
                    this._AllowSubReasons = value;
                    this.SendPropertyChanged("AllowSubReasons");
                    this.OnAllowSubReasonsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ClaimReason_ClaimSubReason", Storage = "_ClaimSubReasons", ThisKey = "ClaimReasonId", OtherKey = "ClaimReasonId")]
        public EntitySet<ClaimSubReason> ClaimSubReasons
        {
            get
            {
                return this._ClaimSubReasons;
            }
            set
            {
                this._ClaimSubReasons.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ClaimCategory_ClaimReason", Storage = "_ClaimCategory", ThisKey = "ClaimCategoryId", OtherKey = "ClaimCategoryId", IsForeignKey = true)]
        public ClaimCategory ClaimCategory
        {
            get
            {
                return this._ClaimCategory.Entity;
            }
            set
            {
                ClaimCategory previousValue = this._ClaimCategory.Entity;
                if (((previousValue != value)
                            || (this._ClaimCategory.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ClaimCategory.Entity = null;
                        previousValue.ClaimReasons.Remove(this);
                    }
                    this._ClaimCategory.Entity = value;
                    if ((value != null))
                    {
                        value.ClaimReasons.Add(this);
                        this._ClaimCategoryId = value.ClaimCategoryId;
                    }
                    else
                    {
                        this._ClaimCategoryId = default(int);
                    }
                    this.SendPropertyChanged("ClaimCategory");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_ClaimSubReasons(ClaimSubReason entity)
        {
            this.SendPropertyChanging();
            entity.ClaimReason = this;
        }

        private void detach_ClaimSubReasons(ClaimSubReason entity)
        {
            this.SendPropertyChanging();
            entity.ClaimReason = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Store")]
    public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _STID;

        private string _STcName;

        private string _STcPhoneNumber;

        private string _STcFaxNumber;

        private System.Nullable<int> _STiUserID;

        private string _STcEANNumber;

        private string _STcCode;

        private string _STcAddress;

        private string _STcOwner;

        private string _STcManager;

        private System.Nullable<int> _STiParent;

        private System.Nullable<int> _STiIsLive;

        private System.Nullable<int> _STiDCID;

        private System.Nullable<System.DateTime> _STdCreateDate;

        private System.Nullable<int> _STiAction;

        private System.Nullable<System.DateTime> _STdActionDate;

        private string _STcVatNumber;

        private string _STcEmail;

        private string _STcFormattypeDesc;

        private string _STcCountryCode;

        private string _STcCalimsforSuppInd;

        private string _ClaimCaptureOverrideIndicator;

        private string _STcSequentialClaimNumber;

        private string _STcItemSocRqd;

        private string _STcExportCustInd;

        private string _STcExportVatInd;

        private System.Nullable<bool> _STcIsDcVendor;

        private EntityRef<User> _User;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSTIDChanging(int value);
        partial void OnSTIDChanged();
        partial void OnSTcNameChanging(string value);
        partial void OnSTcNameChanged();
        partial void OnSTcPhoneNumberChanging(string value);
        partial void OnSTcPhoneNumberChanged();
        partial void OnSTcFaxNumberChanging(string value);
        partial void OnSTcFaxNumberChanged();
        partial void OnSTiUserIDChanging(System.Nullable<int> value);
        partial void OnSTiUserIDChanged();
        partial void OnSTcEANNumberChanging(string value);
        partial void OnSTcEANNumberChanged();
        partial void OnSTcCodeChanging(string value);
        partial void OnSTcCodeChanged();
        partial void OnSTcAddressChanging(string value);
        partial void OnSTcAddressChanged();
        partial void OnSTcOwnerChanging(string value);
        partial void OnSTcOwnerChanged();
        partial void OnSTcManagerChanging(string value);
        partial void OnSTcManagerChanged();
        partial void OnSTiParentChanging(System.Nullable<int> value);
        partial void OnSTiParentChanged();
        partial void OnSTiIsLiveChanging(System.Nullable<int> value);
        partial void OnSTiIsLiveChanged();
        partial void OnSTiDCIDChanging(System.Nullable<int> value);
        partial void OnSTiDCIDChanged();
        partial void OnSTdCreateDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSTdCreateDateChanged();
        partial void OnSTiActionChanging(System.Nullable<int> value);
        partial void OnSTiActionChanged();
        partial void OnSTdActionDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSTdActionDateChanged();
        partial void OnSTcVatNumberChanging(string value);
        partial void OnSTcVatNumberChanged();
        partial void OnSTcEmailChanging(string value);
        partial void OnSTcEmailChanged();
        partial void OnSTcFormattypeDescChanging(string value);
        partial void OnSTcFormattypeDescChanged();
        partial void OnSTcCountryCodeChanging(string value);
        partial void OnSTcCountryCodeChanged();
        partial void OnSTcCalimsforSuppIndChanging(string value);
        partial void OnSTcCalimsforSuppIndChanged();
        partial void OnClaimCaptureOverrideIndicatorChanging(string value);
        partial void OnClaimCaptureOverrideIndicatorChanged();
        partial void OnSTcSequentialClaimNumberChanging(string value);
        partial void OnSTcSequentialClaimNumberChanged();
        partial void OnSTcItemSocRqdChanging(string value);
        partial void OnSTcItemSocRqdChanged();
        partial void OnSTcExportCustIndChanging(string value);
        partial void OnSTcExportCustIndChanged();
        partial void OnSTcExportVatIndChanging(string value);
        partial void OnSTcExportVatIndChanged();
        partial void OnSTcIsDcVendorChanging(System.Nullable<bool> value);
        partial void OnSTcIsDcVendorChanged();
        #endregion

        public Store()
        {
            this._User = default(EntityRef<User>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int STID
        {
            get
            {
                return this._STID;
            }
            set
            {
                if ((this._STID != value))
                {
                    this.OnSTIDChanging(value);
                    this.SendPropertyChanging();
                    this._STID = value;
                    this.SendPropertyChanged("STID");
                    this.OnSTIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcName", DbType = "VarChar(200)")]
        public string STcName
        {
            get
            {
                return this._STcName;
            }
            set
            {
                if ((this._STcName != value))
                {
                    this.OnSTcNameChanging(value);
                    this.SendPropertyChanging();
                    this._STcName = value;
                    this.SendPropertyChanged("STcName");
                    this.OnSTcNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcPhoneNumber", DbType = "VarChar(50)")]
        public string STcPhoneNumber
        {
            get
            {
                return this._STcPhoneNumber;
            }
            set
            {
                if ((this._STcPhoneNumber != value))
                {
                    this.OnSTcPhoneNumberChanging(value);
                    this.SendPropertyChanging();
                    this._STcPhoneNumber = value;
                    this.SendPropertyChanged("STcPhoneNumber");
                    this.OnSTcPhoneNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcFaxNumber", DbType = "VarChar(50)")]
        public string STcFaxNumber
        {
            get
            {
                return this._STcFaxNumber;
            }
            set
            {
                if ((this._STcFaxNumber != value))
                {
                    this.OnSTcFaxNumberChanging(value);
                    this.SendPropertyChanging();
                    this._STcFaxNumber = value;
                    this.SendPropertyChanged("STcFaxNumber");
                    this.OnSTcFaxNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STiUserID", DbType = "Int")]
        public System.Nullable<int> STiUserID
        {
            get
            {
                return this._STiUserID;
            }
            set
            {
                if ((this._STiUserID != value))
                {
                    if (this._User.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnSTiUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._STiUserID = value;
                    this.SendPropertyChanged("STiUserID");
                    this.OnSTiUserIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcEANNumber", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string STcEANNumber
        {
            get
            {
                return this._STcEANNumber;
            }
            set
            {
                if ((this._STcEANNumber != value))
                {
                    this.OnSTcEANNumberChanging(value);
                    this.SendPropertyChanging();
                    this._STcEANNumber = value;
                    this.SendPropertyChanged("STcEANNumber");
                    this.OnSTcEANNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcCode", DbType = "VarChar(50)")]
        public string STcCode
        {
            get
            {
                return this._STcCode;
            }
            set
            {
                if ((this._STcCode != value))
                {
                    this.OnSTcCodeChanging(value);
                    this.SendPropertyChanging();
                    this._STcCode = value;
                    this.SendPropertyChanged("STcCode");
                    this.OnSTcCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcAddress", DbType = "VarChar(500)")]
        public string STcAddress
        {
            get
            {
                return this._STcAddress;
            }
            set
            {
                if ((this._STcAddress != value))
                {
                    this.OnSTcAddressChanging(value);
                    this.SendPropertyChanging();
                    this._STcAddress = value;
                    this.SendPropertyChanged("STcAddress");
                    this.OnSTcAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcOwner", DbType = "VarChar(200)")]
        public string STcOwner
        {
            get
            {
                return this._STcOwner;
            }
            set
            {
                if ((this._STcOwner != value))
                {
                    this.OnSTcOwnerChanging(value);
                    this.SendPropertyChanging();
                    this._STcOwner = value;
                    this.SendPropertyChanged("STcOwner");
                    this.OnSTcOwnerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcManager", DbType = "VarChar(200)")]
        public string STcManager
        {
            get
            {
                return this._STcManager;
            }
            set
            {
                if ((this._STcManager != value))
                {
                    this.OnSTcManagerChanging(value);
                    this.SendPropertyChanging();
                    this._STcManager = value;
                    this.SendPropertyChanged("STcManager");
                    this.OnSTcManagerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STiParent", DbType = "Int")]
        public System.Nullable<int> STiParent
        {
            get
            {
                return this._STiParent;
            }
            set
            {
                if ((this._STiParent != value))
                {
                    this.OnSTiParentChanging(value);
                    this.SendPropertyChanging();
                    this._STiParent = value;
                    this.SendPropertyChanged("STiParent");
                    this.OnSTiParentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STiIsLive", DbType = "Int")]
        public System.Nullable<int> STiIsLive
        {
            get
            {
                return this._STiIsLive;
            }
            set
            {
                if ((this._STiIsLive != value))
                {
                    this.OnSTiIsLiveChanging(value);
                    this.SendPropertyChanging();
                    this._STiIsLive = value;
                    this.SendPropertyChanged("STiIsLive");
                    this.OnSTiIsLiveChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STiDCID", DbType = "Int")]
        public System.Nullable<int> STiDCID
        {
            get
            {
                return this._STiDCID;
            }
            set
            {
                if ((this._STiDCID != value))
                {
                    this.OnSTiDCIDChanging(value);
                    this.SendPropertyChanging();
                    this._STiDCID = value;
                    this.SendPropertyChanged("STiDCID");
                    this.OnSTiDCIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STdCreateDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> STdCreateDate
        {
            get
            {
                return this._STdCreateDate;
            }
            set
            {
                if ((this._STdCreateDate != value))
                {
                    this.OnSTdCreateDateChanging(value);
                    this.SendPropertyChanging();
                    this._STdCreateDate = value;
                    this.SendPropertyChanged("STdCreateDate");
                    this.OnSTdCreateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STiAction", DbType = "Int")]
        public System.Nullable<int> STiAction
        {
            get
            {
                return this._STiAction;
            }
            set
            {
                if ((this._STiAction != value))
                {
                    this.OnSTiActionChanging(value);
                    this.SendPropertyChanging();
                    this._STiAction = value;
                    this.SendPropertyChanged("STiAction");
                    this.OnSTiActionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STdActionDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> STdActionDate
        {
            get
            {
                return this._STdActionDate;
            }
            set
            {
                if ((this._STdActionDate != value))
                {
                    this.OnSTdActionDateChanging(value);
                    this.SendPropertyChanging();
                    this._STdActionDate = value;
                    this.SendPropertyChanged("STdActionDate");
                    this.OnSTdActionDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcVatNumber", DbType = "VarChar(50)")]
        public string STcVatNumber
        {
            get
            {
                return this._STcVatNumber;
            }
            set
            {
                if ((this._STcVatNumber != value))
                {
                    this.OnSTcVatNumberChanging(value);
                    this.SendPropertyChanging();
                    this._STcVatNumber = value;
                    this.SendPropertyChanged("STcVatNumber");
                    this.OnSTcVatNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcEmail", DbType = "VarChar(100)")]
        public string STcEmail
        {
            get
            {
                return this._STcEmail;
            }
            set
            {
                if ((this._STcEmail != value))
                {
                    this.OnSTcEmailChanging(value);
                    this.SendPropertyChanging();
                    this._STcEmail = value;
                    this.SendPropertyChanged("STcEmail");
                    this.OnSTcEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcFormattypeDesc", DbType = "VarChar(50)")]
        public string STcFormattypeDesc
        {
            get
            {
                return this._STcFormattypeDesc;
            }
            set
            {
                if ((this._STcFormattypeDesc != value))
                {
                    this.OnSTcFormattypeDescChanging(value);
                    this.SendPropertyChanging();
                    this._STcFormattypeDesc = value;
                    this.SendPropertyChanged("STcFormattypeDesc");
                    this.OnSTcFormattypeDescChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcCountryCode", DbType = "VarChar(50)")]
        public string STcCountryCode
        {
            get
            {
                return this._STcCountryCode;
            }
            set
            {
                if ((this._STcCountryCode != value))
                {
                    this.OnSTcCountryCodeChanging(value);
                    this.SendPropertyChanging();
                    this._STcCountryCode = value;
                    this.SendPropertyChanged("STcCountryCode");
                    this.OnSTcCountryCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcCalimsforSuppInd", DbType = "VarChar(50)")]
        public string STcCalimsforSuppInd
        {
            get
            {
                return this._STcCalimsforSuppInd;
            }
            set
            {
                if ((this._STcCalimsforSuppInd != value))
                {
                    this.OnSTcCalimsforSuppIndChanging(value);
                    this.SendPropertyChanging();
                    this._STcCalimsforSuppInd = value;
                    this.SendPropertyChanged("STcCalimsforSuppInd");
                    this.OnSTcCalimsforSuppIndChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimCaptureOverrideIndicator", DbType = "NChar(10)")]
        public string ClaimCaptureOverrideIndicator
        {
            get
            {
                return this._ClaimCaptureOverrideIndicator;
            }
            set
            {
                if ((this._ClaimCaptureOverrideIndicator != value))
                {
                    this.OnClaimCaptureOverrideIndicatorChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimCaptureOverrideIndicator = value;
                    this.SendPropertyChanged("ClaimCaptureOverrideIndicator");
                    this.OnClaimCaptureOverrideIndicatorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcSequentialClaimNumber", DbType = "VarChar(6)")]
        public string STcSequentialClaimNumber
        {
            get
            {
                return this._STcSequentialClaimNumber;
            }
            set
            {
                if ((this._STcSequentialClaimNumber != value))
                {
                    this.OnSTcSequentialClaimNumberChanging(value);
                    this.SendPropertyChanging();
                    this._STcSequentialClaimNumber = value;
                    this.SendPropertyChanged("STcSequentialClaimNumber");
                    this.OnSTcSequentialClaimNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcItemSocRqd", DbType = "VarChar(50)")]
        public string STcItemSocRqd
        {
            get
            {
                return this._STcItemSocRqd;
            }
            set
            {
                if ((this._STcItemSocRqd != value))
                {
                    this.OnSTcItemSocRqdChanging(value);
                    this.SendPropertyChanging();
                    this._STcItemSocRqd = value;
                    this.SendPropertyChanged("STcItemSocRqd");
                    this.OnSTcItemSocRqdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcExportCustInd", DbType = "VarChar(50)")]
        public string STcExportCustInd
        {
            get
            {
                return this._STcExportCustInd;
            }
            set
            {
                if ((this._STcExportCustInd != value))
                {
                    this.OnSTcExportCustIndChanging(value);
                    this.SendPropertyChanging();
                    this._STcExportCustInd = value;
                    this.SendPropertyChanged("STcExportCustInd");
                    this.OnSTcExportCustIndChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcExportVatInd", DbType = "VarChar(50)")]
        public string STcExportVatInd
        {
            get
            {
                return this._STcExportVatInd;
            }
            set
            {
                if ((this._STcExportVatInd != value))
                {
                    this.OnSTcExportVatIndChanging(value);
                    this.SendPropertyChanging();
                    this._STcExportVatInd = value;
                    this.SendPropertyChanged("STcExportVatInd");
                    this.OnSTcExportVatIndChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_STcIsDcVendor", DbType = "Bit")]
        public System.Nullable<bool> STcIsDcVendor
        {
            get
            {
                return this._STcIsDcVendor;
            }
            set
            {
                if ((this._STcIsDcVendor != value))
                {
                    this.OnSTcIsDcVendorChanging(value);
                    this.SendPropertyChanging();
                    this._STcIsDcVendor = value;
                    this.SendPropertyChanged("STcIsDcVendor");
                    this.OnSTcIsDcVendorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "User_Store", Storage = "_User", ThisKey = "STiUserID", OtherKey = "USID", IsForeignKey = true)]
        public User User
        {
            get
            {
                return this._User.Entity;
            }
            set
            {
                User previousValue = this._User.Entity;
                if (((previousValue != value)
                            || (this._User.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._User.Entity = null;
                        previousValue.Stores.Remove(this);
                    }
                    this._User.Entity = value;
                    if ((value != null))
                    {
                        value.Stores.Add(this);
                        this._STiUserID = value.USID;
                    }
                    else
                    {
                        this._STiUserID = default(Nullable<int>);
                    }
                    this.SendPropertyChanged("User");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Users")]
    public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _USID;

        private string _UScUserName;

        private string _UScPassword;

        private int _USiType;

        private int _USiPermission;

        private int _USiChangePwd;

        private int _USiDisable;

        private System.Nullable<int> _USiDCID;

        private System.Nullable<int> _USiParent;

        private System.Nullable<int> _IsSuperUser;

        private System.Nullable<bool> _IsWarehouseUser;

        private EntitySet<Store> _Stores;

        private EntitySet<DC> _DCs;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnUSIDChanging(int value);
        partial void OnUSIDChanged();
        partial void OnUScUserNameChanging(string value);
        partial void OnUScUserNameChanged();
        partial void OnUScPasswordChanging(string value);
        partial void OnUScPasswordChanged();
        partial void OnUSiTypeChanging(int value);
        partial void OnUSiTypeChanged();
        partial void OnUSiPermissionChanging(int value);
        partial void OnUSiPermissionChanged();
        partial void OnUSiChangePwdChanging(int value);
        partial void OnUSiChangePwdChanged();
        partial void OnUSiDisableChanging(int value);
        partial void OnUSiDisableChanged();
        partial void OnUSiDCIDChanging(System.Nullable<int> value);
        partial void OnUSiDCIDChanged();
        partial void OnUSiParentChanging(System.Nullable<int> value);
        partial void OnUSiParentChanged();
        partial void OnIsSuperUserChanging(System.Nullable<int> value);
        partial void OnIsSuperUserChanged();
        partial void OnIsWarehouseUserChanging(System.Nullable<bool> value);
        partial void OnIsWarehouseUserChanged();
        #endregion

        public User()
        {
            this._Stores = new EntitySet<Store>(new Action<Store>(this.attach_Stores), new Action<Store>(this.detach_Stores));
            this._DCs = new EntitySet<DC>(new Action<DC>(this.attach_DCs), new Action<DC>(this.detach_DCs));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int USID
        {
            get
            {
                return this._USID;
            }
            set
            {
                if ((this._USID != value))
                {
                    this.OnUSIDChanging(value);
                    this.SendPropertyChanging();
                    this._USID = value;
                    this.SendPropertyChanged("USID");
                    this.OnUSIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UScUserName", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string UScUserName
        {
            get
            {
                return this._UScUserName;
            }
            set
            {
                if ((this._UScUserName != value))
                {
                    this.OnUScUserNameChanging(value);
                    this.SendPropertyChanging();
                    this._UScUserName = value;
                    this.SendPropertyChanged("UScUserName");
                    this.OnUScUserNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UScPassword", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string UScPassword
        {
            get
            {
                return this._UScPassword;
            }
            set
            {
                if ((this._UScPassword != value))
                {
                    this.OnUScPasswordChanging(value);
                    this.SendPropertyChanging();
                    this._UScPassword = value;
                    this.SendPropertyChanged("UScPassword");
                    this.OnUScPasswordChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USiType", DbType = "Int NOT NULL")]
        public int USiType
        {
            get
            {
                return this._USiType;
            }
            set
            {
                if ((this._USiType != value))
                {
                    this.OnUSiTypeChanging(value);
                    this.SendPropertyChanging();
                    this._USiType = value;
                    this.SendPropertyChanged("USiType");
                    this.OnUSiTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USiPermission", DbType = "Int NOT NULL")]
        public int USiPermission
        {
            get
            {
                return this._USiPermission;
            }
            set
            {
                if ((this._USiPermission != value))
                {
                    this.OnUSiPermissionChanging(value);
                    this.SendPropertyChanging();
                    this._USiPermission = value;
                    this.SendPropertyChanged("USiPermission");
                    this.OnUSiPermissionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USiChangePwd", DbType = "Int NOT NULL")]
        public int USiChangePwd
        {
            get
            {
                return this._USiChangePwd;
            }
            set
            {
                if ((this._USiChangePwd != value))
                {
                    this.OnUSiChangePwdChanging(value);
                    this.SendPropertyChanging();
                    this._USiChangePwd = value;
                    this.SendPropertyChanged("USiChangePwd");
                    this.OnUSiChangePwdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USiDisable", DbType = "Int NOT NULL")]
        public int USiDisable
        {
            get
            {
                return this._USiDisable;
            }
            set
            {
                if ((this._USiDisable != value))
                {
                    this.OnUSiDisableChanging(value);
                    this.SendPropertyChanging();
                    this._USiDisable = value;
                    this.SendPropertyChanged("USiDisable");
                    this.OnUSiDisableChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USiDCID", DbType = "Int")]
        public System.Nullable<int> USiDCID
        {
            get
            {
                return this._USiDCID;
            }
            set
            {
                if ((this._USiDCID != value))
                {
                    this.OnUSiDCIDChanging(value);
                    this.SendPropertyChanging();
                    this._USiDCID = value;
                    this.SendPropertyChanged("USiDCID");
                    this.OnUSiDCIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_USiParent", DbType = "Int")]
        public System.Nullable<int> USiParent
        {
            get
            {
                return this._USiParent;
            }
            set
            {
                if ((this._USiParent != value))
                {
                    this.OnUSiParentChanging(value);
                    this.SendPropertyChanging();
                    this._USiParent = value;
                    this.SendPropertyChanged("USiParent");
                    this.OnUSiParentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsSuperUser", DbType = "Int")]
        public System.Nullable<int> IsSuperUser
        {
            get
            {
                return this._IsSuperUser;
            }
            set
            {
                if ((this._IsSuperUser != value))
                {
                    this.OnIsSuperUserChanging(value);
                    this.SendPropertyChanging();
                    this._IsSuperUser = value;
                    this.SendPropertyChanged("IsSuperUser");
                    this.OnIsSuperUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsWarehouseUser", DbType = "Bit")]
        public System.Nullable<bool> IsWarehouseUser
        {
            get
            {
                return this._IsWarehouseUser;
            }
            set
            {
                if ((this._IsWarehouseUser != value))
                {
                    this.OnIsWarehouseUserChanging(value);
                    this.SendPropertyChanging();
                    this._IsWarehouseUser = value;
                    this.SendPropertyChanged("IsWarehouseUser");
                    this.OnIsWarehouseUserChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "User_Store", Storage = "_Stores", ThisKey = "USID", OtherKey = "STiUserID")]
        public EntitySet<Store> Stores
        {
            get
            {
                return this._Stores;
            }
            set
            {
                this._Stores.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "User_DC", Storage = "_DCs", ThisKey = "USID", OtherKey = "DCiUserID")]
        public EntitySet<DC> DCs
        {
            get
            {
                return this._DCs;
            }
            set
            {
                this._DCs.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Stores(Store entity)
        {
            this.SendPropertyChanging();
            entity.User = this;
        }

        private void detach_Stores(Store entity)
        {
            this.SendPropertyChanging();
            entity.User = null;
        }

        private void attach_DCs(DC entity)
        {
            this.SendPropertyChanging();
            entity.User = this;
        }

        private void detach_DCs(DC entity)
        {
            this.SendPropertyChanging();
            entity.User = null;
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Supplier")]
    public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _SPID;

        private string _SPcName;

        private string _SPcAddress;

        private System.Nullable<int> _SPiUserID;

        private string _SPcEANNumber;

        private string _SPcVatNumber;

        private System.Nullable<int> _SPiParent;

        private System.Guid _msrepl_tran_version;

        private System.Nullable<int> _SPiIsXML;

        private string _SPcFuncEmail;

        private System.Nullable<int> _SPiMailAlert;

        private System.Nullable<int> _SPiClmRoute;

        private string _Comments;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnSPIDChanging(int value);
        partial void OnSPIDChanged();
        partial void OnSPcNameChanging(string value);
        partial void OnSPcNameChanged();
        partial void OnSPcAddressChanging(string value);
        partial void OnSPcAddressChanged();
        partial void OnSPiUserIDChanging(System.Nullable<int> value);
        partial void OnSPiUserIDChanged();
        partial void OnSPcEANNumberChanging(string value);
        partial void OnSPcEANNumberChanged();
        partial void OnSPcVatNumberChanging(string value);
        partial void OnSPcVatNumberChanged();
        partial void OnSPiParentChanging(System.Nullable<int> value);
        partial void OnSPiParentChanged();
        partial void Onmsrepl_tran_versionChanging(System.Guid value);
        partial void Onmsrepl_tran_versionChanged();
        partial void OnSPiIsXMLChanging(System.Nullable<int> value);
        partial void OnSPiIsXMLChanged();
        partial void OnSPcFuncEmailChanging(string value);
        partial void OnSPcFuncEmailChanged();
        partial void OnSPiMailAlertChanging(System.Nullable<int> value);
        partial void OnSPiMailAlertChanged();
        partial void OnSPiClmRouteChanging(System.Nullable<int> value);
        partial void OnSPiClmRouteChanged();
        partial void OnCommentsChanging(string value);
        partial void OnCommentsChanged();
        #endregion

        public Supplier()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int SPID
        {
            get
            {
                return this._SPID;
            }
            set
            {
                if ((this._SPID != value))
                {
                    this.OnSPIDChanging(value);
                    this.SendPropertyChanging();
                    this._SPID = value;
                    this.SendPropertyChanged("SPID");
                    this.OnSPIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPcName", DbType = "VarChar(50)")]
        public string SPcName
        {
            get
            {
                return this._SPcName;
            }
            set
            {
                if ((this._SPcName != value))
                {
                    this.OnSPcNameChanging(value);
                    this.SendPropertyChanging();
                    this._SPcName = value;
                    this.SendPropertyChanged("SPcName");
                    this.OnSPcNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPcAddress", DbType = "VarChar(200)")]
        public string SPcAddress
        {
            get
            {
                return this._SPcAddress;
            }
            set
            {
                if ((this._SPcAddress != value))
                {
                    this.OnSPcAddressChanging(value);
                    this.SendPropertyChanging();
                    this._SPcAddress = value;
                    this.SendPropertyChanged("SPcAddress");
                    this.OnSPcAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPiUserID", DbType = "Int")]
        public System.Nullable<int> SPiUserID
        {
            get
            {
                return this._SPiUserID;
            }
            set
            {
                if ((this._SPiUserID != value))
                {
                    this.OnSPiUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._SPiUserID = value;
                    this.SendPropertyChanged("SPiUserID");
                    this.OnSPiUserIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPcEANNumber", DbType = "VarChar(50)")]
        public string SPcEANNumber
        {
            get
            {
                return this._SPcEANNumber;
            }
            set
            {
                if ((this._SPcEANNumber != value))
                {
                    this.OnSPcEANNumberChanging(value);
                    this.SendPropertyChanging();
                    this._SPcEANNumber = value;
                    this.SendPropertyChanged("SPcEANNumber");
                    this.OnSPcEANNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPcVatNumber", DbType = "VarChar(50)")]
        public string SPcVatNumber
        {
            get
            {
                return this._SPcVatNumber;
            }
            set
            {
                if ((this._SPcVatNumber != value))
                {
                    this.OnSPcVatNumberChanging(value);
                    this.SendPropertyChanging();
                    this._SPcVatNumber = value;
                    this.SendPropertyChanged("SPcVatNumber");
                    this.OnSPcVatNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPiParent", DbType = "Int")]
        public System.Nullable<int> SPiParent
        {
            get
            {
                return this._SPiParent;
            }
            set
            {
                if ((this._SPiParent != value))
                {
                    this.OnSPiParentChanging(value);
                    this.SendPropertyChanging();
                    this._SPiParent = value;
                    this.SendPropertyChanged("SPiParent");
                    this.OnSPiParentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_msrepl_tran_version", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid msrepl_tran_version
        {
            get
            {
                return this._msrepl_tran_version;
            }
            set
            {
                if ((this._msrepl_tran_version != value))
                {
                    this.Onmsrepl_tran_versionChanging(value);
                    this.SendPropertyChanging();
                    this._msrepl_tran_version = value;
                    this.SendPropertyChanged("msrepl_tran_version");
                    this.Onmsrepl_tran_versionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPiIsXML", DbType = "Int")]
        public System.Nullable<int> SPiIsXML
        {
            get
            {
                return this._SPiIsXML;
            }
            set
            {
                if ((this._SPiIsXML != value))
                {
                    this.OnSPiIsXMLChanging(value);
                    this.SendPropertyChanging();
                    this._SPiIsXML = value;
                    this.SendPropertyChanged("SPiIsXML");
                    this.OnSPiIsXMLChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPcFuncEmail", DbType = "VarChar(MAX)")]
        public string SPcFuncEmail
        {
            get
            {
                return this._SPcFuncEmail;
            }
            set
            {
                if ((this._SPcFuncEmail != value))
                {
                    this.OnSPcFuncEmailChanging(value);
                    this.SendPropertyChanging();
                    this._SPcFuncEmail = value;
                    this.SendPropertyChanged("SPcFuncEmail");
                    this.OnSPcFuncEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPiMailAlert", DbType = "Int")]
        public System.Nullable<int> SPiMailAlert
        {
            get
            {
                return this._SPiMailAlert;
            }
            set
            {
                if ((this._SPiMailAlert != value))
                {
                    this.OnSPiMailAlertChanging(value);
                    this.SendPropertyChanging();
                    this._SPiMailAlert = value;
                    this.SendPropertyChanged("SPiMailAlert");
                    this.OnSPiMailAlertChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPiClmRoute", DbType = "Int")]
        public System.Nullable<int> SPiClmRoute
        {
            get
            {
                return this._SPiClmRoute;
            }
            set
            {
                if ((this._SPiClmRoute != value))
                {
                    this.OnSPiClmRouteChanging(value);
                    this.SendPropertyChanging();
                    this._SPiClmRoute = value;
                    this.SendPropertyChanged("SPiClmRoute");
                    this.OnSPiClmRouteChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comments", DbType = "NVarChar(MAX)")]
        public string Comments
        {
            get
            {
                return this._Comments;
            }
            set
            {
                if ((this._Comments != value))
                {
                    this.OnCommentsChanging(value);
                    this.SendPropertyChanging();
                    this._Comments = value;
                    this.SendPropertyChanged("Comments");
                    this.OnCommentsChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.DC")]
    public partial class DC : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _DCID;

        private string _DCcName;

        private string _DCcRegNumber;

        private string _DCcVatNumber;

        private string _DCcAddress;

        private string _DCcPostAddress;

        private string _DCcPhoneNum;

        private string _DCcFaxNum;

        private string _DCcEANNumber;

        private int _DCiUserID;

        private string _DCcEmail;

        private System.Nullable<int> _DCiParent;

        private System.Guid _msrepl_tran_version;

        private string _DCcX40EAN;

        private System.Nullable<bool> _AllowCaptureClaimForSupplier;

        private System.Nullable<bool> _AllowCaptureClaimForDC;

        private string _DCEmailAddressForDCClaims;

        private System.Nullable<bool> _AllowDCsToMaintainSupplierClaims;

        private System.Nullable<bool> _AllowClaimCaptureForSupplier;

        private System.Nullable<bool> _AllowClaimCaptureForAdminDC;

        private string _DCEmailAddressForAdminDCClaims;

        private string _DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims;

        private System.Nullable<bool> _AllowDCUploadForceCredit;

        private System.Nullable<bool> _IsDCAllowedToUploadForceCredits;

        private System.Nullable<bool> _IsDCToCaptureAdminDCClaims;

        private string _WebOrderNotification;

        private string _WebCatalogRequestNotification;

        private System.Nullable<bool> _AllowClaimEmails;

        private System.Nullable<bool> _AllowDCManageBuildIt;

        private System.Nullable<decimal> _WarehouseClaimTollerence;

        private System.Nullable<decimal> _SupplierClaimTollerence;

        private System.Nullable<decimal> _BuilditDcClaimTollerance;

        private System.Nullable<decimal> _DcVendorClaimTollerance;

        private string _DcSuffix;

        private string _WarehouseEan;

        private EntityRef<User> _User;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnDCIDChanging(int value);
        partial void OnDCIDChanged();
        partial void OnDCcNameChanging(string value);
        partial void OnDCcNameChanged();
        partial void OnDCcRegNumberChanging(string value);
        partial void OnDCcRegNumberChanged();
        partial void OnDCcVatNumberChanging(string value);
        partial void OnDCcVatNumberChanged();
        partial void OnDCcAddressChanging(string value);
        partial void OnDCcAddressChanged();
        partial void OnDCcPostAddressChanging(string value);
        partial void OnDCcPostAddressChanged();
        partial void OnDCcPhoneNumChanging(string value);
        partial void OnDCcPhoneNumChanged();
        partial void OnDCcFaxNumChanging(string value);
        partial void OnDCcFaxNumChanged();
        partial void OnDCcEANNumberChanging(string value);
        partial void OnDCcEANNumberChanged();
        partial void OnDCiUserIDChanging(int value);
        partial void OnDCiUserIDChanged();
        partial void OnDCcEmailChanging(string value);
        partial void OnDCcEmailChanged();
        partial void OnDCiParentChanging(System.Nullable<int> value);
        partial void OnDCiParentChanged();
        partial void Onmsrepl_tran_versionChanging(System.Guid value);
        partial void Onmsrepl_tran_versionChanged();
        partial void OnDCcX40EANChanging(string value);
        partial void OnDCcX40EANChanged();
        partial void OnAllowCaptureClaimForSupplierChanging(System.Nullable<bool> value);
        partial void OnAllowCaptureClaimForSupplierChanged();
        partial void OnAllowCaptureClaimForDCChanging(System.Nullable<bool> value);
        partial void OnAllowCaptureClaimForDCChanged();
        partial void OnDCEmailAddressForDCClaimsChanging(string value);
        partial void OnDCEmailAddressForDCClaimsChanged();
        partial void OnAllowDCsToMaintainSupplierClaimsChanging(System.Nullable<bool> value);
        partial void OnAllowDCsToMaintainSupplierClaimsChanged();
        partial void OnAllowClaimCaptureForSupplierChanging(System.Nullable<bool> value);
        partial void OnAllowClaimCaptureForSupplierChanged();
        partial void OnAllowClaimCaptureForAdminDCChanging(System.Nullable<bool> value);
        partial void OnAllowClaimCaptureForAdminDCChanged();
        partial void OnDCEmailAddressForAdminDCClaimsChanging(string value);
        partial void OnDCEmailAddressForAdminDCClaimsChanged();
        partial void OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanging(string value);
        partial void OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanged();
        partial void OnAllowDCUploadForceCreditChanging(System.Nullable<bool> value);
        partial void OnAllowDCUploadForceCreditChanged();
        partial void OnIsDCAllowedToUploadForceCreditsChanging(System.Nullable<bool> value);
        partial void OnIsDCAllowedToUploadForceCreditsChanged();
        partial void OnIsDCToCaptureAdminDCClaimsChanging(System.Nullable<bool> value);
        partial void OnIsDCToCaptureAdminDCClaimsChanged();
        partial void OnWebOrderNotificationChanging(string value);
        partial void OnWebOrderNotificationChanged();
        partial void OnWebCatalogRequestNotificationChanging(string value);
        partial void OnWebCatalogRequestNotificationChanged();
        partial void OnAllowClaimEmailsChanging(System.Nullable<bool> value);
        partial void OnAllowClaimEmailsChanged();
        partial void OnAllowDCManageBuildItChanging(System.Nullable<bool> value);
        partial void OnAllowDCManageBuildItChanged();
        partial void OnWarehouseClaimTollerenceChanging(System.Nullable<decimal> value);
        partial void OnWarehouseClaimTollerenceChanged();
        partial void OnSupplierClaimTollerenceChanging(System.Nullable<decimal> value);
        partial void OnSupplierClaimTollerenceChanged();
        partial void OnBuilditDcClaimTolleranceChanging(System.Nullable<decimal> value);
        partial void OnBuilditDcClaimTolleranceChanged();
        partial void OnDcVendorClaimTolleranceChanging(System.Nullable<decimal> value);
        partial void OnDcVendorClaimTolleranceChanged();
        partial void OnDcSuffixChanging(string value);
        partial void OnDcSuffixChanged();
        partial void OnWarehouseEanChanging(string value);
        partial void OnWarehouseEanChanged();
        #endregion

        public DC()
        {
            this._User = default(EntityRef<User>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int DCID
        {
            get
            {
                return this._DCID;
            }
            set
            {
                if ((this._DCID != value))
                {
                    this.OnDCIDChanging(value);
                    this.SendPropertyChanging();
                    this._DCID = value;
                    this.SendPropertyChanged("DCID");
                    this.OnDCIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcName", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string DCcName
        {
            get
            {
                return this._DCcName;
            }
            set
            {
                if ((this._DCcName != value))
                {
                    this.OnDCcNameChanging(value);
                    this.SendPropertyChanging();
                    this._DCcName = value;
                    this.SendPropertyChanged("DCcName");
                    this.OnDCcNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcRegNumber", DbType = "VarChar(50)")]
        public string DCcRegNumber
        {
            get
            {
                return this._DCcRegNumber;
            }
            set
            {
                if ((this._DCcRegNumber != value))
                {
                    this.OnDCcRegNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DCcRegNumber = value;
                    this.SendPropertyChanged("DCcRegNumber");
                    this.OnDCcRegNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcVatNumber", DbType = "VarChar(50)")]
        public string DCcVatNumber
        {
            get
            {
                return this._DCcVatNumber;
            }
            set
            {
                if ((this._DCcVatNumber != value))
                {
                    this.OnDCcVatNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DCcVatNumber = value;
                    this.SendPropertyChanged("DCcVatNumber");
                    this.OnDCcVatNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcAddress", DbType = "VarChar(500)")]
        public string DCcAddress
        {
            get
            {
                return this._DCcAddress;
            }
            set
            {
                if ((this._DCcAddress != value))
                {
                    this.OnDCcAddressChanging(value);
                    this.SendPropertyChanging();
                    this._DCcAddress = value;
                    this.SendPropertyChanged("DCcAddress");
                    this.OnDCcAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcPostAddress", DbType = "VarChar(50)")]
        public string DCcPostAddress
        {
            get
            {
                return this._DCcPostAddress;
            }
            set
            {
                if ((this._DCcPostAddress != value))
                {
                    this.OnDCcPostAddressChanging(value);
                    this.SendPropertyChanging();
                    this._DCcPostAddress = value;
                    this.SendPropertyChanged("DCcPostAddress");
                    this.OnDCcPostAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcPhoneNum", DbType = "VarChar(50)")]
        public string DCcPhoneNum
        {
            get
            {
                return this._DCcPhoneNum;
            }
            set
            {
                if ((this._DCcPhoneNum != value))
                {
                    this.OnDCcPhoneNumChanging(value);
                    this.SendPropertyChanging();
                    this._DCcPhoneNum = value;
                    this.SendPropertyChanged("DCcPhoneNum");
                    this.OnDCcPhoneNumChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcFaxNum", DbType = "VarChar(50)")]
        public string DCcFaxNum
        {
            get
            {
                return this._DCcFaxNum;
            }
            set
            {
                if ((this._DCcFaxNum != value))
                {
                    this.OnDCcFaxNumChanging(value);
                    this.SendPropertyChanging();
                    this._DCcFaxNum = value;
                    this.SendPropertyChanged("DCcFaxNum");
                    this.OnDCcFaxNumChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcEANNumber", DbType = "VarChar(50)")]
        public string DCcEANNumber
        {
            get
            {
                return this._DCcEANNumber;
            }
            set
            {
                if ((this._DCcEANNumber != value))
                {
                    this.OnDCcEANNumberChanging(value);
                    this.SendPropertyChanging();
                    this._DCcEANNumber = value;
                    this.SendPropertyChanged("DCcEANNumber");
                    this.OnDCcEANNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCiUserID", DbType = "Int NOT NULL")]
        public int DCiUserID
        {
            get
            {
                return this._DCiUserID;
            }
            set
            {
                if ((this._DCiUserID != value))
                {
                    if (this._User.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnDCiUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._DCiUserID = value;
                    this.SendPropertyChanged("DCiUserID");
                    this.OnDCiUserIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcEmail", DbType = "VarChar(500)")]
        public string DCcEmail
        {
            get
            {
                return this._DCcEmail;
            }
            set
            {
                if ((this._DCcEmail != value))
                {
                    this.OnDCcEmailChanging(value);
                    this.SendPropertyChanging();
                    this._DCcEmail = value;
                    this.SendPropertyChanged("DCcEmail");
                    this.OnDCcEmailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCiParent", DbType = "Int")]
        public System.Nullable<int> DCiParent
        {
            get
            {
                return this._DCiParent;
            }
            set
            {
                if ((this._DCiParent != value))
                {
                    this.OnDCiParentChanging(value);
                    this.SendPropertyChanging();
                    this._DCiParent = value;
                    this.SendPropertyChanged("DCiParent");
                    this.OnDCiParentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_msrepl_tran_version", DbType = "UniqueIdentifier NOT NULL")]
        public System.Guid msrepl_tran_version
        {
            get
            {
                return this._msrepl_tran_version;
            }
            set
            {
                if ((this._msrepl_tran_version != value))
                {
                    this.Onmsrepl_tran_versionChanging(value);
                    this.SendPropertyChanging();
                    this._msrepl_tran_version = value;
                    this.SendPropertyChanged("msrepl_tran_version");
                    this.Onmsrepl_tran_versionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCcX40EAN", DbType = "VarChar(50)")]
        public string DCcX40EAN
        {
            get
            {
                return this._DCcX40EAN;
            }
            set
            {
                if ((this._DCcX40EAN != value))
                {
                    this.OnDCcX40EANChanging(value);
                    this.SendPropertyChanging();
                    this._DCcX40EAN = value;
                    this.SendPropertyChanged("DCcX40EAN");
                    this.OnDCcX40EANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowCaptureClaimForSupplier", DbType = "Bit")]
        public System.Nullable<bool> AllowCaptureClaimForSupplier
        {
            get
            {
                return this._AllowCaptureClaimForSupplier;
            }
            set
            {
                if ((this._AllowCaptureClaimForSupplier != value))
                {
                    this.OnAllowCaptureClaimForSupplierChanging(value);
                    this.SendPropertyChanging();
                    this._AllowCaptureClaimForSupplier = value;
                    this.SendPropertyChanged("AllowCaptureClaimForSupplier");
                    this.OnAllowCaptureClaimForSupplierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowCaptureClaimForDC", DbType = "Bit")]
        public System.Nullable<bool> AllowCaptureClaimForDC
        {
            get
            {
                return this._AllowCaptureClaimForDC;
            }
            set
            {
                if ((this._AllowCaptureClaimForDC != value))
                {
                    this.OnAllowCaptureClaimForDCChanging(value);
                    this.SendPropertyChanging();
                    this._AllowCaptureClaimForDC = value;
                    this.SendPropertyChanged("AllowCaptureClaimForDC");
                    this.OnAllowCaptureClaimForDCChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCEmailAddressForDCClaims", DbType = "VarChar(50)")]
        public string DCEmailAddressForDCClaims
        {
            get
            {
                return this._DCEmailAddressForDCClaims;
            }
            set
            {
                if ((this._DCEmailAddressForDCClaims != value))
                {
                    this.OnDCEmailAddressForDCClaimsChanging(value);
                    this.SendPropertyChanging();
                    this._DCEmailAddressForDCClaims = value;
                    this.SendPropertyChanged("DCEmailAddressForDCClaims");
                    this.OnDCEmailAddressForDCClaimsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowDCsToMaintainSupplierClaims", DbType = "Bit")]
        public System.Nullable<bool> AllowDCsToMaintainSupplierClaims
        {
            get
            {
                return this._AllowDCsToMaintainSupplierClaims;
            }
            set
            {
                if ((this._AllowDCsToMaintainSupplierClaims != value))
                {
                    this.OnAllowDCsToMaintainSupplierClaimsChanging(value);
                    this.SendPropertyChanging();
                    this._AllowDCsToMaintainSupplierClaims = value;
                    this.SendPropertyChanged("AllowDCsToMaintainSupplierClaims");
                    this.OnAllowDCsToMaintainSupplierClaimsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowClaimCaptureForSupplier", DbType = "Bit")]
        public System.Nullable<bool> AllowClaimCaptureForSupplier
        {
            get
            {
                return this._AllowClaimCaptureForSupplier;
            }
            set
            {
                if ((this._AllowClaimCaptureForSupplier != value))
                {
                    this.OnAllowClaimCaptureForSupplierChanging(value);
                    this.SendPropertyChanging();
                    this._AllowClaimCaptureForSupplier = value;
                    this.SendPropertyChanged("AllowClaimCaptureForSupplier");
                    this.OnAllowClaimCaptureForSupplierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowClaimCaptureForAdminDC", DbType = "Bit")]
        public System.Nullable<bool> AllowClaimCaptureForAdminDC
        {
            get
            {
                return this._AllowClaimCaptureForAdminDC;
            }
            set
            {
                if ((this._AllowClaimCaptureForAdminDC != value))
                {
                    this.OnAllowClaimCaptureForAdminDCChanging(value);
                    this.SendPropertyChanging();
                    this._AllowClaimCaptureForAdminDC = value;
                    this.SendPropertyChanged("AllowClaimCaptureForAdminDC");
                    this.OnAllowClaimCaptureForAdminDCChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCEmailAddressForAdminDCClaims", DbType = "VarChar(100)")]
        public string DCEmailAddressForAdminDCClaims
        {
            get
            {
                return this._DCEmailAddressForAdminDCClaims;
            }
            set
            {
                if ((this._DCEmailAddressForAdminDCClaims != value))
                {
                    this.OnDCEmailAddressForAdminDCClaimsChanging(value);
                    this.SendPropertyChanging();
                    this._DCEmailAddressForAdminDCClaims = value;
                    this.SendPropertyChanged("DCEmailAddressForAdminDCClaims");
                    this.OnDCEmailAddressForAdminDCClaimsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims", DbType = "VarChar(100)")]
        public string DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims
        {
            get
            {
                return this._DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims;
            }
            set
            {
                if ((this._DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims != value))
                {
                    this.OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanging(value);
                    this.SendPropertyChanging();
                    this._DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims = value;
                    this.SendPropertyChanged("DCEmailAddressToNotifyIfCreditReceivedForDeductedClaims");
                    this.OnDCEmailAddressToNotifyIfCreditReceivedForDeductedClaimsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowDCUploadForceCredit", DbType = "Bit")]
        public System.Nullable<bool> AllowDCUploadForceCredit
        {
            get
            {
                return this._AllowDCUploadForceCredit;
            }
            set
            {
                if ((this._AllowDCUploadForceCredit != value))
                {
                    this.OnAllowDCUploadForceCreditChanging(value);
                    this.SendPropertyChanging();
                    this._AllowDCUploadForceCredit = value;
                    this.SendPropertyChanged("AllowDCUploadForceCredit");
                    this.OnAllowDCUploadForceCreditChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDCAllowedToUploadForceCredits", DbType = "Bit")]
        public System.Nullable<bool> IsDCAllowedToUploadForceCredits
        {
            get
            {
                return this._IsDCAllowedToUploadForceCredits;
            }
            set
            {
                if ((this._IsDCAllowedToUploadForceCredits != value))
                {
                    this.OnIsDCAllowedToUploadForceCreditsChanging(value);
                    this.SendPropertyChanging();
                    this._IsDCAllowedToUploadForceCredits = value;
                    this.SendPropertyChanged("IsDCAllowedToUploadForceCredits");
                    this.OnIsDCAllowedToUploadForceCreditsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsDCToCaptureAdminDCClaims", DbType = "Bit")]
        public System.Nullable<bool> IsDCToCaptureAdminDCClaims
        {
            get
            {
                return this._IsDCToCaptureAdminDCClaims;
            }
            set
            {
                if ((this._IsDCToCaptureAdminDCClaims != value))
                {
                    this.OnIsDCToCaptureAdminDCClaimsChanging(value);
                    this.SendPropertyChanging();
                    this._IsDCToCaptureAdminDCClaims = value;
                    this.SendPropertyChanged("IsDCToCaptureAdminDCClaims");
                    this.OnIsDCToCaptureAdminDCClaimsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WebOrderNotification", DbType = "NVarChar(MAX)")]
        public string WebOrderNotification
        {
            get
            {
                return this._WebOrderNotification;
            }
            set
            {
                if ((this._WebOrderNotification != value))
                {
                    this.OnWebOrderNotificationChanging(value);
                    this.SendPropertyChanging();
                    this._WebOrderNotification = value;
                    this.SendPropertyChanged("WebOrderNotification");
                    this.OnWebOrderNotificationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WebCatalogRequestNotification", DbType = "NVarChar(MAX)")]
        public string WebCatalogRequestNotification
        {
            get
            {
                return this._WebCatalogRequestNotification;
            }
            set
            {
                if ((this._WebCatalogRequestNotification != value))
                {
                    this.OnWebCatalogRequestNotificationChanging(value);
                    this.SendPropertyChanging();
                    this._WebCatalogRequestNotification = value;
                    this.SendPropertyChanged("WebCatalogRequestNotification");
                    this.OnWebCatalogRequestNotificationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowClaimEmails", DbType = "Bit")]
        public System.Nullable<bool> AllowClaimEmails
        {
            get
            {
                return this._AllowClaimEmails;
            }
            set
            {
                if ((this._AllowClaimEmails != value))
                {
                    this.OnAllowClaimEmailsChanging(value);
                    this.SendPropertyChanging();
                    this._AllowClaimEmails = value;
                    this.SendPropertyChanged("AllowClaimEmails");
                    this.OnAllowClaimEmailsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AllowDCManageBuildIt", DbType = "Bit")]
        public System.Nullable<bool> AllowDCManageBuildIt
        {
            get
            {
                return this._AllowDCManageBuildIt;
            }
            set
            {
                if ((this._AllowDCManageBuildIt != value))
                {
                    this.OnAllowDCManageBuildItChanging(value);
                    this.SendPropertyChanging();
                    this._AllowDCManageBuildIt = value;
                    this.SendPropertyChanged("AllowDCManageBuildIt");
                    this.OnAllowDCManageBuildItChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WarehouseClaimTollerence", DbType = "Decimal(10,4)")]
        public System.Nullable<decimal> WarehouseClaimTollerence
        {
            get
            {
                return this._WarehouseClaimTollerence;
            }
            set
            {
                if ((this._WarehouseClaimTollerence != value))
                {
                    this.OnWarehouseClaimTollerenceChanging(value);
                    this.SendPropertyChanging();
                    this._WarehouseClaimTollerence = value;
                    this.SendPropertyChanged("WarehouseClaimTollerence");
                    this.OnWarehouseClaimTollerenceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SupplierClaimTollerence", DbType = "Decimal(10,4)")]
        public System.Nullable<decimal> SupplierClaimTollerence
        {
            get
            {
                return this._SupplierClaimTollerence;
            }
            set
            {
                if ((this._SupplierClaimTollerence != value))
                {
                    this.OnSupplierClaimTollerenceChanging(value);
                    this.SendPropertyChanging();
                    this._SupplierClaimTollerence = value;
                    this.SendPropertyChanged("SupplierClaimTollerence");
                    this.OnSupplierClaimTollerenceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BuilditDcClaimTollerance", DbType = "Decimal(10,4)")]
        public System.Nullable<decimal> BuilditDcClaimTollerance
        {
            get
            {
                return this._BuilditDcClaimTollerance;
            }
            set
            {
                if ((this._BuilditDcClaimTollerance != value))
                {
                    this.OnBuilditDcClaimTolleranceChanging(value);
                    this.SendPropertyChanging();
                    this._BuilditDcClaimTollerance = value;
                    this.SendPropertyChanged("BuilditDcClaimTollerance");
                    this.OnBuilditDcClaimTolleranceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DcVendorClaimTollerance", DbType = "Decimal(10,4)")]
        public System.Nullable<decimal> DcVendorClaimTollerance
        {
            get
            {
                return this._DcVendorClaimTollerance;
            }
            set
            {
                if ((this._DcVendorClaimTollerance != value))
                {
                    this.OnDcVendorClaimTolleranceChanging(value);
                    this.SendPropertyChanging();
                    this._DcVendorClaimTollerance = value;
                    this.SendPropertyChanged("DcVendorClaimTollerance");
                    this.OnDcVendorClaimTolleranceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DcSuffix", DbType = "NVarChar(3)")]
        public string DcSuffix
        {
            get
            {
                return this._DcSuffix;
            }
            set
            {
                if ((this._DcSuffix != value))
                {
                    this.OnDcSuffixChanging(value);
                    this.SendPropertyChanging();
                    this._DcSuffix = value;
                    this.SendPropertyChanged("DcSuffix");
                    this.OnDcSuffixChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_WarehouseEan", DbType = "NVarChar(14)")]
        public string WarehouseEan
        {
            get
            {
                return this._WarehouseEan;
            }
            set
            {
                if ((this._WarehouseEan != value))
                {
                    this.OnWarehouseEanChanging(value);
                    this.SendPropertyChanging();
                    this._WarehouseEan = value;
                    this.SendPropertyChanged("WarehouseEan");
                    this.OnWarehouseEanChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "User_DC", Storage = "_User", ThisKey = "DCiUserID", OtherKey = "USID", IsForeignKey = true)]
        public User User
        {
            get
            {
                return this._User.Entity;
            }
            set
            {
                User previousValue = this._User.Entity;
                if (((previousValue != value)
                            || (this._User.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._User.Entity = null;
                        previousValue.DCs.Remove(this);
                    }
                    this._User.Entity = value;
                    if ((value != null))
                    {
                        value.DCs.Add(this);
                        this._DCiUserID = value.USID;
                    }
                    else
                    {
                        this._DCiUserID = default(int);
                    }
                    this.SendPropertyChanged("User");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Invoice")]
    public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _INID;

        private string _INcInvoiceNumber;

        private string _INdInvoiceDate;

        private string _INcOrderID;

        private string _INcDCEAN;

        private string _INcSupplierEAN;

        private string _INcStoreEAN;

        private System.DateTime _INdReceivedDate;

        private System.DateTime _INdTranslateDate;

        private System.Nullable<System.DateTime> _INdRecDcBackDate;

        private System.DateTime _INdPostDate;

        private string _INcCDAdjIndicator1;

        private string _INiCDPerc1;

        private string _INmCDValue1;

        private string _INcCDAdjIndicator2;

        private string _INiCDPerc2;

        private string _INmCDValue2;

        private string _INcCDAddDisInd;

        private string _INiCDAddDiscPerc;

        private string _INmCDAddDiscValue;

        private string _INcTransportCstInc;

        private string _INiTransportCstPerc;

        private string _INmTransportCstVal;

        private string _INcDutLevIndc;

        private string _INiDutLevPerc;

        private string _INmDutLevVal;

        private string _INmLnSubTotExl;

        private string _INmLnSubTotVat;

        private string _INmExtSubTotExl;

        private string _INmTotVat;

        private string _INmExtSubTotIncl;

        private string _INiSettleDisPerc;

        private string _INiSettleDisVal;

        private string _INcDelivDate;

        private string _INcAuthNo;

        private System.Nullable<int> _IsOrderConfirmation;

        private string _INcDespatchPoint;

        private System.Nullable<int> _OnlySaveOrderConfirmation;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnINIDChanging(int value);
        partial void OnINIDChanged();
        partial void OnINcInvoiceNumberChanging(string value);
        partial void OnINcInvoiceNumberChanged();
        partial void OnINdInvoiceDateChanging(string value);
        partial void OnINdInvoiceDateChanged();
        partial void OnINcOrderIDChanging(string value);
        partial void OnINcOrderIDChanged();
        partial void OnINcDCEANChanging(string value);
        partial void OnINcDCEANChanged();
        partial void OnINcSupplierEANChanging(string value);
        partial void OnINcSupplierEANChanged();
        partial void OnINcStoreEANChanging(string value);
        partial void OnINcStoreEANChanged();
        partial void OnINdReceivedDateChanging(System.DateTime value);
        partial void OnINdReceivedDateChanged();
        partial void OnINdTranslateDateChanging(System.DateTime value);
        partial void OnINdTranslateDateChanged();
        partial void OnINdRecDcBackDateChanging(System.Nullable<System.DateTime> value);
        partial void OnINdRecDcBackDateChanged();
        partial void OnINdPostDateChanging(System.DateTime value);
        partial void OnINdPostDateChanged();
        partial void OnINcCDAdjIndicator1Changing(string value);
        partial void OnINcCDAdjIndicator1Changed();
        partial void OnINiCDPerc1Changing(string value);
        partial void OnINiCDPerc1Changed();
        partial void OnINmCDValue1Changing(string value);
        partial void OnINmCDValue1Changed();
        partial void OnINcCDAdjIndicator2Changing(string value);
        partial void OnINcCDAdjIndicator2Changed();
        partial void OnINiCDPerc2Changing(string value);
        partial void OnINiCDPerc2Changed();
        partial void OnINmCDValue2Changing(string value);
        partial void OnINmCDValue2Changed();
        partial void OnINcCDAddDisIndChanging(string value);
        partial void OnINcCDAddDisIndChanged();
        partial void OnINiCDAddDiscPercChanging(string value);
        partial void OnINiCDAddDiscPercChanged();
        partial void OnINmCDAddDiscValueChanging(string value);
        partial void OnINmCDAddDiscValueChanged();
        partial void OnINcTransportCstIncChanging(string value);
        partial void OnINcTransportCstIncChanged();
        partial void OnINiTransportCstPercChanging(string value);
        partial void OnINiTransportCstPercChanged();
        partial void OnINmTransportCstValChanging(string value);
        partial void OnINmTransportCstValChanged();
        partial void OnINcDutLevIndcChanging(string value);
        partial void OnINcDutLevIndcChanged();
        partial void OnINiDutLevPercChanging(string value);
        partial void OnINiDutLevPercChanged();
        partial void OnINmDutLevValChanging(string value);
        partial void OnINmDutLevValChanged();
        partial void OnINmLnSubTotExlChanging(string value);
        partial void OnINmLnSubTotExlChanged();
        partial void OnINmLnSubTotVatChanging(string value);
        partial void OnINmLnSubTotVatChanged();
        partial void OnINmExtSubTotExlChanging(string value);
        partial void OnINmExtSubTotExlChanged();
        partial void OnINmTotVatChanging(string value);
        partial void OnINmTotVatChanged();
        partial void OnINmExtSubTotInclChanging(string value);
        partial void OnINmExtSubTotInclChanged();
        partial void OnINiSettleDisPercChanging(string value);
        partial void OnINiSettleDisPercChanged();
        partial void OnINiSettleDisValChanging(string value);
        partial void OnINiSettleDisValChanged();
        partial void OnINcDelivDateChanging(string value);
        partial void OnINcDelivDateChanged();
        partial void OnINcAuthNoChanging(string value);
        partial void OnINcAuthNoChanged();
        partial void OnIsOrderConfirmationChanging(System.Nullable<int> value);
        partial void OnIsOrderConfirmationChanged();
        partial void OnINcDespatchPointChanging(string value);
        partial void OnINcDespatchPointChanged();
        partial void OnOnlySaveOrderConfirmationChanging(System.Nullable<int> value);
        partial void OnOnlySaveOrderConfirmationChanged();
        #endregion

        public Invoice()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int INID
        {
            get
            {
                return this._INID;
            }
            set
            {
                if ((this._INID != value))
                {
                    this.OnINIDChanging(value);
                    this.SendPropertyChanging();
                    this._INID = value;
                    this.SendPropertyChanged("INID");
                    this.OnINIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcInvoiceNumber", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string INcInvoiceNumber
        {
            get
            {
                return this._INcInvoiceNumber;
            }
            set
            {
                if ((this._INcInvoiceNumber != value))
                {
                    this.OnINcInvoiceNumberChanging(value);
                    this.SendPropertyChanging();
                    this._INcInvoiceNumber = value;
                    this.SendPropertyChanged("INcInvoiceNumber");
                    this.OnINcInvoiceNumberChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INdInvoiceDate", DbType = "VarChar(50)")]
        public string INdInvoiceDate
        {
            get
            {
                return this._INdInvoiceDate;
            }
            set
            {
                if ((this._INdInvoiceDate != value))
                {
                    this.OnINdInvoiceDateChanging(value);
                    this.SendPropertyChanging();
                    this._INdInvoiceDate = value;
                    this.SendPropertyChanged("INdInvoiceDate");
                    this.OnINdInvoiceDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcOrderID", DbType = "VarChar(50)")]
        public string INcOrderID
        {
            get
            {
                return this._INcOrderID;
            }
            set
            {
                if ((this._INcOrderID != value))
                {
                    this.OnINcOrderIDChanging(value);
                    this.SendPropertyChanging();
                    this._INcOrderID = value;
                    this.SendPropertyChanged("INcOrderID");
                    this.OnINcOrderIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcDCEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string INcDCEAN
        {
            get
            {
                return this._INcDCEAN;
            }
            set
            {
                if ((this._INcDCEAN != value))
                {
                    this.OnINcDCEANChanging(value);
                    this.SendPropertyChanging();
                    this._INcDCEAN = value;
                    this.SendPropertyChanged("INcDCEAN");
                    this.OnINcDCEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcSupplierEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string INcSupplierEAN
        {
            get
            {
                return this._INcSupplierEAN;
            }
            set
            {
                if ((this._INcSupplierEAN != value))
                {
                    this.OnINcSupplierEANChanging(value);
                    this.SendPropertyChanging();
                    this._INcSupplierEAN = value;
                    this.SendPropertyChanged("INcSupplierEAN");
                    this.OnINcSupplierEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcStoreEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string INcStoreEAN
        {
            get
            {
                return this._INcStoreEAN;
            }
            set
            {
                if ((this._INcStoreEAN != value))
                {
                    this.OnINcStoreEANChanging(value);
                    this.SendPropertyChanging();
                    this._INcStoreEAN = value;
                    this.SendPropertyChanged("INcStoreEAN");
                    this.OnINcStoreEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INdReceivedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime INdReceivedDate
        {
            get
            {
                return this._INdReceivedDate;
            }
            set
            {
                if ((this._INdReceivedDate != value))
                {
                    this.OnINdReceivedDateChanging(value);
                    this.SendPropertyChanging();
                    this._INdReceivedDate = value;
                    this.SendPropertyChanged("INdReceivedDate");
                    this.OnINdReceivedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INdTranslateDate", DbType = "DateTime NOT NULL")]
        public System.DateTime INdTranslateDate
        {
            get
            {
                return this._INdTranslateDate;
            }
            set
            {
                if ((this._INdTranslateDate != value))
                {
                    this.OnINdTranslateDateChanging(value);
                    this.SendPropertyChanging();
                    this._INdTranslateDate = value;
                    this.SendPropertyChanged("INdTranslateDate");
                    this.OnINdTranslateDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INdRecDcBackDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> INdRecDcBackDate
        {
            get
            {
                return this._INdRecDcBackDate;
            }
            set
            {
                if ((this._INdRecDcBackDate != value))
                {
                    this.OnINdRecDcBackDateChanging(value);
                    this.SendPropertyChanging();
                    this._INdRecDcBackDate = value;
                    this.SendPropertyChanged("INdRecDcBackDate");
                    this.OnINdRecDcBackDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INdPostDate", DbType = "DateTime NOT NULL")]
        public System.DateTime INdPostDate
        {
            get
            {
                return this._INdPostDate;
            }
            set
            {
                if ((this._INdPostDate != value))
                {
                    this.OnINdPostDateChanging(value);
                    this.SendPropertyChanging();
                    this._INdPostDate = value;
                    this.SendPropertyChanged("INdPostDate");
                    this.OnINdPostDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcCDAdjIndicator1", DbType = "VarChar(10)")]
        public string INcCDAdjIndicator1
        {
            get
            {
                return this._INcCDAdjIndicator1;
            }
            set
            {
                if ((this._INcCDAdjIndicator1 != value))
                {
                    this.OnINcCDAdjIndicator1Changing(value);
                    this.SendPropertyChanging();
                    this._INcCDAdjIndicator1 = value;
                    this.SendPropertyChanged("INcCDAdjIndicator1");
                    this.OnINcCDAdjIndicator1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INiCDPerc1", DbType = "VarChar(10)")]
        public string INiCDPerc1
        {
            get
            {
                return this._INiCDPerc1;
            }
            set
            {
                if ((this._INiCDPerc1 != value))
                {
                    this.OnINiCDPerc1Changing(value);
                    this.SendPropertyChanging();
                    this._INiCDPerc1 = value;
                    this.SendPropertyChanged("INiCDPerc1");
                    this.OnINiCDPerc1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmCDValue1", DbType = "VarChar(10)")]
        public string INmCDValue1
        {
            get
            {
                return this._INmCDValue1;
            }
            set
            {
                if ((this._INmCDValue1 != value))
                {
                    this.OnINmCDValue1Changing(value);
                    this.SendPropertyChanging();
                    this._INmCDValue1 = value;
                    this.SendPropertyChanged("INmCDValue1");
                    this.OnINmCDValue1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcCDAdjIndicator2", DbType = "VarChar(10)")]
        public string INcCDAdjIndicator2
        {
            get
            {
                return this._INcCDAdjIndicator2;
            }
            set
            {
                if ((this._INcCDAdjIndicator2 != value))
                {
                    this.OnINcCDAdjIndicator2Changing(value);
                    this.SendPropertyChanging();
                    this._INcCDAdjIndicator2 = value;
                    this.SendPropertyChanged("INcCDAdjIndicator2");
                    this.OnINcCDAdjIndicator2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INiCDPerc2", DbType = "VarChar(10)")]
        public string INiCDPerc2
        {
            get
            {
                return this._INiCDPerc2;
            }
            set
            {
                if ((this._INiCDPerc2 != value))
                {
                    this.OnINiCDPerc2Changing(value);
                    this.SendPropertyChanging();
                    this._INiCDPerc2 = value;
                    this.SendPropertyChanged("INiCDPerc2");
                    this.OnINiCDPerc2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmCDValue2", DbType = "VarChar(10)")]
        public string INmCDValue2
        {
            get
            {
                return this._INmCDValue2;
            }
            set
            {
                if ((this._INmCDValue2 != value))
                {
                    this.OnINmCDValue2Changing(value);
                    this.SendPropertyChanging();
                    this._INmCDValue2 = value;
                    this.SendPropertyChanged("INmCDValue2");
                    this.OnINmCDValue2Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcCDAddDisInd", DbType = "VarChar(10)")]
        public string INcCDAddDisInd
        {
            get
            {
                return this._INcCDAddDisInd;
            }
            set
            {
                if ((this._INcCDAddDisInd != value))
                {
                    this.OnINcCDAddDisIndChanging(value);
                    this.SendPropertyChanging();
                    this._INcCDAddDisInd = value;
                    this.SendPropertyChanged("INcCDAddDisInd");
                    this.OnINcCDAddDisIndChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INiCDAddDiscPerc", DbType = "VarChar(10)")]
        public string INiCDAddDiscPerc
        {
            get
            {
                return this._INiCDAddDiscPerc;
            }
            set
            {
                if ((this._INiCDAddDiscPerc != value))
                {
                    this.OnINiCDAddDiscPercChanging(value);
                    this.SendPropertyChanging();
                    this._INiCDAddDiscPerc = value;
                    this.SendPropertyChanged("INiCDAddDiscPerc");
                    this.OnINiCDAddDiscPercChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmCDAddDiscValue", DbType = "VarChar(10)")]
        public string INmCDAddDiscValue
        {
            get
            {
                return this._INmCDAddDiscValue;
            }
            set
            {
                if ((this._INmCDAddDiscValue != value))
                {
                    this.OnINmCDAddDiscValueChanging(value);
                    this.SendPropertyChanging();
                    this._INmCDAddDiscValue = value;
                    this.SendPropertyChanged("INmCDAddDiscValue");
                    this.OnINmCDAddDiscValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcTransportCstInc", DbType = "VarChar(10)")]
        public string INcTransportCstInc
        {
            get
            {
                return this._INcTransportCstInc;
            }
            set
            {
                if ((this._INcTransportCstInc != value))
                {
                    this.OnINcTransportCstIncChanging(value);
                    this.SendPropertyChanging();
                    this._INcTransportCstInc = value;
                    this.SendPropertyChanged("INcTransportCstInc");
                    this.OnINcTransportCstIncChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INiTransportCstPerc", DbType = "VarChar(10)")]
        public string INiTransportCstPerc
        {
            get
            {
                return this._INiTransportCstPerc;
            }
            set
            {
                if ((this._INiTransportCstPerc != value))
                {
                    this.OnINiTransportCstPercChanging(value);
                    this.SendPropertyChanging();
                    this._INiTransportCstPerc = value;
                    this.SendPropertyChanged("INiTransportCstPerc");
                    this.OnINiTransportCstPercChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmTransportCstVal", DbType = "VarChar(10)")]
        public string INmTransportCstVal
        {
            get
            {
                return this._INmTransportCstVal;
            }
            set
            {
                if ((this._INmTransportCstVal != value))
                {
                    this.OnINmTransportCstValChanging(value);
                    this.SendPropertyChanging();
                    this._INmTransportCstVal = value;
                    this.SendPropertyChanged("INmTransportCstVal");
                    this.OnINmTransportCstValChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcDutLevIndc", DbType = "VarChar(10)")]
        public string INcDutLevIndc
        {
            get
            {
                return this._INcDutLevIndc;
            }
            set
            {
                if ((this._INcDutLevIndc != value))
                {
                    this.OnINcDutLevIndcChanging(value);
                    this.SendPropertyChanging();
                    this._INcDutLevIndc = value;
                    this.SendPropertyChanged("INcDutLevIndc");
                    this.OnINcDutLevIndcChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INiDutLevPerc", DbType = "VarChar(10)")]
        public string INiDutLevPerc
        {
            get
            {
                return this._INiDutLevPerc;
            }
            set
            {
                if ((this._INiDutLevPerc != value))
                {
                    this.OnINiDutLevPercChanging(value);
                    this.SendPropertyChanging();
                    this._INiDutLevPerc = value;
                    this.SendPropertyChanged("INiDutLevPerc");
                    this.OnINiDutLevPercChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmDutLevVal", DbType = "VarChar(10)")]
        public string INmDutLevVal
        {
            get
            {
                return this._INmDutLevVal;
            }
            set
            {
                if ((this._INmDutLevVal != value))
                {
                    this.OnINmDutLevValChanging(value);
                    this.SendPropertyChanging();
                    this._INmDutLevVal = value;
                    this.SendPropertyChanged("INmDutLevVal");
                    this.OnINmDutLevValChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmLnSubTotExl", DbType = "VarChar(10)")]
        public string INmLnSubTotExl
        {
            get
            {
                return this._INmLnSubTotExl;
            }
            set
            {
                if ((this._INmLnSubTotExl != value))
                {
                    this.OnINmLnSubTotExlChanging(value);
                    this.SendPropertyChanging();
                    this._INmLnSubTotExl = value;
                    this.SendPropertyChanged("INmLnSubTotExl");
                    this.OnINmLnSubTotExlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmLnSubTotVat", DbType = "VarChar(10)")]
        public string INmLnSubTotVat
        {
            get
            {
                return this._INmLnSubTotVat;
            }
            set
            {
                if ((this._INmLnSubTotVat != value))
                {
                    this.OnINmLnSubTotVatChanging(value);
                    this.SendPropertyChanging();
                    this._INmLnSubTotVat = value;
                    this.SendPropertyChanged("INmLnSubTotVat");
                    this.OnINmLnSubTotVatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmExtSubTotExl", DbType = "VarChar(10)")]
        public string INmExtSubTotExl
        {
            get
            {
                return this._INmExtSubTotExl;
            }
            set
            {
                if ((this._INmExtSubTotExl != value))
                {
                    this.OnINmExtSubTotExlChanging(value);
                    this.SendPropertyChanging();
                    this._INmExtSubTotExl = value;
                    this.SendPropertyChanged("INmExtSubTotExl");
                    this.OnINmExtSubTotExlChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmTotVat", DbType = "VarChar(10)")]
        public string INmTotVat
        {
            get
            {
                return this._INmTotVat;
            }
            set
            {
                if ((this._INmTotVat != value))
                {
                    this.OnINmTotVatChanging(value);
                    this.SendPropertyChanging();
                    this._INmTotVat = value;
                    this.SendPropertyChanged("INmTotVat");
                    this.OnINmTotVatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INmExtSubTotIncl", DbType = "VarChar(10)")]
        public string INmExtSubTotIncl
        {
            get
            {
                return this._INmExtSubTotIncl;
            }
            set
            {
                if ((this._INmExtSubTotIncl != value))
                {
                    this.OnINmExtSubTotInclChanging(value);
                    this.SendPropertyChanging();
                    this._INmExtSubTotIncl = value;
                    this.SendPropertyChanged("INmExtSubTotIncl");
                    this.OnINmExtSubTotInclChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INiSettleDisPerc", DbType = "VarChar(10)")]
        public string INiSettleDisPerc
        {
            get
            {
                return this._INiSettleDisPerc;
            }
            set
            {
                if ((this._INiSettleDisPerc != value))
                {
                    this.OnINiSettleDisPercChanging(value);
                    this.SendPropertyChanging();
                    this._INiSettleDisPerc = value;
                    this.SendPropertyChanged("INiSettleDisPerc");
                    this.OnINiSettleDisPercChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INiSettleDisVal", DbType = "VarChar(10)")]
        public string INiSettleDisVal
        {
            get
            {
                return this._INiSettleDisVal;
            }
            set
            {
                if ((this._INiSettleDisVal != value))
                {
                    this.OnINiSettleDisValChanging(value);
                    this.SendPropertyChanging();
                    this._INiSettleDisVal = value;
                    this.SendPropertyChanged("INiSettleDisVal");
                    this.OnINiSettleDisValChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcDelivDate", DbType = "VarChar(50)")]
        public string INcDelivDate
        {
            get
            {
                return this._INcDelivDate;
            }
            set
            {
                if ((this._INcDelivDate != value))
                {
                    this.OnINcDelivDateChanging(value);
                    this.SendPropertyChanging();
                    this._INcDelivDate = value;
                    this.SendPropertyChanged("INcDelivDate");
                    this.OnINcDelivDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcAuthNo", DbType = "VarChar(50)")]
        public string INcAuthNo
        {
            get
            {
                return this._INcAuthNo;
            }
            set
            {
                if ((this._INcAuthNo != value))
                {
                    this.OnINcAuthNoChanging(value);
                    this.SendPropertyChanging();
                    this._INcAuthNo = value;
                    this.SendPropertyChanged("INcAuthNo");
                    this.OnINcAuthNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsOrderConfirmation", DbType = "Int")]
        public System.Nullable<int> IsOrderConfirmation
        {
            get
            {
                return this._IsOrderConfirmation;
            }
            set
            {
                if ((this._IsOrderConfirmation != value))
                {
                    this.OnIsOrderConfirmationChanging(value);
                    this.SendPropertyChanging();
                    this._IsOrderConfirmation = value;
                    this.SendPropertyChanged("IsOrderConfirmation");
                    this.OnIsOrderConfirmationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_INcDespatchPoint", DbType = "NVarChar(20)")]
        public string INcDespatchPoint
        {
            get
            {
                return this._INcDespatchPoint;
            }
            set
            {
                if ((this._INcDespatchPoint != value))
                {
                    this.OnINcDespatchPointChanging(value);
                    this.SendPropertyChanging();
                    this._INcDespatchPoint = value;
                    this.SendPropertyChanged("INcDespatchPoint");
                    this.OnINcDespatchPointChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OnlySaveOrderConfirmation", DbType = "Int")]
        public System.Nullable<int> OnlySaveOrderConfirmation
        {
            get
            {
                return this._OnlySaveOrderConfirmation;
            }
            set
            {
                if ((this._OnlySaveOrderConfirmation != value))
                {
                    this.OnOnlySaveOrderConfirmationChanging(value);
                    this.SendPropertyChanging();
                    this._OnlySaveOrderConfirmation = value;
                    this.SendPropertyChanged("OnlySaveOrderConfirmation");
                    this.OnOnlySaveOrderConfirmationChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.CreditNote")]
    public partial class CreditNote
    {

        private int _CNID;

        private int _CNiStoreID;

        private string _CNcStoreEAN;

        private int _CNiDCID;

        private string _CNcDCEAN;

        private int _CNiSupplierID;

        private string _CNcSupplierEAN;

        private string _CNcCreditNoteNumber;

        private System.DateTime _CNdCreditNoteDate;

        private System.DateTime _CNdReceivedDate;

        private System.DateTime _CNdTransDate;

        private System.Nullable<System.DateTime> _CNdPostDate;

        private System.Nullable<System.DateTime> _CNdRecDCBackDate;

        private System.Nullable<int> _CNiClaimQty;

        private System.Nullable<decimal> _CNmTotCostExcl;

        private System.Nullable<decimal> _CNmVat;

        private System.Nullable<decimal> _CNmTotCostIncl;

        private string _CNcTradeIndc1;

        private System.Nullable<int> _CNiTradePerc1;

        private System.Nullable<decimal> _CNmTradeAmt1;

        private string _CNcTradeIndc2;

        private System.Nullable<int> _CNiTradePerc2;

        private System.Nullable<decimal> _CNmTradeAmt2;

        private string _CNcTransportIndc;

        private System.Nullable<int> _CNiTransportPerc;

        private System.Nullable<decimal> _CNmTransportAmt;

        private string _CNcDutyIndc;

        private System.Nullable<int> _CNiDutyPerc;

        private System.Nullable<decimal> _CNmDutyAmt;

        private System.Nullable<bool> _IsForceCredit;

        private string _DespatchPoint;

        private System.Nullable<bool> _IsReward;

        private string _CNcCampaignName;

        private string _CNcBasketNo;

        private System.Nullable<bool> _IsStamp;

        public CreditNote()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNID", AutoSync = AutoSync.Always, DbType = "Int NOT NULL IDENTITY", IsDbGenerated = true)]
        public int CNID
        {
            get
            {
                return this._CNID;
            }
            set
            {
                if ((this._CNID != value))
                {
                    this._CNID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiStoreID", DbType = "Int NOT NULL")]
        public int CNiStoreID
        {
            get
            {
                return this._CNiStoreID;
            }
            set
            {
                if ((this._CNiStoreID != value))
                {
                    this._CNiStoreID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcStoreEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CNcStoreEAN
        {
            get
            {
                return this._CNcStoreEAN;
            }
            set
            {
                if ((this._CNcStoreEAN != value))
                {
                    this._CNcStoreEAN = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiDCID", DbType = "Int NOT NULL")]
        public int CNiDCID
        {
            get
            {
                return this._CNiDCID;
            }
            set
            {
                if ((this._CNiDCID != value))
                {
                    this._CNiDCID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcDCEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CNcDCEAN
        {
            get
            {
                return this._CNcDCEAN;
            }
            set
            {
                if ((this._CNcDCEAN != value))
                {
                    this._CNcDCEAN = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiSupplierID", DbType = "Int NOT NULL")]
        public int CNiSupplierID
        {
            get
            {
                return this._CNiSupplierID;
            }
            set
            {
                if ((this._CNiSupplierID != value))
                {
                    this._CNiSupplierID = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcSupplierEAN", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CNcSupplierEAN
        {
            get
            {
                return this._CNcSupplierEAN;
            }
            set
            {
                if ((this._CNcSupplierEAN != value))
                {
                    this._CNcSupplierEAN = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcCreditNoteNumber", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string CNcCreditNoteNumber
        {
            get
            {
                return this._CNcCreditNoteNumber;
            }
            set
            {
                if ((this._CNcCreditNoteNumber != value))
                {
                    this._CNcCreditNoteNumber = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNdCreditNoteDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CNdCreditNoteDate
        {
            get
            {
                return this._CNdCreditNoteDate;
            }
            set
            {
                if ((this._CNdCreditNoteDate != value))
                {
                    this._CNdCreditNoteDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNdReceivedDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CNdReceivedDate
        {
            get
            {
                return this._CNdReceivedDate;
            }
            set
            {
                if ((this._CNdReceivedDate != value))
                {
                    this._CNdReceivedDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNdTransDate", DbType = "DateTime NOT NULL")]
        public System.DateTime CNdTransDate
        {
            get
            {
                return this._CNdTransDate;
            }
            set
            {
                if ((this._CNdTransDate != value))
                {
                    this._CNdTransDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNdPostDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CNdPostDate
        {
            get
            {
                return this._CNdPostDate;
            }
            set
            {
                if ((this._CNdPostDate != value))
                {
                    this._CNdPostDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNdRecDCBackDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CNdRecDCBackDate
        {
            get
            {
                return this._CNdRecDCBackDate;
            }
            set
            {
                if ((this._CNdRecDCBackDate != value))
                {
                    this._CNdRecDCBackDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiClaimQty", DbType = "Int")]
        public System.Nullable<int> CNiClaimQty
        {
            get
            {
                return this._CNiClaimQty;
            }
            set
            {
                if ((this._CNiClaimQty != value))
                {
                    this._CNiClaimQty = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNmTotCostExcl", DbType = "Money")]
        public System.Nullable<decimal> CNmTotCostExcl
        {
            get
            {
                return this._CNmTotCostExcl;
            }
            set
            {
                if ((this._CNmTotCostExcl != value))
                {
                    this._CNmTotCostExcl = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNmVat", DbType = "Money")]
        public System.Nullable<decimal> CNmVat
        {
            get
            {
                return this._CNmVat;
            }
            set
            {
                if ((this._CNmVat != value))
                {
                    this._CNmVat = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNmTotCostIncl", DbType = "Money")]
        public System.Nullable<decimal> CNmTotCostIncl
        {
            get
            {
                return this._CNmTotCostIncl;
            }
            set
            {
                if ((this._CNmTotCostIncl != value))
                {
                    this._CNmTotCostIncl = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcTradeIndc1", DbType = "VarChar(50)")]
        public string CNcTradeIndc1
        {
            get
            {
                return this._CNcTradeIndc1;
            }
            set
            {
                if ((this._CNcTradeIndc1 != value))
                {
                    this._CNcTradeIndc1 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiTradePerc1", DbType = "Int")]
        public System.Nullable<int> CNiTradePerc1
        {
            get
            {
                return this._CNiTradePerc1;
            }
            set
            {
                if ((this._CNiTradePerc1 != value))
                {
                    this._CNiTradePerc1 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNmTradeAmt1", DbType = "Money")]
        public System.Nullable<decimal> CNmTradeAmt1
        {
            get
            {
                return this._CNmTradeAmt1;
            }
            set
            {
                if ((this._CNmTradeAmt1 != value))
                {
                    this._CNmTradeAmt1 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcTradeIndc2", DbType = "VarChar(50)")]
        public string CNcTradeIndc2
        {
            get
            {
                return this._CNcTradeIndc2;
            }
            set
            {
                if ((this._CNcTradeIndc2 != value))
                {
                    this._CNcTradeIndc2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiTradePerc2", DbType = "Int")]
        public System.Nullable<int> CNiTradePerc2
        {
            get
            {
                return this._CNiTradePerc2;
            }
            set
            {
                if ((this._CNiTradePerc2 != value))
                {
                    this._CNiTradePerc2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNmTradeAmt2", DbType = "Money")]
        public System.Nullable<decimal> CNmTradeAmt2
        {
            get
            {
                return this._CNmTradeAmt2;
            }
            set
            {
                if ((this._CNmTradeAmt2 != value))
                {
                    this._CNmTradeAmt2 = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcTransportIndc", DbType = "VarChar(50)")]
        public string CNcTransportIndc
        {
            get
            {
                return this._CNcTransportIndc;
            }
            set
            {
                if ((this._CNcTransportIndc != value))
                {
                    this._CNcTransportIndc = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiTransportPerc", DbType = "Int")]
        public System.Nullable<int> CNiTransportPerc
        {
            get
            {
                return this._CNiTransportPerc;
            }
            set
            {
                if ((this._CNiTransportPerc != value))
                {
                    this._CNiTransportPerc = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNmTransportAmt", DbType = "Money")]
        public System.Nullable<decimal> CNmTransportAmt
        {
            get
            {
                return this._CNmTransportAmt;
            }
            set
            {
                if ((this._CNmTransportAmt != value))
                {
                    this._CNmTransportAmt = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcDutyIndc", DbType = "VarChar(50)")]
        public string CNcDutyIndc
        {
            get
            {
                return this._CNcDutyIndc;
            }
            set
            {
                if ((this._CNcDutyIndc != value))
                {
                    this._CNcDutyIndc = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNiDutyPerc", DbType = "Int")]
        public System.Nullable<int> CNiDutyPerc
        {
            get
            {
                return this._CNiDutyPerc;
            }
            set
            {
                if ((this._CNiDutyPerc != value))
                {
                    this._CNiDutyPerc = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNmDutyAmt", DbType = "Money")]
        public System.Nullable<decimal> CNmDutyAmt
        {
            get
            {
                return this._CNmDutyAmt;
            }
            set
            {
                if ((this._CNmDutyAmt != value))
                {
                    this._CNmDutyAmt = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsForceCredit", DbType = "Bit")]
        public System.Nullable<bool> IsForceCredit
        {
            get
            {
                return this._IsForceCredit;
            }
            set
            {
                if ((this._IsForceCredit != value))
                {
                    this._IsForceCredit = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DespatchPoint", DbType = "NVarChar(20)")]
        public string DespatchPoint
        {
            get
            {
                return this._DespatchPoint;
            }
            set
            {
                if ((this._DespatchPoint != value))
                {
                    this._DespatchPoint = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsReward", DbType = "Bit")]
        public System.Nullable<bool> IsReward
        {
            get
            {
                return this._IsReward;
            }
            set
            {
                if ((this._IsReward != value))
                {
                    this._IsReward = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcCampaignName", DbType = "VarChar(50)")]
        public string CNcCampaignName
        {
            get
            {
                return this._CNcCampaignName;
            }
            set
            {
                if ((this._CNcCampaignName != value))
                {
                    this._CNcCampaignName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CNcBasketNo", DbType = "VarChar(50)")]
        public string CNcBasketNo
        {
            get
            {
                return this._CNcBasketNo;
            }
            set
            {
                if ((this._CNcBasketNo != value))
                {
                    this._CNcBasketNo = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IsStamp", DbType = "Bit")]
        public System.Nullable<bool> IsStamp
        {
            get
            {
                return this._IsStamp;
            }
            set
            {
                if ((this._IsStamp != value))
                {
                    this._IsStamp = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.ClaimSubReasons")]
    public partial class ClaimSubReason : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _ClaimSubReasonId;

        private int _ClaimReasonId;

        private string _Code;

        private string _Description;

        private bool _ActiveInactiveIndicator;

        private EntityRef<ClaimReason> _ClaimReason;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnClaimSubReasonIdChanging(int value);
        partial void OnClaimSubReasonIdChanged();
        partial void OnClaimReasonIdChanging(int value);
        partial void OnClaimReasonIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnActiveInactiveIndicatorChanging(bool value);
        partial void OnActiveInactiveIndicatorChanged();
        #endregion

        public ClaimSubReason()
        {
            this._ClaimReason = default(EntityRef<ClaimReason>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimSubReasonId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ClaimSubReasonId
        {
            get
            {
                return this._ClaimSubReasonId;
            }
            set
            {
                if ((this._ClaimSubReasonId != value))
                {
                    this.OnClaimSubReasonIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimSubReasonId = value;
                    this.SendPropertyChanged("ClaimSubReasonId");
                    this.OnClaimSubReasonIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClaimReasonId", DbType = "Int NOT NULL")]
        public int ClaimReasonId
        {
            get
            {
                return this._ClaimReasonId;
            }
            set
            {
                if ((this._ClaimReasonId != value))
                {
                    if (this._ClaimReason.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnClaimReasonIdChanging(value);
                    this.SendPropertyChanging();
                    this._ClaimReasonId = value;
                    this.SendPropertyChanged("ClaimReasonId");
                    this.OnClaimReasonIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Code", DbType = "NVarChar(50) NOT NULL", CanBeNull = false)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if ((this._Code != value))
                {
                    this.OnCodeChanging(value);
                    this.SendPropertyChanging();
                    this._Code = value;
                    this.SendPropertyChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ActiveInactiveIndicator", DbType = "Bit NOT NULL")]
        public bool ActiveInactiveIndicator
        {
            get
            {
                return this._ActiveInactiveIndicator;
            }
            set
            {
                if ((this._ActiveInactiveIndicator != value))
                {
                    this.OnActiveInactiveIndicatorChanging(value);
                    this.SendPropertyChanging();
                    this._ActiveInactiveIndicator = value;
                    this.SendPropertyChanged("ActiveInactiveIndicator");
                    this.OnActiveInactiveIndicatorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "ClaimReason_ClaimSubReason", Storage = "_ClaimReason", ThisKey = "ClaimReasonId", OtherKey = "ClaimReasonId", IsForeignKey = true)]
        public ClaimReason ClaimReason
        {
            get
            {
                return this._ClaimReason.Entity;
            }
            set
            {
                ClaimReason previousValue = this._ClaimReason.Entity;
                if (((previousValue != value)
                            || (this._ClaimReason.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._ClaimReason.Entity = null;
                        previousValue.ClaimSubReasons.Remove(this);
                    }
                    this._ClaimReason.Entity = value;
                    if ((value != null))
                    {
                        value.ClaimSubReasons.Add(this);
                        this._ClaimReasonId = value.ClaimReasonId;
                    }
                    else
                    {
                        this._ClaimReasonId = default(int);
                    }
                    this.SendPropertyChanged("ClaimReason");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.MessageException")]
    public partial class MessageException : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _MEID;
        private string _MEcMessageNr;
        private string _MEcType;
        private string _MEcDCEAN;
        private string _MEcStoreEAN;
        private string _MEcStoreName;
        private string _MEcStoreMail;
        private string _MEcAddress;
        private string _MEcSupplierEAN;
        private string _MEcContact;
        private string _MEcTelNo;
        private string _MEcFaxNo;
        private DateTime _MEdReceivedDate;
        private string _MEcException;
        private string _MEcFileRef;
        private int _MEiAction;



        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnMEIDChanging(int value);
        partial void OnMEIDChanged();
        partial void OnMEcMessageNrChanging(string value);
        partial void OnMEcMessageNrChanged();
        partial void OnMEcTypeChanging(string value);
        partial void OnMEcTypeChanged();
        partial void OnMEcDCEANChanging(string value);
        partial void OnMEcDCEANChanged();
        partial void OnMEcStoreEANChanging(string value);
        partial void OnMEcStoreEANChanged();
        partial void OnMEcStoreNameChanging(string value);
        partial void OnMEcStoreNameChanged();
        partial void OnMEcStoreMailChanging(string value);
        partial void OnMEcStoreMailChanged();
        partial void OnMEcAddressChanging(string value);
        partial void OnMEcAddressChanged();
        partial void OnMEcSupplierEANChanging(string value);
        partial void OnMEcSupplierEANChanged();
        partial void OnMEcContactChanging(string value);
        partial void OnMEcContactChanged();
        partial void OnMEcTelNoChanging(string value);
        partial void OnMEcTelNoChanged();
        partial void OnMEcFaxNoChanging(string value);
        partial void OnMEcFaxNoChanged();
        partial void OnMEdReceivedDateChanging(DateTime value);
        partial void OnMEdReceivedDateChanged();
        partial void OnMEcExceptionChanging(string value);
        partial void OnMEcExceptionChanged();
        partial void OnMEcFileRefChanging(string value);
        partial void OnMEcFileRefChanged();
        partial void OnMEiActionChanging(int value);
        partial void OnMEiActionChanged();

        #endregion

        public MessageException()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int MEID
        {
            get
            {
                return this._MEID;
            }
            set
            {
                if ((this._MEID != value))
                {
                    this.OnMEIDChanging(value);
                    this.SendPropertyChanging();
                    this._MEID = value;
                    this.SendPropertyChanged("MEID");
                    this.OnMEIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcMessageNr", DbType = "VarChar(50)")]
        public string MEcMessageNr
        {
            get
            {
                return this._MEcMessageNr;
            }
            set
            {
                if ((this._MEcMessageNr != value))
                {
                    this.OnMEcMessageNrChanging(value);
                    this.SendPropertyChanging();
                    this._MEcMessageNr = value;
                    this.SendPropertyChanged("MEcMessageNr");
                    this.OnMEcMessageNrChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcType", DbType = "VarChar(50)")]
        public string MEcType
        {
            get
            {
                return this._MEcType;
            }
            set
            {
                if ((this._MEcType != value))
                {
                    this.OnMEcTypeChanging(value);
                    this.SendPropertyChanging();
                    this._MEcType = value;
                    this.SendPropertyChanged("MEcType");
                    this.OnMEcTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcDCEAN", DbType = "VarChar(50)")]
        public string MEcDCEAN
        {
            get
            {
                return this._MEcDCEAN;
            }
            set
            {
                if ((this._MEcDCEAN != value))
                {
                    this.OnMEcDCEANChanging(value);
                    this.SendPropertyChanging();
                    this._MEcDCEAN = value;
                    this.SendPropertyChanged("MEcDCEAN");
                    this.OnMEcDCEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcStoreEAN", DbType = "VarChar(50)")]
        public string MEcStoreEAN
        {
            get
            {
                return this._MEcStoreEAN;
            }
            set
            {
                if ((this._MEcStoreEAN != value))
                {
                    this.OnMEcStoreEANChanging(value);
                    this.SendPropertyChanging();
                    this._MEcStoreEAN = value;
                    this.SendPropertyChanged("MEcStoreEAN");
                    this.OnMEcStoreEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcStoreName", DbType = "VarChar(50)")]
        public string MEcStoreName
        {
            get
            {
                return this._MEcStoreName;
            }
            set
            {
                if ((this._MEcStoreName != value))
                {
                    this.OnMEcStoreNameChanging(value);
                    this.SendPropertyChanging();
                    this._MEcStoreName = value;
                    this.SendPropertyChanged("MEcStoreName");
                    this.OnMEcStoreNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcStoreMail", DbType = "VarChar(50)")]
        public string MEcStoreMail
        {
            get
            {
                return this._MEcStoreMail;
            }
            set
            {
                if ((this._MEcStoreMail != value))
                {
                    this.OnMEcStoreMailChanging(value);
                    this.SendPropertyChanging();
                    this._MEcStoreMail = value;
                    this.SendPropertyChanged("MEcStoreMail");
                    this.OnMEcStoreMailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcAddress", DbType = "VarChar(500)")]
        public string MEcAddress
        {
            get
            {
                return this._MEcAddress;
            }
            set
            {
                if ((this._MEcAddress != value))
                {
                    this.OnMEcAddressChanging(value);
                    this.SendPropertyChanging();
                    this._MEcAddress = value;
                    this.SendPropertyChanged("MEcAddress");
                    this.OnMEcAddressChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcSupplierEAN", DbType = "VarChar(50)")]
        public string MEcSupplierEAN
        {
            get
            {
                return this._MEcSupplierEAN;
            }
            set
            {
                if ((this._MEcSupplierEAN != value))
                {
                    this.OnMEcSupplierEANChanging(value);
                    this.SendPropertyChanging();
                    this._MEcSupplierEAN = value;
                    this.SendPropertyChanged("MEcSupplierEAN");
                    this.OnMEcSupplierEANChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcContact", DbType = "VarChar(50)")]
        public string MEcContact
        {
            get
            {
                return this._MEcContact;
            }
            set
            {
                if ((this._MEcContact != value))
                {
                    this.OnMEcContactChanging(value);
                    this.SendPropertyChanging();
                    this._MEcContact = value;
                    this.SendPropertyChanged("MEcContact");
                    this.OnMEcContactChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcTelNo", DbType = "VarChar(50)")]
        public string MEcTelNo
        {
            get
            {
                return this._MEcTelNo;
            }
            set
            {
                if ((this._MEcTelNo != value))
                {
                    this.OnMEcTelNoChanging(value);
                    this.SendPropertyChanging();
                    this._MEcTelNo = value;
                    this.SendPropertyChanged("MEcTelNo");
                    this.OnMEcTelNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcFaxNo", DbType = "VarChar(50)")]
        public string MEcFaxNo
        {
            get
            {
                return this._MEcFaxNo;
            }
            set
            {
                if ((this._MEcFaxNo != value))
                {
                    this.OnMEcFaxNoChanging(value);
                    this.SendPropertyChanging();
                    this._MEcFaxNo = value;
                    this.SendPropertyChanged("MEcFaxNo");
                    this.OnMEcFaxNoChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEdReceivedDate", DbType = "VarChar(50)")]
        public DateTime MEdReceivedDate
        {
            get
            {
                return this._MEdReceivedDate;
            }
            set
            {
                if ((this._MEdReceivedDate != value))
                {
                    this.OnMEdReceivedDateChanging(value);
                    this.SendPropertyChanging();
                    this._MEdReceivedDate = value;
                    this.SendPropertyChanged("MEdReceivedDate");
                    this.OnMEdReceivedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcException", DbType = "VarChar(50)")]
        public string MEcException
        {
            get
            {
                return this._MEcException;
            }
            set
            {
                if ((this._MEcException != value))
                {
                    this.OnMEcExceptionChanging(value);
                    this.SendPropertyChanging();
                    this._MEcException = value;
                    this.SendPropertyChanged("MEcException");
                    this.OnMEcExceptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEcFileRef", DbType = "VarChar(50)")]
        public string MEcFileRef
        {
            get
            {
                return this._MEcFileRef;
            }
            set
            {
                if ((this._MEcFileRef != value))
                {
                    this.OnMEcFileRefChanging(value);
                    this.SendPropertyChanging();
                    this._MEcFileRef = value;
                    this.SendPropertyChanged("MEcFileRef");
                    this.OnMEcFileRefChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MEiAction", DbType = "VarChar(50)")]
        public int MEiAction
        {
            get
            {
                return this._MEiAction;
            }
            set
            {
                if ((this._MEiAction != value))
                {
                    this.OnMEiActionChanging(value);
                    this.SendPropertyChanging();
                    this._MEiAction = value;
                    this.SendPropertyChanged("MEiAction");
                    this.OnMEiActionChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class AddToClaimsAuditLogResult
    {

        private System.Nullable<int> _ErrorCode;

        private string _ErrorDescription;

        public AddToClaimsAuditLogResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ErrorCode", DbType = "Int")]
        public System.Nullable<int> ErrorCode
        {
            get
            {
                return this._ErrorCode;
            }
            set
            {
                if ((this._ErrorCode != value))
                {
                    this._ErrorCode = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ErrorDescription", DbType = "NVarChar(100)")]
        public string ErrorDescription
        {
            get
            {
                return this._ErrorDescription;
            }
            set
            {
                if ((this._ErrorDescription != value))
                {
                    this._ErrorDescription = value;
                }
            }
        }
    }

    public partial class IsCapturedClaimResult
    {

        private int _Column1;

        public IsCapturedClaimResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Name = "", Storage = "_Column1", DbType = "Int NOT NULL")]
        public int Column1
        {
            get
            {
                return this._Column1;
            }
            set
            {
                if ((this._Column1 != value))
                {
                    this._Column1 = value;
                }
            }
        }
    }

    public partial class GetVendorSupplierDetailsResult
    {

        private int _SPID;

        public GetVendorSupplierDetailsResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SPID", DbType = "Int NOT NULL")]
        public int SPID
        {
            get
            {
                return this._SPID;
            }
            set
            {
                if ((this._SPID != value))
                {
                    this._SPID = value;
                }
            }
        }
    }

    public partial class editClaimResult
    {

        private string _returnvalue;

        private string _errormessage;

        public editClaimResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_returnvalue", DbType = "VarChar(50) NOT NULL", CanBeNull = false)]
        public string returnvalue
        {
            get
            {
                return this._returnvalue;
            }
            set
            {
                if ((this._returnvalue != value))
                {
                    this._returnvalue = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_errormessage", DbType = "VarChar(500) NOT NULL", CanBeNull = false)]
        public string errormessage
        {
            get
            {
                return this._errormessage;
            }
            set
            {
                if ((this._errormessage != value))
                {
                    this._errormessage = value;
                }
            }
        }
    }


}
#pragma warning restore 1591
