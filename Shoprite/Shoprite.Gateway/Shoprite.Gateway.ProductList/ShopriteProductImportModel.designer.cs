#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shoprite.Gateway.ProductList
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TradingBridgeDomain")]
	public partial class ShopriteProductImportModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    #endregion
		
		public ShopriteProductImportModelDataContext() : 
				base(global::Shoprite.Gateway.ProductList.Properties.Settings.Default.TradingBridgeDomainConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteProductImportModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteProductImportModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteProductImportModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopriteProductImportModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteShopriteProducts")]
		public int DeleteShopriteProducts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DivisionId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> divisionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), divisionId);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Data.Linq.Binary _Version;
		
		private string _Ean;
		
		private string _SupplierCode;
		
		private string _Description;
		
		private string _ContainedEan;
		
		private string _ContainedSupplierCode;
		
		private string _ContainedDescription;
		
		private int _PackUnits;
		
		private string _PackUnitOfMeasure;
		
		private decimal _CostPrice;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<decimal> _Mass;
		
		private System.Nullable<int> _PhysUnitOfMeasure;
		
		private System.Nullable<decimal> _Length;
		
		private System.Nullable<decimal> _Height;
		
		private System.Nullable<decimal> _Width;
		
		private System.Nullable<int> _MaxTemp;
		
		private System.Nullable<int> _MinTemp;
		
		private System.Nullable<int> _ShelfLife;
		
		private string _SpecialStorageInstructions;
		
		private System.Nullable<int> _MaxHumidity;
		
		private System.Nullable<int> _MinHumidity;
		
		private System.Guid _Division_Id;
		
		private string _Name;
		
		private System.Nullable<decimal> _Divisor;
		
		private EntityRef<Division> _Division;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnEanChanging(string value);
    partial void OnEanChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnContainedEanChanging(string value);
    partial void OnContainedEanChanged();
    partial void OnContainedSupplierCodeChanging(string value);
    partial void OnContainedSupplierCodeChanged();
    partial void OnContainedDescriptionChanging(string value);
    partial void OnContainedDescriptionChanged();
    partial void OnPackUnitsChanging(int value);
    partial void OnPackUnitsChanged();
    partial void OnPackUnitOfMeasureChanging(string value);
    partial void OnPackUnitOfMeasureChanged();
    partial void OnCostPriceChanging(decimal value);
    partial void OnCostPriceChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnMassChanging(System.Nullable<decimal> value);
    partial void OnMassChanged();
    partial void OnPhysUnitOfMeasureChanging(System.Nullable<int> value);
    partial void OnPhysUnitOfMeasureChanged();
    partial void OnLengthChanging(System.Nullable<decimal> value);
    partial void OnLengthChanged();
    partial void OnHeightChanging(System.Nullable<decimal> value);
    partial void OnHeightChanged();
    partial void OnWidthChanging(System.Nullable<decimal> value);
    partial void OnWidthChanged();
    partial void OnMaxTempChanging(System.Nullable<int> value);
    partial void OnMaxTempChanged();
    partial void OnMinTempChanging(System.Nullable<int> value);
    partial void OnMinTempChanged();
    partial void OnShelfLifeChanging(System.Nullable<int> value);
    partial void OnShelfLifeChanged();
    partial void OnSpecialStorageInstructionsChanging(string value);
    partial void OnSpecialStorageInstructionsChanged();
    partial void OnMaxHumidityChanging(System.Nullable<int> value);
    partial void OnMaxHumidityChanged();
    partial void OnMinHumidityChanging(System.Nullable<int> value);
    partial void OnMinHumidityChanged();
    partial void OnDivision_IdChanging(System.Guid value);
    partial void OnDivision_IdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDivisorChanging(System.Nullable<decimal> value);
    partial void OnDivisorChanged();
    #endregion
		
		public Product()
		{
			this._Division = default(EntityRef<Division>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ean", DbType="NVarChar(14) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Ean
		{
			get
			{
				return this._Ean;
			}
			set
			{
				if ((this._Ean != value))
				{
					this.OnEanChanging(value);
					this.SendPropertyChanging();
					this._Ean = value;
					this.SendPropertyChanged("Ean");
					this.OnEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(14)", UpdateCheck=UpdateCheck.Never)]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainedEan", DbType="NVarChar(14)", UpdateCheck=UpdateCheck.Never)]
		public string ContainedEan
		{
			get
			{
				return this._ContainedEan;
			}
			set
			{
				if ((this._ContainedEan != value))
				{
					this.OnContainedEanChanging(value);
					this.SendPropertyChanging();
					this._ContainedEan = value;
					this.SendPropertyChanged("ContainedEan");
					this.OnContainedEanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainedSupplierCode", DbType="NVarChar(14)", UpdateCheck=UpdateCheck.Never)]
		public string ContainedSupplierCode
		{
			get
			{
				return this._ContainedSupplierCode;
			}
			set
			{
				if ((this._ContainedSupplierCode != value))
				{
					this.OnContainedSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._ContainedSupplierCode = value;
					this.SendPropertyChanged("ContainedSupplierCode");
					this.OnContainedSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContainedDescription", DbType="NVarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string ContainedDescription
		{
			get
			{
				return this._ContainedDescription;
			}
			set
			{
				if ((this._ContainedDescription != value))
				{
					this.OnContainedDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ContainedDescription = value;
					this.SendPropertyChanged("ContainedDescription");
					this.OnContainedDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackUnits", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PackUnits
		{
			get
			{
				return this._PackUnits;
			}
			set
			{
				if ((this._PackUnits != value))
				{
					this.OnPackUnitsChanging(value);
					this.SendPropertyChanging();
					this._PackUnits = value;
					this.SendPropertyChanged("PackUnits");
					this.OnPackUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackUnitOfMeasure", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string PackUnitOfMeasure
		{
			get
			{
				return this._PackUnitOfMeasure;
			}
			set
			{
				if ((this._PackUnitOfMeasure != value))
				{
					this.OnPackUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._PackUnitOfMeasure = value;
					this.SendPropertyChanged("PackUnitOfMeasure");
					this.OnPackUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostPrice", DbType="Decimal(12,4) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal CostPrice
		{
			get
			{
				return this._CostPrice;
			}
			set
			{
				if ((this._CostPrice != value))
				{
					this.OnCostPriceChanging(value);
					this.SendPropertyChanging();
					this._CostPrice = value;
					this.SendPropertyChanged("CostPrice");
					this.OnCostPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mass", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Mass
		{
			get
			{
				return this._Mass;
			}
			set
			{
				if ((this._Mass != value))
				{
					this.OnMassChanging(value);
					this.SendPropertyChanging();
					this._Mass = value;
					this.SendPropertyChanged("Mass");
					this.OnMassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysUnitOfMeasure", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PhysUnitOfMeasure
		{
			get
			{
				return this._PhysUnitOfMeasure;
			}
			set
			{
				if ((this._PhysUnitOfMeasure != value))
				{
					this.OnPhysUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._PhysUnitOfMeasure = value;
					this.SendPropertyChanged("PhysUnitOfMeasure");
					this.OnPhysUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Decimal(10,3)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxTemp", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaxTemp
		{
			get
			{
				return this._MaxTemp;
			}
			set
			{
				if ((this._MaxTemp != value))
				{
					this.OnMaxTempChanging(value);
					this.SendPropertyChanging();
					this._MaxTemp = value;
					this.SendPropertyChanged("MaxTemp");
					this.OnMaxTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinTemp", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MinTemp
		{
			get
			{
				return this._MinTemp;
			}
			set
			{
				if ((this._MinTemp != value))
				{
					this.OnMinTempChanging(value);
					this.SendPropertyChanging();
					this._MinTemp = value;
					this.SendPropertyChanged("MinTemp");
					this.OnMinTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShelfLife", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ShelfLife
		{
			get
			{
				return this._ShelfLife;
			}
			set
			{
				if ((this._ShelfLife != value))
				{
					this.OnShelfLifeChanging(value);
					this.SendPropertyChanging();
					this._ShelfLife = value;
					this.SendPropertyChanged("ShelfLife");
					this.OnShelfLifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialStorageInstructions", DbType="NVarChar(40)", UpdateCheck=UpdateCheck.Never)]
		public string SpecialStorageInstructions
		{
			get
			{
				return this._SpecialStorageInstructions;
			}
			set
			{
				if ((this._SpecialStorageInstructions != value))
				{
					this.OnSpecialStorageInstructionsChanging(value);
					this.SendPropertyChanging();
					this._SpecialStorageInstructions = value;
					this.SendPropertyChanged("SpecialStorageInstructions");
					this.OnSpecialStorageInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxHumidity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MaxHumidity
		{
			get
			{
				return this._MaxHumidity;
			}
			set
			{
				if ((this._MaxHumidity != value))
				{
					this.OnMaxHumidityChanging(value);
					this.SendPropertyChanging();
					this._MaxHumidity = value;
					this.SendPropertyChanged("MaxHumidity");
					this.OnMaxHumidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinHumidity", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> MinHumidity
		{
			get
			{
				return this._MinHumidity;
			}
			set
			{
				if ((this._MinHumidity != value))
				{
					this.OnMinHumidityChanging(value);
					this.SendPropertyChanging();
					this._MinHumidity = value;
					this.SendPropertyChanged("MinHumidity");
					this.OnMinHumidityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division_Id", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Division_Id
		{
			get
			{
				return this._Division_Id;
			}
			set
			{
				if ((this._Division_Id != value))
				{
					if (this._Division.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDivision_IdChanging(value);
					this.SendPropertyChanging();
					this._Division_Id = value;
					this.SendPropertyChanged("Division_Id");
					this.OnDivision_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Divisor", DbType="Decimal(12,4)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Divisor
		{
			get
			{
				return this._Divisor;
			}
			set
			{
				if ((this._Divisor != value))
				{
					this.OnDivisorChanging(value);
					this.SendPropertyChanging();
					this._Divisor = value;
					this.SendPropertyChanged("Divisor");
					this.OnDivisorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Product", Storage="_Division", ThisKey="Division_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Division Division
		{
			get
			{
				return this._Division.Entity;
			}
			set
			{
				Division previousValue = this._Division.Entity;
				if (((previousValue != value) 
							|| (this._Division.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Division.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Division.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._Division_Id = value.Id;
					}
					else
					{
						this._Division_Id = default(System.Guid);
					}
					this.SendPropertyChanged("Division");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Divisions")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Data.Linq.Binary _Version;
		
		private string _Name;
		
		private int _Kind;
		
		private System.Guid _Organization_Id;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnKindChanging(int value);
    partial void OnKindChanged();
    partial void OnOrganization_IdChanging(System.Guid value);
    partial void OnOrganization_IdChanged();
    #endregion
		
		public Division()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(35) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_Id", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid Organization_Id
		{
			get
			{
				return this._Organization_Id;
			}
			set
			{
				if ((this._Organization_Id != value))
				{
					this.OnOrganization_IdChanging(value);
					this.SendPropertyChanging();
					this._Organization_Id = value;
					this.SendPropertyChanged("Organization_Id");
					this.OnOrganization_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Division_Product", Storage="_Products", ThisKey="Id", OtherKey="Division_Id")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Division = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Division = null;
		}
	}
}
#pragma warning restore 1591
